this is the first video of our new series where we will discuss nosql databases uh like cassandra firestore and some more databases like mongodb so let's start with the first series here we will discuss about the differences between sql databases like rdbms versus nosql databases my name is and i welcomes you on our youtube channel decode ides the code its provides you single learning platform for multiple it technologies sql vs nosql this is one of the topic which is getting lots of attention nowadays because of their different usage different types different functionalities and benefits let's explore what are the major differences between both of them and what are the better use of them rdbms and no sequel rdbms or sql is best for low velocity of data whereas nosql is best for handling high velocity of data velocity of data is one of the v factors for big data that means velocity it means how much data is generated when system performs the transactions in rdbms it's a transactional database system and generation of data is quite low when we compare it with the nosql where the amount of data is too much because of too much complex transactions or queries or business logics and analysis reports it generates too much kind of data data drives from one location to few location in rdbms whereas in nosql data moves from many location to many location what does it mean it means in sql one node is primary overlay one is primary reason which is basically facing your customer application or user load all new data is coming to that reason and that reason is sending that data to other regions is an application or as a read-only copies whereas in nosql all locations are equal any location can get the data read that and it will be replicated later support complex queries business logics using json is the characteristics of rdbms we have lots of functions lots of query parameters there is no sequence it supports only simple queries and do not support joy single point of failure rdbms is single point of failure that means if anything happens to one node when you are running a single node distance or anything happens to a particular reason your system will go down all your application your database will face the downtime whereas in nosql it's a completely decentralized database all regions all not having the same kind of data same kind of set up so in case any of the node goes down any of the region goes down it will not affect your application or your user experience the system will keep running fine or remaining environment remaining nodes handling data in low to moderate volume that means in rdbms the amount of data or site or the size of database is not very much we hardly see a few terabyte systems in otp system whereas in all that we found around uh two-digit terabyte databases but when we talk about nosql database it's a big data we are talking about hundreds of terabytes of data is laying there centralized deployments as we discussed one of the node or one of these then is the primary for that system so you need to start your deployment from that reason or not only whether is in los equal or nodes are equal so you can start your deployments from any node or you can even do it to that panel transaction can write only at one locations connection can be returned from multiple locations same as above only one node can write the transaction or a particular one reason and that will be applicated to other locations whereas in nosql you can write the transaction from any of the node rdbms gives you zeed scalability because you can add multiple nodes and you can just zip data from there where there is no sql when you add a node it gives you read and write both scalability because you can do the both operations from them support vertical scaling that means when you feel you need more power more resources for the processing you need to add a power or the resources to the server like more cpu more memory more network bandwidth whereas nosql supports the horizontal scaling you need not to add the resources you can just add an additional node there if support t sql and p sequel like languages for the programming whereas nosql supports c sequel cassandra coil language g sequel gold kayak language kind of languages for programming in rdbms data is stored in tables whereas in nosql there are different storage formats are available like documents graph key value and a customer in rdms the course has fixed properties when you create a table you have the fixed number of columns which are the properties of the table where is it no sequel properties are not fixed they are dynamic you can add them delete them at any time schema is fixed in nosql schema is dynamic and flexible rdbms support the in-memory system there is time when your memory is not sufficient to handle all the load or for some particular complex tables or the highly connection tables you want them to load in memory every time so we have this in memory features in rdbms for that whereas in nosql it comes up with the integrated caches system so you need not to worry about that performance thing rdbms are of two types oltp and olap one is connection processing one is analytical processing where there is no sql arrow primarily four types key value pair document based column based graph and one more type is their multimodal which is basically a combination of our four meter types idmm system works on acid properties atomicity consistency isolation and durability whereas nosql works on cap theorem consistency availability and partition tolerance some of the major products which are available in rdbms uh sql server oracle porsche is my sequel amazon or informex db2 where there is in no sql some of the major products are cassandra cloud firestore mongodb couchdb and amazon dynamodb hope you like this video and the basic differentiation between sql and nosql i hope it gives you a rough idea what are the major differences what can be the proper use cases where you can use them because if someone says then nosql is the new one and it will replace the rda member systems completely no it's not possible even though you can't use this same type of nosql database everywhere we have four to five types of nosql database because they have different properties and used on different locations different areas on basis of their usability so nosql is not a replacement of rdbms but it's a requirement of our upcoming market upcoming requirements and it's going to a parallel division of parallel arm of our database environment thanks for watching for any questions please leave comment on videos or contact us [Music] [Applause] [Music] [Applause] [Music] [Applause] [Music] you