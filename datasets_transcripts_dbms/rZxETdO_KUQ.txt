Hello friends, welcome to Gate Smashers The topic is one to many
relationship in database. Before starting the Video, I request my subscribers to please subscribe to my channel. And please press the bell button so that you can get the latest notifications. So one to many relationship is very important topic in the database. Actually, this topic comes under ER modelling in a entity relationship. Generally, whenever we cover this topic either from books or from anywhere else. Then we see a general overview that  this is a one-to-many relationship,  this is its example. We represent it like this. That's it. We just go the two to three levels. But actually this topic is very deep. means. The concept in it,  is very important to you & it is also important in the relational model. It is also important for
your interview point of view. It is also very important for your UGC NET and GATE exams. So i'm here, what is the one-to-manny relationship? Or what its example or how we represents it,  not going to be discus all these things. It is obviously important, But more important than that is Actually the concept in it. Or we can say that we are going to cover this entire topic on the basis of the type of questions which come in GATE, in UGC NET exam or in other competitive exams. So in One to many relationship, firstly I'll clear  a diagram to you. That we have customer and order, two entities and there is a relationship, gives. Means customer gives the order now here there is customer There is give and there is order. To represent the ,One to many relationship. What did we do? Customer can give many Orders. So its is given, that's always given. That my relationship is one to many. If this thing is given or I know this thing, then how do we solve it after that? So first of all you see, customer can give many orders. Or One Order, a Particular Order can be given by one customer only. You can say it any ways, because here is one to many orders But from here, corresponding to an order, You will get only one customer. Now How do you represent it? by writing 1 to infinity or 1 to M. There are various representation But the representation is not a actual task. The Actual task is something else. What do we do after that, when we convert this ER model into a relational model. We know that the ER model
is used for designing purpose,  let's design the database. But when we physically implement it, which model do we need? The relational model. & what do we use in the relational models? Tables. When we convert it into tables. So we made a table of customer tables here. We created a table of customer entity We made a table of order entity. Give is also an entity. Actually this is the relationship. We made table of that relationship as well. Now here whatever the attribute they have, I have converted those attributes
into the attribute in the table. now here I have the ID in the customer table. This is the customer table. So what is the ID in the customer table? Primary key. this is the Primary key. And here my order number is primary key. So as far now, you assume that this ia given. Even if It is not given, Well you have to believe, because in every single table,
one primary key definitely there. And there is only one primary key So that thing will either given Or you have to assume that it is ID in this table. And order number is in this table. But even this is not the important part. What is the Important Part? Now we comes in the relationship table. In the relationship table, what will be the attributes? The first question that comes up is which are the attributes
in the relationship table? So in the relationship table, there will be the two
attributes which is mandatory. One is id. How is this ID working in this table? as an foreign key. And these are taking the reference from from this ID. From this Primary key and here is the order number & this order number is taking the reference this is also a foreign key. And it's taking the reference From this order number. Because we always takes
reference from Primary key. So in this table, my primary key is this. My customer table is this & order table is this. How many foreign keys do I have here? I have two foreign keys, one is ID and another is order number. And about the foreign key, how does it work and what its uses? That Video on foreign key, I have already uploaded. You can check this video to see, what is the function
of the foreign key here? And here's a third attribute, date. So meams, many times ask here, Can a relationship also have an attribute? Yes. The entity has the attributes, & the relationship can also have an attribute and we called that attribute, Descriptive attributes. That is called a descriptive attribute. So this is a descriptive attribute, so we have taken date
as a descriptive attribute, if you want to take it, otherwise, these two attributes will definitely come. Now let's talk here. In this table the foreign key has been found, I have two foreign keys, but which is the primary key in this table This is my first question. And I also wrote it here that primary key means which will be the primary in this table? To find out, you have to first look at,  what the relationship is. One to Many. So if we insert some data into it. Then let's see, this is a customer table. So If I insert some data in the customer table, how we will do? Let's say,  there is a customer C1 The customer name is A. & it belongs to jalandar, Let's put some data C2, B, Delhi. Let's say,  C3, C,  Mumbai. Let's say, C4, A, Mumbai. There are various customers Here I also put the data in the order.  In the order I have the order O1 Order name. I have Let's say Order O2 Order O3 And take any item as O1, let's say bucket Let's say, take shoes here So different orders that you can place here. Shirt. Our main funda here
is different different orders. Let's say cost is Rs1000 Rs 2000 Rs 1500. Here take the jeans. And I have it, let's say Rs2000. So, I have some orders that the customer gave. Here I just have the order table. What do I know from this order table Order number, order
name & the cost of the order. And from this table, I will know, who is the customer and customer's details. So it's giving me customer details. It's giving me the order details. But which customer has placed which order? Who will tell? This relationship table. so how do we write it? Relationship is One to many, means a customer can give many orders. So if there is a customer C1. So we can say, C1 can give many orders. Then let's say C1 has ordered O1 and C1 has ordered O2. will come this way, because what is this, relationship, One to many. Means a customer can give many orders. So if the customer is giving many order, then how will the data come? That's the way, I have this side let's say customere C2 And his order is O3 Here, customer C2 and his order is O4. This is the way of putting the data and any date i can mention here, but what is the main concept here is that I have different IDs, And here i have orders. But if you look at this ID. So here, IDs are repeating. Why is it repeating? because what's the
relationship i have,One to Many. Means a Customer can give many orders. So if Customer can give many orders. Then corespending to the customer
multiple rows will come here.  Values of the customer are multiples. But the value of the order
will always be unique. Why? because its one to many means a customer can give many orders. But the particular order related to only one customer. That's what happened, one to many A customer can give many orders. But order can be given by one customer only.  so if this order is O1. If O1 has ordered By C1 so no one else can order O1 Because there is One to Many. if it happened, then it would become Many to Many. So if you look carefully here. So the data of this column is repeating. But in this column, data will never repeat. If I ask here, who can you make the
primary key in this table? So you can clear cut write here that in this table, Order number will act as a primary key. Or you can say candidate key as well. So in the relationship table. Which one i have? Order number. What is the order number that is  act as a primary key here. So you can remember it like this too, many times this question has
come in GATE and UGC NET exam. Whenever you have a one-to-many order, so on the many side. Because many is this side. So wherever there are many Whatever primary key in Many's side Same primary key will be in the foreign key Or in the relationship table. You Always remember that, so here order number is act as a primary key. One of my question is solved here. There's another question. There's another question, what's that question? If Here I want to reduce these tables, reduce the number of table So can I reduce these number of tables? How many tables are there? three So can I reduce from three? Yes I can convert them into two tables, which I told you in
One-to-one relationship as well. Now if I want to reduce these three into two. So how can i reduce? By merging these two tables, which is the primary key in this table, the order number. which is the primary key in this table, order number. so what can you do with these two tables? Merge And by merging them, you can design a new table like this Let's say We merged these two, So what will come? ID From here we take the order number. From here we take Item number. Item name sorry. And one is cost I have So, here it will come by combining them. Date will also come Because the date is also there in this table. You can combine these two tables. And how will the data come, let's say there is C1 Who placed the order O1? C2 , C1 O2, C2 and you're going to write as it is C2 O4, And let's say that if there
are more orders in this table, this table has more value,
if there is more value. You can write them here,  because in this table also order number will be the primary key. That's why we are combining them, because both the table has same primary Key So wherever there are same primary key. Why are you creating two tables. you can convert them into one table. Many times, this type of questions, can also ask in an entity relationship. Can we merge give and order? Yes. can we merge customer and give? No. Customers and give cannot be merged. Because this value is being repeated in it. So it is not a primary key. Here it is primary key but here it is not primary key. So you can't merge these two. But you'll merge these two. can convert into a table. So one table i have this The second table I have this. So that's why when we coding it physically, At that time also, we can write it by merging it So here I am getting two
answers. One is, in this table Which will be the primary? On the many side, Wherever the many is, that side will be the primary key.. And second Can I merge these tables,  reduce it from three to two? Yes But again on many side. Merge the side where M is written. So this is one-to-many relationship. Same as it is many to one. If I do the Manny to One, means this side many & that side will be one. Then how will you merge? where there are many. Always remember this, Many times this question
came, recently this question came  in the NET exam. So whenever this type of questions come, so without taking any time. you will answer it as you see it. So, obviously Somewhere here
my time is also being saved This concept is very
important concept of database, but we are generally many times in books, we do not read it properly and we missed out these deep concept. But this concept is very important. You remember it. This is more than enough about What is one-to-many relationship? & the Many to One is also very similar to that. Always remember the point,  where there is many, The same one. That primary key Will be the primary key
of the relationship table And You can merge both the tables on the side where there are many. We will further discuss
more questions about it. But this is all about concept of One to Many Relationship in DBMS. Thank you.