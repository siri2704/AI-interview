hey guys I hope you guys are doing good today and welcome to the today's video so today we are going to talk about something on database so we will be talking about SQL versus no SQL and data models and AWS RDS and dynamodb so please do watch out this video completely so that you will be getting an understanding about like how data is being segregated what all the differences what are all the uh whatever we have data models we have so uh without wasting any time just get into the video okay so the first thing that we are going to talk about SQL versus nosql so first you have to understand what's the SQL and what is nosql so just get into it so SQL SQL is a database or relational database which means they are organized data into tables with each table consisting of rows and column so basically SQL explains the structure query language it uses a schema which is a blueprint that defines the structure of the database including the data types relationship between the tables and all those things the SQL database are known for the ability to handle a complex queries and their strong support for transactions making them a good choice for application that requires data integrity such as financials applications e-commerce applications and all those things actually so SQL this is what exactly the sequel so let's get into the nosql okay so no SQL database on other hand are non-relational database that stores data in more flexibles and schema less manner okay so nosql database uses a variety of data models such as document oriented key value column family or graph and depending upon the need of application so uh the nosql database are known for the ability to scale horizontally meaning they can handle a large amount of data and traffic by adding more servers to the systems okay so on another another end the SQL is actually its scale at the vertical layer okay so it doesn't scale on the horizontal layer so SQL database are a good choice no sorry the nosql database is the good choice for application that requires a high scalability performance such as this social networking gaming big data analytics and all those peoples uses this kind of not SQL no SQL the type of database okay so let's get into it another one thing that is on data model for SQL okay so data model for SQL so it's a hierarchical data model We have basically we have three models on its hierarchical data model another one is network data model and third one is relational data model so most frequently used is relational data model first we will talk about what is hierarchical data model and then we can talk about Network one and then we will go ahead for the relational so hierarchical data model so in this model data is organized in a hierarchical structure with single parent for each record so each parent can have a multiple childrens but each child has only one parent so this model is used in a databases like IBM Information Management Systems it's very very popular for IMS okay so let's get into it what is called network data model so network data model this data is organized in a network structure where each record can have multiple parents and children's records are connected through a sets of relationship called pointers so this model is used in a data based on integrated data store IDs and idms Okay the third point which is so popular which is all about relational data model so in this data model data is organized in a table with rows and columns its resemblance of the spreadsheet Excel spreadsheet each table has a unique key that identifies the each row and relationship between the table are defined through your primary and foreign key so this model is used in most modern databases like MySQL Oracle DB SQL Microsoft SQL servers postgrad sqls and all those things so basically it's a relationalship data model so SQL is not equal to uh relationship data models it has a lot of data models okay we have a network and we have hierarchical so relation database model is so popular because it handles a lot of complex queries and it has a lot of ability to uh have a good transaction processing and all those things it has actually okay so let's get into the data model for nosql okay so nosql data model so this is uh have something called document data model in this model data is stored in a Json XML bjson document that contains the key value paths or nested structure okay so each document can have a different structure and related documents can have be grouped together so this model is used in a database like mongodb couchbase and Apache couchbase DB and all those things okay so we will talk about key value data model okay this is everyone knows key value means it's actually the redis and all those things it comes right so in this model data is stored in a set of key and value pairs where the value can be uh simple data type like a string or a number or complex data structure like a document or array so this model is used in a database like redis Amazon dynamodb a react and then we have what we're going to have a mem cached and all those things we have okay okay column family data model so this is uh very very popular for the Cassandra Amazon simple DB and all those things so in this model data is stored in a column families which are groups of column that are stored together okay groups of columns are stored together so each column contains a value and multiple columns can be grouped together into your rows this is pretty complex and you will be scratching your head right so this model is used in a database like Apache Cassandra hbase and Amazon simple DB and all those places it uses this kind of model graph data model okay so graph data model it's pretty new so data is stored as the nodes and edges where nodes represent entities and edges represent relationship between them okay so nodes and the edges okay it's a kind of a circle and we can easily map data to it okay this model is used in a database like neo4j Korean DB uh arengo DB and all those things so we will talk about something on AWS RDS versus dynamodb core differences so the first one which we're going to talk about is data model Summits on RDS is a relational database service which uses the SQL and organize the data into tables with columns and rows and dynamodb is very simple on another and it's a nosql database service which stores the real time key value document oriented models and other kind of things that we have right okay scalability so RDS provides a vertical scaling which means that you can increase the power of single database instance you can add a lot of lot of CPUs you can add a lot of cores or memories and lot of things actually on dynamodb it's complete and horizontal scaling which means you can add a lot of servers into the cluster to increase the throughput and the capacity pricing so RDS pricing is based on the instance type and storage capacity while dimor dynamodb pricing is based on the provision throughput capacity storage capacity and the data transfer data durability so dynamodb is designed to provide 99.99 percentage durability for all data store while RDS durability is based on underlying storage service and used data consistency so RDS provides a strong consistency which ensures that all data is up to date across all nodes dynamodb however provides an eventual consistency read by default which means the data may not be immediately up to date on all nodes query languages so RDS uses SQL query for data while dynamodb uses a property query languages called AWS query API transactions so RDS supports acid basically atomicity consistency isolation and durability transactions while dynamodb does not provide multi-table transactions secondary indexes dynamodb supports Global and local secondary indexes while RDS supports only the local secondary indexes okay now let's talk about something on the use cases so Amazon RDS is suitable for application that requires a relational database scheme uh while dynamodb is suitable for application that requires a flexible schema and high performance at scale managed service so RDS is fully managed service that handles database Administration tasks while dynamodb is fully managed service that handles both Administration and the scaling as well that's all I have guys I hope you might have enjoyed this particular lecture thank you so much we'll see you on another good video thank you so much bye