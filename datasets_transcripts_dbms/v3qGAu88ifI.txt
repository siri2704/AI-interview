in last class we have seen ear diagrams now let us see the er2 relational mapping we have already seen the database design process within that first one is requirements analysis second one conceptual design third one logical design in conceptual design we will draw the ear diagrams based on requirements in logical design convert this er diagrams into tables in relational model the tables can be directly implemented on the database let's see this er2 relational mapping we can divide this entire process into seven steps mapping of regular entity types second one mapping of we can see types third one mapping of one to one relationship types fourth one mapping of one to n relationship types fifth one many too many relationship types sixth one mapping of multi-valued attributes and last one mapping of nrl relationship types in previous class we learned how to design this er diagrams let's see how to convert this er diagrams into relational database tables first step is conversion of regular entity types for each regular or strong entity type in year diagram create a new relation r that includes all the simple attributes of entity type e then choose one of the key attributes of that entity type e as the primary key for newly created relation r if chosen key of e is composite the set of simple attributes that form it will together form the primary key of r see here strong entity means the entity which have the primary key is called strong entity this employee which has the primary key ssn and department which has the primary key attributes name and number and this project is also having the primary key attributes name and number these three are the strong entities within this company database so we need to convert this employee department and project now here to convert this employee we need to create new table then we need to include all these attributes in the new table for employee this name is composite attribute so we need to include the simple attributes first name middle name and last name then ssn birth date address sender and salary all these are the attributes of this empire for the department here we have two simple attributes name and number this one is the locations is the multivalued attribute we will cover that in step six so let us create department table with this two attributes department with the name and the number here name and number are the key attributes so anyone we can select as the primary key this t number selected as primary key so it is underlined like that in employee also ssn is the key attributes so we make this ssn as a primary key in this relation and then for project we have three attributes name number and location so with these three attributes you can create this project table but see here the department table this name and number both are key attributes we can select any one of them as a primary key for project this name and number are the key attributes so we can select this number as primary key attribute sp number as primary key attribute second step conversion of weak entities for each weak entity create a separate relation or include all simple attributes within the newly created table r then include primary key attribute of strong entity as a foreign key in newly created relation r then select the primary key of newly created table r is the combination of the primary key of the owner entity or strong entity with partial key of the weak entity for example if we take in this company database this dependent doesn't have any key attribute so it is the weak entity so for this we need to create new table dependent and we need to include all these simple attributes in this table as columns then include owner entity or the strong entity primary key here it is ssn in this newly created table as a foreign key dependent table with simple attributes dependent name then the birth rate and relationship and we need to add this assistant from the strong entity employee this strong entity primary key as a foreign key here this is the foreign which is coming from the employee primary key now primary key for this dependent table will be combination of these two foreign key of strong entity with partial key of this weak entity dependent name this combination is the primary key for this dependent table then conversion of one to one relationship for each one-to-one relationship identify the relations s and t that correspond to the entity type participating in relationship or modify one of these tables s or t choose one of the relations say s include the primary key of t in s as a foreign key and if is there any relationship attributes then include them in the table it is better to choose the energy type with total participation in r in the role of s means we need to modify the total participation side entity stable in our company database this manages is the one-to-one relationship so we need to convert that managers onto one relationship in this manager's relationship two entities are participating one is employee and department for employee we have already on table and for department also we already created this table with two attributes now we need to modify one of these two tables and let's say the two tables yes and t s should be the modify table so choose s as department because here department having the total participation with this manager's relationship so modify this department table we need to include primary key of this table t as a foreign key in this s so primary key of employee table is ssn we need to include this as a foreign key in the department so we are adding that in this department table ssn because this is the ssn of the manager so we are renaming it like manager assassin here we have one attribute for this relationship type so we need to include that in this modified table department conversion of one one-to-many relationship for each one to many relationship type modify the many side table then include if any attributes are there for that relationship type in our company database we have three one too many relationships supervision controls and workflow here we need to modify and say table suppose if we take the works for this employee should be modified if you take the controls this project should be modified means this project should be taken as a role as means modified table and this would be taken as role t so let us convert this three let us first convert this one oxford we need to modify this hand side so we need to modify this employee table we need to include this primary key of t side as foreign key in this employee table employee table is this one so we need to add foreign key department number which is coming from the department table this is the foreign key and second one this is also one-to-many relationship so we need to modify inside here one side and inside both are employ so we need to add primary key of this ssn in this table itself but which is the supervisor assassin so we will add this ssn primary key of employee as foreign key here as foreign key we converted this box for and supervision and controls is also one-to-many relationship so we need to convert this one also we need to modify this project table means we need to include this primary key of department in this project table project table initially it has three attributes now we need to include primary key of department so this d number is included as a foreign key from the department table after conversion of this three one too many relationships this employee table changed like this from the essential design and this project added with the number attribute for these three relationships there is no relationship attribute so we no need to include any attributes in that relations fifth one conversion of many-to-many relationship for each many-to-many relationship create a new relation yes then include primary keys of the two participating entities as foreign keys in the newly created table s then this primary key combination will form the primary key for this new table s if is there any simple attributes for that relationship type then include them as an attribute in this new table here we have one many to many relationship works on for this we need to create new table with two primary keys ssn and d number and we need to add this relationship attribute horse in that newly created table within this function two entities are participating employee and project we need to create new table works on and we need to add primary keys ssn and p number as a foreign keys in this newly created table works on and here we have relationship attribute house we need to include that within this table conversion of multi-valued attributes for each multi-valued attribute create a new relation or this newly created relation will contain the multivalued attribute and the primary key attribute of corresponding entity as the foreign key in newly created relation the primary key of this newly created table is the combination of multivalued attribute and the primary attribute of the corresponding entity here this department locations is the multi-valued attribute so for this we need to create new table and we need to include the primary key of this department in this newly created table this department has multi-valued attribute location so we need to create separate relation for this department locations we need to add this multi-valued attribute in this newly created table location and we need to add primary key of this entity this is the d number combination of this t number and the location is the primary key for this department location combination of this department number under the location is the primary key here conversion of an error relationship for each general relationship create new relation and include the all the primary keys of participating entities in that newly created table as a foreign keys and combination of all those primary keys will be the primary key for newly created table or we don't have any another relationship in this company database suppose we have one relationship supply with this three entities supplier project and part then for this supply we need to create new table supply we need to include primary keys of all these participating entities s name project name and part number this as foreign keys here and combination of all these foreign keys will be the primary key for this newly created table supply and here we have one attribute for this supply quantity we need to include that attribute in this newly created table correspondence between er and relational models er model entity is equivalent to the relation in relational model will represent this one to one r1 to n relationship times as foreign keys in relational model and we can represent this many too many relationships as new relation with two foreign keys in relational model and area relationship says new relation with n foreign keys means and foreign keys means here n is the number of participating and it is simple attribute we call attribute composite attributes set of simple component attributes to print multivalued attribute we will create new relation and we will add foreign key of owner entity value set will be called as domain and key attribute of your model primary key in relation to model this is the result of mapping the company your schema into relational database schema today we have seen the cr2 relational mapping in this first we need to convert regular entities then we need to convert weak entity types then we need to convert binary relationships then then we need to convert one to one binary relationships then one too many binary relationships fifth step many too many relationships and sixth step multi-valued attributes conversion if is there any nra relationships then we need to convert that an array relationship er model in next class we will see how to create these tables and all these constraints in correctly