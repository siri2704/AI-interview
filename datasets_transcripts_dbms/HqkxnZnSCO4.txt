now before we dive in into our real life example on how to perform normalization let's quickly recap on how to perform normalization so what are the steps that we need to do we need to identify the primary key of the table and we need to identify all of the functional dependencies in that table we need to then remove the dependencies and the multivalued attributes to refine the table to each level of the normal forms being an f1 and f2 and f3 are referring to first normal form second normal form and third normal form respectively now let's look at this example so this shows a typical real life example on how the data is going to be stored in the case of an excel sheet so we have all of this information order information containing order date customer id for that order first name and last name and address and all the customer information including the email we have the sales person salesperson name phone and then we have the product information like the description and price and then the quantity in that specific order now to normalize this we need to first check is this in first normal form or not now the first first normal form says that we need to make sure that there is no multivalued attributes which is the same again as every attribute is atomic and we need to identify the primary key now do we have any multivalued attributes in this case we don't see any cell with more than one value so talking about multi-value attributes check here and check here so we are done in this case now we need to identify the primary key can we have the order number as primary key now we have repeated order numbers so obviously not we have repeated entries in here repeated entries in here obviously repeated entries in all of the problems so we need a composite primary key composed of two or even more attributes so let's look at combining order number with something else since we don't have anything in here in the uh ids of this is the person and the ids of the customers let's look at something else that's an id what about product number because again if we use this sales person phone or the customer email it's going to be repeated but now this specific number is there repeated for the same order number the answer is no is this repeated for the same order number the answer is no is this repeated no so if we combine product number with order number can we get a unique combination in every single row of this excel sheet the answer is yes so we have defined our key as a composite key of order number and product number does this take me to the first normal form the answer is yes because the steps i need in the first normal form is to define my key and to take out any multi-valid attributes so what is going to be my table in the first normal form the answer is this is the table we will call it sales we will have all the columns in there but we need to make sure that we highlight the order id and the product number as our key so these need to have underlines underneath them and this is my first normal form now when i'm in the first normal form what's gonna be next do i just leave it like this the answer is we need to take it to the second normal form now this is my table in the first normal form and i have the keys highlighted so i have underlined order number and i need to underline product number so these are underlined now and this is in first normal form now to get it into the second normal form we will need to get rid of all of the partial dependencies first of all let's check up for all the dependencies we can see in this case let's check first for fall dependencies do we have any full dependency remember our full dependency is with any attribute relies on the full key so what is going to rely on order number combined with product number it is the quantity so we have a full dependency uh for the quantity on product number and a number so this is one dependency which is a full dependency we have any other full dependencies the answer is no we have any partial dependencies so partial dependency is when something relies on part of the key the answer is yes we have a partial dependency on the order number so the order number in this specific table now remember that we are dealing with what we currently have we don't jump in advance and say this is going to be the key later on no we just deal with what we currently have in this case now in this case we have the order number determining the order date customer id with the first name last name and the address and the customer information the order number is going to also tell me who's the sales person for that order containing the id and the name and the phone so this is one partial dependency we have another partial dependency something on the product number the answer is yes the product number is going to tell me the product description and the unit price for that product now what do i need to do with those dependencies i need to get them out of the table how do we do this by separating them into their own tables so to the to go to the second normal form again we said it is the first normal phone but we need to remove the partial dependencies and we will have the sales table containing order number product number and quantity this is one full dependency we will converge the partial dependencies to full dependencies by saying product is going to have product number product description and unit price and this is again a full dependency and then again order is going to contain the rest of the attributes and this is a full dependency and we need not to forget to underline our keys in this case which is going to help me and the next step so what is the next step my next step is to jump to the third normal form and the third normal form is nothing but the second normal form with transitive dependencies removed so let's list our tables first and remember that my keys our order number for this table product number for this table and order id for this table now do i have any transitive dependencies remember our transitive dependency is when a non-key attribute depends on another non-key attribute so let's look in this table do we have something that's a monkey attribute relying on the monkey attribute the answer is no do we have something like that in this table the answer is no do we have something like that in this table now look at the customer id isn't this going to tell me who's the customer name or first name last name address and all this information so all of those information here are going to be determined by the customer id so this is one of the transitive dependencies that i have in this table now if we look closely do we have any other transitive dependency what about sales person id does this tell me anything now the sales person id is what's going to determine the name and the phone of the sales person so that tells me that i have another transitive dependency now the rule says i will need to take these out create their own tables customer id is going to be a key for the customer table sales person id is going to be a key for this for the sales person table but then i need to keep customer id and sales person id in the order table as foreign keys this is the rule of how to get rid of transitive dependencies so my list of tables is going to be the following i will have order number order date customer id and sales person id and order table customer table is going to have customer id and all the customer information sales person is going to have the sales person id and all of the salesperson information now what about the keys we know for a fact that this is a primary key this is what we created as a primary key and this is what we created as a primary key but the rule says we need to keep this as foreign keys preferring or referencing the tables below now the only thing left is to combine all of those tables and to list them all together as follows now these are going to be my tables and i just need to highlight my keys in here so the sales is going to have this as a key this is going to be the key here this is going to be the key and this is going to be the key and this is going to be the key now let's not forget the foreign keys this is going to be a foreign key and this is going to be a foreign key now do you see how we moved from a traditional file processing system which is an excel sheet into a full database approach we have the full list of tables without going through the requirement collection without going through sentence analysis or document analysis we did not need to go through er diagrams we jumped right away into the relational model and then we can jump right away from this into coding this into our database and this is one of the uses of normalization