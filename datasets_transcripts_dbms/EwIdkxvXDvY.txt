good evening this is vishali in previous session we discuss about transaction States and asset properties with examples I have mentioned complete database management system playlist Link in below description box now in this session we will discuss about the next most important topic that is schedule here we will discuss about types of schedule serial and non-serial schedule with examples and difference between that this is one of the most important topic for your examination purpose as well as get exam purpose let's start the session in this channel you will get a complete point-wise easy explanation practical demo and question Bank of following subjects please like and share these videos with your friends and subscribe the channel so you will get the notification regarding my new coming videos now the first thing is what exactly scheduled the schedule name suggests that sequence of operations or sequence of transactions in dbms there are multiple transactions right so it is a responsibility of transaction manager to handle the transaction or to give a particular schedule for performing those transactions in TPMS there are two ways of transactions operations one all the transactions have performed simultaneously or parallelly and on the another side one after another transactions have performed so this is the responsibility of transaction manager to give a particular schedule timing next this is the types of schedules first schedules are divided into the two types mainly serial schedule and non-serial schedule non-serial schedule again divided into the two types serializable and non-serializable serializable divided into the two types conflict and view serializable non-serializable divided into the again two types recoverable and non-recoverable and recoverable schedule can be divided into the three types cascading casketless and strict schedule so this all types of schedules have mentioned in your syllabus in this today's session we will discuss only these two types of schedule cereal and non-serial schedule in next session we will discuss complete serializable schedule in this way clear next now the first type of schedule is serial schedule so serial this name suggests that transactions have performed one after another in serial manner see here in this example one this is a transaction T1 and this is a transaction T2 so first in transaction T1 all the operations have completely performed and after commit next transaction T2 have started so this is called as serial schedule first T1 transaction have performed after that T2 after that T3 no other transactions are allowed in between that particular timing clear this is called as serial schedule and this schedule also called as non-inter relieved execution means all the transactions have performed independently see here in this example 2 that transaction T2 have performed first and after commit next T1 transaction have started right so this is called as serial schedule in real life example the ATM machine suppose in one room there is only one ATM machine so at that time first person complete their transaction after that next person will complete their transaction and after that next person will complete their transaction right so this is called as serial schedule this serial schedule have some properties the first properties is consistent this serial schedule perform all the transactions independently or in consistent manner next one is recoverable suppose the particular transaction have fell or about before commit state so at that time it is a recoverable it recover from the first form of particular transaction they again started from the first form the next one is cascadeless cascadeless means these transactions have performed after that it perform commit State commit means all this information have updated in database or permanently stored in database and strict so all these transactions have strictly performed independent mode clear this is called as serial schedule next the next type of schedule is non-serial schedule so it is a complete opposite of Serial schedule here multiple transactions are performed simultaneously all the transactions are called as interrupt transaction or all the transactions are mixed with each other see here in this example here transaction T1 they perform read and write operation so in between that transition T2 is there they perform their rate operation in transaction T1 again read and write operation and after commit transaction T to perform rate operation means there is no waiting stage in serial schedule there is waiting stage when T1 performs the transaction T2 is in Waiting stage in this way but in non-serial schedule there is no any waiting stage all the transactions have performed simultaneously right let's take one example see here this is a real life example here multiple users access the SBI website at the same time let right they perform their operations like transaction withdrawal or anything at the same time so this is called as non-serial schedule on the another example when your result was declared at that time all the students have checked their result at the same time on the same website right so at that time multiple concurrency have occurred means server has down or any network error is there right so this is called as non-serial schedule and in non-serial schedule concurrency problems have generate means concurrency means this all the transactions have performed at the same time so it is sometimes uncontrolled manner right so that is called as concurrency this non-serial schedule can be divided into the two types serializable and non-serializable schedule we will discuss these types in part two now this non-serial schedule having also same properties but this properties they're not always follow serial schedule always follow this property but non serial schedule not always follow this property like consistent recoverable cascadeless and strict so this is called as non-serial schedule see here this is the difference between serial and non-serial schedule in serial schedule all the transactions execute one after another and non-serial schedule all the transactions execute simultaneously in serial schedule no concurrency problem have occurred because transaction performed independently but in non-serial serial schedule due to simultaneous operation or parallel schedule there is a concurrency or allowed they sometimes uncontrolled manner this particular transaction have generated in serial schedule less resources utilization and CPU throughput because this transaction gives into the wetting state right when T1 performed T2 in wetting stage when T2 performed T3 in Waiting step right so it less resource utilization because of independent manner but in non-serial schedule they improve both resources and utilization and CPU throughput see here multiple transactions have performed simultaneously so their CPU resource utilization is more right and they perform all the operations at the same time in minimum time right therefore their throughput is also more right serial schedule is less efficient as compared to more efficient as compared to non-serial schedule non-serial schedule is more efficient serial schedule has no any types non-seller schedule has two types serializable and non-serializable that we will discuss in next part and these are the examples that we will already discussed in previously clear next all about serial and non-serial schedule all the best thank you keep learning