hey y'all data guy here and today I have a video for you that is another viewer request um and that is what is data modeling how do you do it what are some systems what are some examples and why do you want to use data modeling um and you'll come to find out the data modeling is really just kind of at the core of whatever database you're using and we also have a guest appearance from the data dog here today because he is being a little rascal um but back to the reg scheduled content so data modeling is really defining the structure for your database um so imagine you know whenever you're trying to put just raw data that you're extracting from you know an API maybe just information about your sales it typically is coming in a pretty messy way you know it'll just be you know raw machine data that just says you know hey this is some string of numbers and letters that represents the transaction you're you know hashed credit card ID purchase amount uh you know customer name things like that uh and bringing that into your database and you know saying hey I actually want to align that based on you know which customer bought this I want to maybe add that to a database I have of existing customer orders you're going to need to have a model to Define how are you joining that data into your existing database um and so that is what data modeling is and so I have up here an example kind of of uh a relatively simple data model um and just to kind of walk you through an example of you know hey how does this work and you know what is the initial type of data modeling um before that so I just high level data modeling is you know really it's the art and kind of the science of framing data in a manner that is makes sense but it also can be easily manipulated and analyzed so it's not just for you know making this human readable it's also making sure that your queries are really efficient um so that you can save money on the computer need to actually run those queries to access the information you need when you're doing you know large scale analytics and the cost of you know going through millions and millions of lines of data uh can become quite significant um so this provides you know foundation for by having cleanly ordered data that's easily queriable um you can really provide a solid foundation for many different applications uh like you know databas design machine learning algorithms bringing your data directly from here you know into some kind of analytics platform um it just makes everything you're doing on top of the data much easier if you have a very clean and structured data model um and so you can kind of see here within this it is really a conceptual representation of data objects so you know obviously this is you know these are going to be different tables within a database but at a high level you're going to want to you know kind of diagram it out to make sure hey do these relationships between you know payments being linked to the order object make sense um and is that like logically where I'm typically going to need get the payment information from by quering that order header or maybe it should be under Customer because you know I want to look at all the customers payment information and so that's kind of a choice you know this user has made where they have payments being linked directly to order header rather than by customer but there is a customer ID um within the payment uh object um and so you're looking at you're not only the representation of the data objects the relationships between them the rules governing these relationships so you know you don't the rule that hey maybe in this you never put payment information in the customer object um and it's really just a blueprint for as you build and ingest data uh guiding the structure of the data in kind of you know a systematic and standardized way um so just to kind of walk you through what this data model is here so then I can talk about maybe some of the example applications and why it's useful um so here we have you know the base object or maybe your you know order header so every time you know customer makes an order there's an order header which has an order ID uh order date order time customer ID which links to the customer and all the information about them that they purchas this for it also has a linkage to the delivery ID and so it's actually not the delivery ID references the order ID so order ID doesn't reference the delivery ID because typically if we're looking at delivery information we're not or we're just going to need the order ID from there but if we're looking at the order Header information we're not going to typically need the delivery information because maybe we're just looking at the payment and this is one of those decisions that hey you know I didn't make it but someone made this decision to say you know we don't actually deliver ID in order header to save space on storing that twice um because some of these fields like customer ID here under payment uh and in here you have PK So within each um table you'll have a primary key and what that is is the totally unique identifier for each object so there can no be no duplicate customer IDs within this table and the C the primary key here is how you can reference this table um so here customer ID referencing customer here U but this is basically your single source of truth that hey every customer is going to have a unique ID every payment is going to have a unique ID there in a primary key every order ID is going to be unique um and maybe you know two people made the same order on the same time but they're going to be distinguished by their different order IDs um even if a customer made an order twice you know maybe they fat fingered clicked it twice they're still going to have two separate order IDs to differentiate them um and then we hear under order line you know you have uh primary key line ID which is a foreign key so this means it's matches a primary or uh alternate key inherited from another table so this means that this key isn't actually present in all this information so this is being pulled in from a line inform information you know maybe that's the head database where it actually just stores all the different orders um separately and so that's if you need to bring information from a separate database you can use foreign Keys um that will match another unique identifier so L ID will have to be unique in another table that this is uh pulling from then over here you know have the product ID with the product uh unique identifier name specification because you know that's all the information you need about a product because many people are going to be buying it many people are going to be referencing it um so you don't need a lot of unique information there other than each product is obviously its own type and so that was actually only one type of data model um you also that was the relational model um so with a relational model it is rep you know you have concept of relations which are represented by different tables and so tables are used to store data establish the relationships between those different data elements so by primary key referencing each other and it's widely used because it's relatively simple to set up um it has really powerful uh query abilities as well um you also have objectoriented data models um and so object oriented data models combine data and the operations that can be form on data like extracting um into a model and so this is really useful in applications where you need you know a real world representation of your data with compx relationships and operations where you have you know maybe not a large amount of objects but each of those object objects has to store a lot of different state changes um you know maybe it represents maybe an AI model um that has you know oh actually no that wouldn't make any sense sorry maybe it represents like the ingestion of a or the robotics of a car factory robot um and all the tons of crazy information about um all the different operations it's performing um you also have network data models and so these kind of are an extension of this hierarchical data models which are basically just a tree like structure you can see here kind of looks like a tree um each record has a single parent and SE zero or several children and this is kind of an earlier uh database system where you didn't really have uh a lot of data so you know you'd have like hey this company has this many users and then You' kind of have you know like almost like a leadership chart of each manager has the SE several uh people under it but it really has limitations when you know you want to represent many many relationships you know maybe the relationship between using that kind of worker analogy like relationship between co-workers you couldn't do that it have to go through their manager um and so that's where you had the network inform uh Model come in where you have multiple parent records for each child um so you can have you know one child is linked to many different parents and that kind of allows you to represent more complex relationships and you know kind of work around on the limitations of the hierarchical data model but wouldn't say it's super popular these days um then there's also the entity relationship model which is uh widely used in database design and that's where you have entities attributes relationships among entities helping you to kind of have a really clear uh logical view of the data so to you here you have kind of an example that where it is you know almost just like a mapping of relationship between things so here you have an address name affiliation for like a bank branch you have withdrawals account number balance deposits count which also inherit from account balance um and this is you know great for when just have a lot of different things that all relate to each other um so maybe not or not a lot but a relatively small amount of things that have really defined relationships um that you you know know are going to happen so you know you're always going to have to go to deposit or Draw from a bank it's always going to be a you know user that does that um and just having that very clear model to understand how data is Flowing makes it easy to process collect and then you know query down the road um so really you know just easy to look at when you compare it to maybe something like that uh Rel relational data model where it does take you know a little bit of kind of thought uh conceptualization to really get get them and so those are kind of like all of the different you know actual data models you know in terms of implenting there's also things like conceptual and log logical data models that are just high level repres presentations of your data but that's not really what you'll be using in practice uh if you're implementing data modeling unless you're just visualizing it to an external stakeholder um so some of the applications of data modeling kind of moving on now and so now to kind of bring it all together you know how is data modeling used in the real world so there's the conceptual data model right at the top that's really just the business view of understanding you know how data is flowing through your business how it's going from you know your front-end applications whether you're you know a bank or an applica you know and like someone like Facebook collecting information about their users um understanding how that information is collected stored and then used um so it helps you you know so some of the benefits this you know you have database design um helps you to you know identify the right data structure understand hey this is the type of data we're collecting these are the types of things we want to do with it and so data modeling allows you to define the relationships of hey how are we bringing it from that raw data into usable data that then can be easily used by um our developers so that's kind of the architect's job figuring that out um and then this ensures you know obviously data integrity and accuracy make sure that if we're doing things like AI ml that we're actually training our model on relevant data and not just completely screwing it up and setting ourselves up for failure by making inaccurate predictions um and you know kind of hand in glove with this you have data analysis um you have you know bringing your data from back its backend databases into bi or analytical applications for you know people to actually gain insights from all the data that you're painstakingly modeling all day um you know it doesn't mean anything if no one's actually using it for anything um and so this provide data modeling provides a clear structure for analyzing that data and aiding you in making easier and better uh decisions you also have application development um so understanding hey how is our data going to be used in applications so you can look at you know your transaction operation applications management of that understanding you know how you're storing your uh transactional information to kind of use the example here um and ensures that the data that you're handling from your application is accurate and consistent so you're not storing inaccurate data around you know your purchasing patterns so that you're then you know not misled about what your customers are actually buying um and then also at kind of a more uh I guess boring level provides data governance um so gives you a Comm and vocabular clear understanding of hey this is where all of our data is stored by having that mapping out of you know hey this is where all of our data is what types of data we're storing where it's stored what you know security measures are taken on that data and that can also help you in compliance with any kind of standards and regulations and obviously for any kind of financial institution that's really crucial um or any GDP compliant or gdpr compliant organization as well um because the Europeans love love uh protecting personal data which is awesome and so to kind of like guide you through a typical workflow you're going to be going through when you're establishing data modeling um number one conceptual modeling which is just really getting the high level uh Insight of what is the data we're working with what do we want to do with it what do we need to store what can we prune maybe as we ingest it what do our end business user stakeholders so the executives need to see in their analysis or in their reports uh making sure that that data is stored properly collected properly um and defining how it's going to be used for our analytics uh Engineers or just analytics data scientists to actually produce those reports easily without them needing to constantly come to us and ask us oh actually we need to change this and do that and blah blah blah blah blah blah blah um so this also involves conceptual data modeling so you know as I said High repres uh level representation based on those stakeholder requirements um not really very technical more something that you'll want to present to you know someone that doesn't really understand databases but understands what that data needs to be used for then after you've gotten all that set up you'll then want to go into the logical data modeling section and develop a really detailed technical model uh that includes your attributes primary Keys foreign Keys relationships between different tables and you know just really map it all out in actual technical detail and also understand you know hey what is the kind of data we're ingesting what the attributes of that data um and really just set yourself up for Success when you actually start ingesting it and when you're going to start ingesting it and set up actually build your database is in the physical modeling stage so you're not actually going to build a database from scratch it's not Hardware but you are going to be creating your database schema based on that logical model so designing you know schema and all the different relationships between those databases and then optimize you know for performance indexing partitioning maybe uh sharding different databases whatever you need to do there uh do it before you actually start ingesting the data so you don't have to move around data after and then finally you'll actually create the database and start uh uploading your business data but then the kind of hidden fifth step is maintenance um so you're going to have to deal with things like data change capture over time and you know maybe sometimes hey executive says I actually need to get this Pi graph up you'll have to go there and change your data model to actually reflect that so you're going to need to make sure you document everything uh make sure everything is human readable legible that you can go back and make any changes easily rather than having to you know comb through spaghetti code and tactical debt and so because data modeling you know it's OB viously you're not going to take your data model and just like paste it into a database you're going to just use a data modeling tools really to kind of visualize so any design tool that you're already using you can probably use for data modeling but there are also some dedicated tools for this um so the most popular one is er studio um and this actually let you plug into your databases and kind of identify them um identify you know relationsship between your data but it also allows you to you know design yourself within your uh data modeling tool you also have uh DB schema so schema documentation monitoring scaring schemas on relable and no SQL databases you can quickly you know copy and paste complex schemas for if you want to replicate a database from one to another um you also have irnd data modeling so this is creating a database from a physical model and actually does allow you to interpret you know what your specifications were um and create a database so kind of remove some of the steps Ian you still have to write out all the different uh steps in your physical model but instead of just kind of doing the double work you can if you do it right format in order one initially it'll automatically apply and build that database um if it's compatible of course you'll have Archie uh which is you know cheap solution allows you to just visualize uh and describe architecture um so just pure visual tool SQL database modeler um and this is again you can build a model within uh see it within SQL database modeler and then use it to build a corresponding SQL database um you also have Oracle SQL dat modeler if you're still using Oracle databases um and then IBM infosphere data architect which is really built for you know business intelligence simplif uh and statistics so really good for you know if you're not super you know data engineering focused and you're just want to say hey how are we adjusting data and then bringing them into our analytics platforms uh my SQL workbench so just you know nice open source figure you know allows you to construct models um for my SQL however I hate working with my SQL so I'm not even going to touch that um Lucid chart this is you just nice collaborative online tool so if you're working with many different people you have a large team uh there's a lot of different features that you can use um within Lucid chart and you know it's all cloud-based so you guys can collaborate on your models together and then you also have PG modeler which is open another open source tool so got to have work the Open Source Tools in um that has complete access to its source code and it's just you know super easy way to write a model for uh P or for post PG SQL postgress SQL databases um and yeah so that's kind of all I have for you today um I just really wanted to go into kind of everything around data modeling per that viewer request and just talk about it because data modeling is really indispensable in the modern world uh it's the Bedrock upon all of your data all of you know even data quality built on top of data models allows you to do actual insightful analytics effective use of data in your applications and just really brings a lot of clarity and organization to data management so can really be valuable in a ton of different sectors um and I hope that you found this video helpful for you know identifying what you want to do for data modeling strategy um and so data guy signing off um and if you have any ideas for future videos any other topics you want to see to explain drop them in the comments below and I'll get to it uh peace stay the guy out