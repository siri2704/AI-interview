[Music] so hi last class i was discussing about er mapping to table what i told about the conversion of an era diagram to table what the following steps like the conversion of a conversion of many to one many to one relationship relationship to the table right so last class i told about conversion like first i started with step one with the minus two one a relationship right so one two one one to one relationship so one to one relationship i told about i told about a one-to-one relationship i told about right so then i told about one too many one-to-many relationship then i talked about managed to many you know talked about many too many but many to many relationship it is possible right many too many relationship i told about right i told about many too many one too many many to one and many to one with one to many right then i told about on week 22 weekend into a relationship weakening to relationship okay we can do a relationship i told about i talked about and we it to a relationship okay we can do a relationship i told about then then we discuss about conversion of internal relationship a ternary relationship ternary relationship to the table to the table ok to the table so i talked about terminal relationship to the table then i told about a weak entity to the table some generalization to the table i talked about the generalizations to the table okay i told generalization to the table right so i talked about many to one i talked about one to one i talked about one too many i talked about many too many i topped a weak initial relationship i talked about terminalization with the relationship i talked about generalization to the table right so i represent all this one representation what are two things in a yard table to what you call as here table 2 you're mapping here diagram to table i have done table down in last class addon in last class so now now i'll move to i'll go to aggregation to the table i'll move to an aggregation to the table which is one of the fantastic thing where you want to convert the aggregations the aggregation that arises in a table aggregation that arrives in a table right so the gation to the keyboard suit up to the aggregation to the table so here i will take one small relationship where student student student i said previously in a diagram i told about aggregation right i talked about aggregation i saw on the one of the fantastic example of an aggregation so now i will take a student with a student id and student name so student name i take another entity that is professor so professor what professor id and professor knee processor id and professor name then i will take courses courses courses with course id course name course id course name so course id course name so the three entities i am considered to build an aggregation relationship okay so then i'll go with professors teaches the courses right so professor teaches the courses so professor itself is a professor said a job of teacher to teach us a courses right it's job is to teach course that's what so teach professor teaches courses right student attends student attends student attends so student relationship with professors to enter relationship with course right as you know because as a student my job is to listen to the courses teach my professors and also i need to meet professors in the middle right in the middle to discuss about subject to learn about subject are required to meet professors right that's what student attends provides student attends course also to to learn a course required to attend classes right that's what i require so attends courses with student what attendance courses with professors right so i'll make aggregation of this i'll make a aggregation of this and made a aggregation of this what like that so student attends both provisos and a courses so i'll make a relationship that can be student attends that aggregation with aggregation of professional students make relationship with student right as a professor teaches courses courses and professors are both needed by students that would aggregate professor and student to a one provisional course to a one student professional course to a one student okay so professors teachers course aggregate that one and made a attempt by student student required both for sunday course that's what i made a aggregation like that that's what i made a aggregation of professions course for a student for a student okay so now my job is to convert this to table so i have table one is student table that is containing that is containing student id and student name student id and student name that is the first table that we have then i'll go with professor table supervisor table containing pid and beanie okay this other table that contains by professor i say one table then i have course so courses courses cos id and course name what course table what course table what course table right then i have teaches so containing other table that is teaches so it is so containing one is pid pid what cid with cid so because teachers take a key from provisos and key from course id and make a new table that is teachers that is teachers okay so next job attends is our table that i want to build up so against the table and i want to build up containing contain following tables one is from student id one is from student id another one is another one is pid another one is cr one is c i d ok that is attains that is attendance it is at times so totally about four tables have been created right so five tables have been created one is professor so individual entities or tables okay individual entities or tables what relationship that is teaches with the pid and cid that is provider pid with the course id then attains attends what we recall from key from student id that is sid key from professor the pid and key from course id that is free from course table called scoresid and made a relationship with a new table that is attains totally five tables have been created for aggregation for aggregation in generation i will talk about super key and sub keys i talked about which is called chi chi with the parents of the children's now juggling asians make individual individual individual relationship that has builded with the entities made a beautiful tables made and beautiful tables so here you can see that student attends aggregation of professional course what tables of individual entities table with relation teacher is a table and attends essay three keys taken from three entities made a beautiful table made a beautiful table so this is about aggregation to the table this is about aggregation to the table so last class i told about how the steps have been converted so the last time there is last step that comes with the aggregation to the table aggregation to the table okay so hope you made it to understand it's very easy to understand very easy to build at tables so and then there's a question to ask about explain the ier mapping table so you want to take a beautiful table of examples so go on building diagrams and go on building a tables based on diagrams based on diagrams okay so next one i'll move to relational model so now we have a tables i mean built it by diagrams okay i have seen all the diagrams i've shown here diagrams so from here diagrams we go into built-in tables right we have built-in tables so what is the tables it's all about so first chapter it comes out more than one comes to the introduction then there is comes up with what is here diagram so mirror diagram i believe showing which air mapping to tables now the chapter starts model 2 starts with a relational model relational model okay a relational model a relational model so relational database we call as rdbms we call as rdbms so what do you call as what you call as rdbms what do you mean by that what is relation model it is set of instead of rows and columns it's called a tables it's called a tables that is called relational model so rdbms talks about and table talks about and table a relational database talks about set of rows and set of columns that is built for and database and database okay i'll give a fantastic example how to represent this okay how to represent this so this is the table what if i consider student so student is student is and and schema or a table name or a relation name okay a relational name okay so student s usn student test name student is each student as a department now student maybe department number that belong to that beliefs belong to students belong to okay so you say primary key and name is with the attribute h is another type of integer what department number okay so now i'll fill some tables so that it's easy to make you to understand what is relational database what is relation database it's nothing but a table as a total set of rows and columns okay so you less than one two two three three four four four what some names are defines with my defines so twenty four twenty one twenty one ok so now i have table i told saturn relation database is a set of rows and columns with that which is called as table right so table what this is called lesson tuples this is called this in tuples the values the values in additives it's the table that has been built it is called tuples this is called a tuple this is called tuples okay so this is called what is called attributes what do we have in the database that has been built it okay this is called an attributes this is called an attributes okay this is called an and attributes this is called an attributes ok so this is called a table name that has that is called relational name it is called relational name or a table name that is it's called nation name or a table name it has table name it has okay so student it's relation name tuples it has to built in table what attributes that define this is called relational model this is called an relation model the main thing is for each and row and column for each row and column you want to fill only one value only one value i cannot put comma ss comma ss comma mn okay i cannot put like that i cannot put a two names in a sing any row and column in each one column i can fill only one value you cannot fill comma two variables you cannot pull multivariate attributes to the relational database you cannot pull composite attribute to the relation database there is only one value for each row and column for each and row and column you want to fill only one value you cannot fill multiple attribute or a composite attribute for each row and column you can fill only one value for each row and column for each row and column it is called a relational database that is called and relational database so now onwards so now onwards whatever right i write like this employee sorry student right student table so student table okay contains attribute like like name make age right department number as attribute and a key as usn and key s us and key as usm now onwards we write like this it's providing entire things as a right student with vertical attributes and key have been identified okay so next i have so if i write like this so r containing attributes like a1 a2 till e n till a n so relation m r containing attributes like a one a two till a and n number of attributes how much how much relation in relation particle table contaminant attributes it goes with the representation like this so r with a 1 a 2 billion have been defined for representation of our relation model representation of a relational modal representation of a relation model so here we have some more characteristics that don't define define so this is a relational database that contains it has some beautiful characters to define it has some characters to define so how it can be so what are the beautiful characteristics you want to define while building a table in a relational model while building a table in a relational model okay so now some characteristics some characteristics that it provides for a table some characteristics provided by provided by provided by what you call as relational dtb some relational database so first thing is you want to you want to worry about you not need not to or you want to worry about ordering of attributes so ordering of attributes you want to worry you want to worry about ordering of attributes worry about ordering of attributes ok first characteristics first characteristics it has you want to worry about ordering of attributes ordering of and attributes so ordering of attributes means so return us and at a name at an age written department number so why are it in the fastest us in itself why can't write a name right why can't it each invest itself no it's depend upon the domain the requirement of a particular domains for requirement of a particular domains for example in my college or in university if i tell students a database the first we think about first thing you think about us and because it has a uniqueness property it has uniqueness property if i go for account section and tell my name that is i am sharat kumar please give my details of mine what are the faces i want to need to pay if i ask admiration admission or account section they will not give proper details because my name is for confusedness because sharathis may be fine entire fire departments even consider master video may be a lot of shirat kumar available right so then i want to tell first i want to tell my usn i want to talk about my us nsf first so i tell my which is a four match like this so for my region mh college so department is or cs right isrc which department belong to right which year 18 so 18 18 cs 18 is then i will tell about my unique code zero one seven or zero one two or zero one one like this right so this is my representation of ten integer for us and to define my uniqueness property right that's what usm is defined first uniqueness property next of telling my usn i'll tell my name this is my name research it out so this is my next uniqueness property we have only four attributes that's what usn name my properties and my which department i belong to and which department the students belong to so this is the domain suits for to search for a college or a university if i talks about general people general peoples all the people's if i go for talo coffees or anywhere office what leaders i need to provide to get my details first i need to provide my hadar details right so because other is uniqueness properly given by a indian government to uni to identify my uniqueness to identify my uniqueness right that's what so first initially if i go for general things i need to give my hada details that is uniqueness property task then i want to give my other details like name where i am from address proof ration card then i want to provide my other uniqueness property which supports my more increased where i belong to which supports mary more uniqueness that i belong to right so that's the beauty of things that you want to provide while ordering while building a table tomorrow you may do maybe one day you may some people because you are software engineers right you people are software engineers so a lot of things a lot of softwares are coming up to build up right then you want to required based on requirement based analyzation you want to think about what is the uniqueness property task it has so people ask or a system as or a domain has right so based on that you want to decide which is the first uniqueness property you want to write first increase properly then go on building rating the ordering of based on this property go on ordering the attributes go on ordering the attributes right that's what we do that's what we do right that's what i studied i built it if i go for employee then i would go to ssn right if i go for a movie then i would have built it faster with building a table with movie id right then i go for actor if i go for build actor table then it talks about actor id right is uniqueness property first it has right that's what i built it so student s usn if i go for employee it's a ssn right if i general people consider then i can go for aadhaar card then i go for russian card right just the uniqueness property you want to run so that it's easy to identify the processing of table is easy to understand a tablesp easy to comfortable with the dtps comfortable with the dtps right so ordering of tuples or ordering of attributes you want to think about while talking about candlesticks of a relational database cache of a relational database then ordering of tuples ordering of tuples so ordering of tuples so if i consider your name you start from a right start from a abhishek habilash right like this it goes then there is a bharat like this this the way of the names goes let's see chaitan like d darshan right it goes you cannot write z from y or why is it like something different ethics i cannot write as atheism the first name itself right so it is a alphabetical order you're providing right in think system alphabetically you're providing so this is in a alphabetically say in a u.s an order right how it looks if i go for usa and start with the one two hundred the ordering center look in a systematic way right in a systematic way from start from one to and right how beautiful it has the table look like if i consider an ordering of usn wise ordering or alphabetical wise how it looks right so the ordering of tuples must be in systematic way in a systematic way if i consider student essay first i will go with for your organs us and consider 4m match 18 right 18is or 18cs with one next zero zero two next zero zero three the ordering will look very comfortable right so you want to always enter the table based on the order details pattern based on the sorting order details based on sorting order details you need to provide information for through a table through a table searching is easy if i consider in a systematic way the searching will be easy if i consider oh one will be in first row i can do 15 50 row right how it easy to identify the way of speaking will be is very easy to identify the tables right such a wonderful things this can be built in their tables okay so here you are signed with the one one see two two three four four you find four four first the table will not look nice right the querying will be easy squaring will be simple as to enter for the automatically tricks right but unfortunately if you enter a systematic way the sorting order it's look beautiful it's look beautiful and table structure look while and referencing a table cc for us okay that's what ordering of tuples other characteristics you why do you want to want to consider while building a tables while building a tables while building a tables you need to think about ordering of this tuples ordering of this tuples need to consider while beating a table while building a table next point next point we want to think about meaning of meaning of relationship meaning of correlations meaning of relational relational name meaning of our relational name so meaning of relation meaning of a table i am talking about like meaning of a table i am talking about okay so you're told student student is usn student has unique id property right so the relationship matches with the attributes matches the tuples right so how meaningful it is if i attend salman khan here it is possible to build a table here like this no it's not possible right so it must be beautiful that it is belong to college database college databases as must have table called student student master uniqueness property that is usn what specified tuples were specified tuples right so like that like that that is the meaning that's the beautification of a database to table table to attributes attributes to tuples such a wonderful thing right such a wonderful thing if i if i go for employee so employee means factory database or a company database it comes from company company employee employee to ss and ssn to what i call as tuples how meaningful it has how the relationship is meaningful it's a meaning relationship that has been wilted right so relationship was so easy and understanding of a table's easy understanding of database is easy for us building your diagram is easy right so relationship must always have meaningful it must be meaningful relations name with meaningful specified attributes with meaningful tuples okay so always meaning of meaningful relation of relation name so meaning of relation you must be place vital role while building a relation database with the tables with the tables so if i consider it's one of the things is so if i go for movie movie is database movie itself entity or actor essay comes with a movie so movies actors address a tradie with specified tuples with the specified tuples so relation must be meaningful it must be mining fall okay relation whatever the relation you do write in the tables or attributes it must be related i cannot put attribute something called which is not related to student right it must relate to the students it must be related to student okay i cannot put ssn here because not only there's nothing to do with a student right so student has us 200 stupid students database with the college or university right so that's the way the meaning is builted so always built a meaningful table name with the meaningful attributes with the specified tuples with the specified tuples with specified tuples okay then fourth one so fourth one you need to talk about fourth one i need to talk about null values none values i need to talk about null values so null values so really require nonviolence yes sometimes some students some students may not have first year while joining to engineering they may not have email ids they may not have email address the time the time you need to full you need to fill null values you need to fill null values so that stable cannot be empty table the which specified each and column in row must not be empty that time you're required to specify null values you require to specify and null values okay required to specify null values for what you call as for a relational table or relation table name or relation table that contains okay so always define null values whenever required when data is not available like student some students are joined to b as a first year course then may go with particular row and column will have the null value will have null value wherever you're not able to find the value of a particular attribute of a particular attribute then you fill null values then you can fill null values okay then you can fill and null values that's what the null wire is this important role while while while going for calculus characteristics of a relational database of a relational database okay so this is more introduction to a relational model to a relational database or a rdbms or a relational model that is contents so it is relation name it has content relation name tuples attributes then you want to think about ordering of attributes with the uniqueness properties first then ordering of tuples again it must be in sorting order okay then meaning of relation so relation must be meaningful with the database with the relation name with the atlas what attributes then tuples comes up with then null values wherever possible whenever not able to find you can fill a null wireless you're not able to leave empty because empty required out of peace so fill non-violence so that this piece will be storage can be avoided right so it can be avoided so null values can be filled wherever not able to find the values like student gas email id some student may not have email id that i can fill null balance then i can fill null values okay so in specified because department number is three i specified three here okay so these are some of the characteristics characters of a relational database of a relational database in coming class in coming class i will go with a constants what do you call as constraints like domain constants key concern ntd constraints we have that i'm going to discuss the beautification of how the constants look like why the constraints are required why the rules must be applied for particular table particular table okay so relation database place vital role it's introduced by code in 1970s he started what okay started with 1970s is go on moving so nowadays we have object oriented database models oh is what we call as one of the fantastic representation with iron where relation database only we can can see the drawback of relation database where you can tell only first normal form supports right so it is wonderful it does not support composite it does not support multiplied attributes to include that to analyze the to work with multivitamin multi-word attribute or a composite attribute the required object oriented database you require an object-oriented database which talks about which talks about c plus plus or a java concepts with dpms like with overloading or inheritance whatever it comes with the properties of c space java comes with a relational database comes with a relation database such a way that has been built so now we move to almost over dbms we're working on whatever the things we were working on so because we moved up the tables so going after the tables that movement has arises right so it has been forwarded such a way okay so that's the relation drawback so in 1970 scored as introduced now it is coming with what is called sql we deal with all the tables right so there's no sql without tables as we can build a database right such a way the system and technology have been progressed towards what is achieving a good results okay so this is one of the simple way relational basis is a course of b it's enough for relational database you can think about relation database with some different way of doing queries with relational algebra and sql coming up in a particular model and also this model and also this model required more on what's practically oriented where you want to do a labs coming up where you have a dbms lab where you want to work on sql with relation database with a relational database you can think about outright queries maybe you start already we started so you can think about how to write a queries based on the tables have been provided okay so that's why that's what i want next class i want teaching about constants so apply this constant particular table and go on welting our relation algebra and building relation algebra tables next i am going to use the tables to build sql structure query language where it talks about dml ddl so built in with and fantastic structure to to retrieve the data as early as possible through a tables to provide it through indexing powered through indexing okay so thank you thank you so much nescafe over the constant thank you