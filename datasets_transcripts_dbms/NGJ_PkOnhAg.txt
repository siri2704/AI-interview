hi guys Salon this side and welcome back to our channel codera so this is the 41st video of our SQL tutorial series and in the last video of this series we discussed about the delete drop and truncate command and if you want to watch this video then please check out the video link in the description box so guys in today's video we will discuss about the transactional commands and this video might have two parts because in this video we will also understand the assd proper properties because the asset properties are very important part of transactional commands so in transactional commands we will discuss the following commands like start or begin transaction commit command roll back command save point and roll back two command and with this topic I will also share some SQL practice questions so that you can understand this topic in a much better way so now first let's see what is transactional command so guys we use this transactional commands for the management of the SQL transactions now the question is what is transaction so the transactions are the sequence of one or more SQL operations so for example insertion of Records or the updation or the deletion of the records all these are the SQL operations and in the transaction these operations are performed as a single unit of work so let's say we are executing three insert command and one delete command as a single unit of work then this is an example of transaction so now let's understand the transaction with the real life example so let's suppose here we have a bank account a and a bank account B now we want to transfer rupees 100 from account a to account B so in order to transfer rupees 100 a transaction will take place between this two accounts so first we will check the available balance of the account a so we will check either the rupees 100 is available in the account a or not and if the amount is available then only we can deduct rupes 100 from the account a otherwise the transaction will end because of insufficient amount so let's say rupes 100 is available in the account a so now after the deduction we will update the balance amount of the account a now next we will add rupees 100 to account B and in the last we will also update the balance of account B so in the whole process we have performed operations like select and update as a single unit of work so it is a transaction between account a and account B so here you can see we are making multiple modification into bank accounts and if the transaction makes multiple modifications into the the database two things can happen either all the modification is successful when the transaction is committed or all the modifications are undone when the transaction is roll back in other words a transaction cannot be successful without completing each operation available in the set it means if any statement or operation fails the transaction cannot produce results so guys the primary goal of a SQL transaction is to ensure the consistency and the Integrity of a database when multiple operations are being performed at the same time so for ensuring consistency and integrity a transaction must follow the assd properties so now let's get a brief introduction about the asset properties so in AET properties a stands for atomicity C stands for consistency I is for isolation and d stands for for durability so first we will understand atomicity so guys in atomicity a transaction is treated as a single unit of work which means a transaction will be called a successful transaction if and only if all the queries or operation in that transaction is successful if any single query fails then the entire transaction fails like when we transferring funds between accounts either all the part of the transaction must succeed or none of them for example deducting funds from one account fails due to insufficient balance or any other error the entire transaction will be rolled back and no changes will be made to any account so the atomicity prevents partial updates and it maintain the consistency and the Integrity of the data so now our next asset property is consistency so guys consistency ensures that our database must be in a valid State before and after the transaction perform like in our bank example consistency ensures that the total amount of money in the system remains constant if the rupees 100 is transferred from one account to another the total balance in the system should remain unchanged so suppose before transaction account a has 5,000 and account B has 3,000 so total we have rupees 8,000 in the system now after transferring rupees 100 from account a to account B the remaining balance of account a is 4,900 and the remaining balance of account B is 3100 so after the transfer the total amount in the system is still 8,000 so guys we have consistent Data before and after the transaction so in any transaction consistency is very important as it preserves the correctness of the data so now after the consistency let's understand about the isolation so guys isolation makes sureesh of the concurrent transaction must be independent of each other like in our bank account example isolation ensures that while one transaction is transferring funds between accounts and any other transaction also accessing the same account then these two transactions must be unaffected by each other like here we are transferring rupes 100 from account a to account B but at the same time some account C is also transferring rupees 200 to account a and account B is also transferring rupes 150 to account D so here total three transactions are taking place concurrently so guys the updates made by the transaction must be isolated from other transaction until it is committed so isolation ensures that the transactions must be independent of each other now suppose if any transaction fails and the data is not updated properly then we will get the false value of remaining balance of different accounts so guys the updates made by the transaction must be isolated from other transactions until it is committed so it will prevent interference or the data corruption caused by the concurrent transactions that's why the isolation is very important now our last asset property is durability so durability ensures that once a transaction is committed which means once a transaction is permanently saved in a database then its effects are permanent and they will survive the system failures also like in the bank example durability ensures that once the transaction is successfully committed then the changes made to the bank account balance are durable even in the case of system crash or failure now suppose after transferring rupees 100 from account a to account B suddenly your mobile phone shut down or you lost your internet connection then is such cases the transfer you made must be durable and your updated balance must be intact it should not be changed because of such failures so guys durability ensures that once a transaction is committed its effect are permanent that means the changes are permanently saved in the database so Guys these were the asset properties which must be followed by a SQL transaction so to perform transaction in SQL we have some transactional commands which we will discuss in the next part so guys that's all about this video and in the next video we will cover all the transactional commands so if you like this video and you found this video useful then please hit the like button and subscribe our Channel thank you so much for watching