hello Learners welcome back to constant Learners in today's video we are going to do one of the most important topics in the syllabus of database management system and that is data models but before we begin I'd like to thank you for such an amazing response that you have shown to my channel data models was one of the first videos one of the first topics that I posted on my channel but after posting three four videos I was so demotivated with all the hard work that was required to be done to post a video and I was not used to it so I stopped but the overwhelming response that I received on this video was amazing so thank you so much for all your love all your support and I hope it continues in the future as well all right let's get started today in this video we are going to discuss what data models are then we are going to see why data models are important why do we need them right then we're going to do the phases of data modeling and finally we will head to the most important part which is going to take the maximum time that is data models all right let's start quickly with what data models are so data model is kind of a flowchart all right that illustrates entities their attributes and relationship between the entities all right now we know that data are raw facts right and this data needs to be stored somewhere where do we store this data inside the database right now database is not just a location where we take our data and dump right the database has to have a proper structure there needs to be a proper Arrangement a proper logical structure where the data can be stored systematically right so data models Define The Logical structure of the database all right it's the job of data models to Define The Logical structure of the database now to store the data inside the database the user will need some kind of interface right or if we have to read the data from the database we will need some kind of interface we have taken ample among of examples in the previous videos please if you don't understand how this entire process of database works or what is a database please watch my previous videos the concepts will get clarified very very clearly okay now database management system provides us that software or it provides us that interface right where we can communicate with the database whether we want to store the data whether we want to read some kind of data or modify some kind of data all of that we can do through database management system right so in short we can say that the entire process of uh storing or managing the data inside the database is performed through database management system right and it is the job of data models to Define how this entire process will take place also we know that data inside the data models should be connected or related to one another models take care of this important aspect as well let's discuss why exactly do we need the data models right now we know that the database design process is not easy right as once the database has been designed and the data we've started storing the data inside the database this database design cannot be changed every now and then we can make a few modifications but we cannot change the entire database or the entire structure of the database right so there are certain aspects that we need to consider before we design a perfect they just right and data models help us to take care of these aspects so that we can have a perfect day let's discuss what are these aspects that we need to consider before designing a database right so first things first we need to study the data properly when we are designing a database for a particular business or uh for a for a project we need to identify the business we need to identify the project we need to study their data in detail right and data models help us to identify or understand the data about different business processes right next we study data abstraction in a previous video what is data abstraction the user is able to access the data at any time but he is unaware of the technicalities or the complexities what is happening behind the screen right how the data is being stored or how the data is being managed inside the database the user does not know that it just opens an app or he just goes to a particular website tries to access the data tries to access the database and then his job is done he does not know what is happening behind the scenes that is data abstraction and data models allow us to achieve data abstraction right then another important aspect of a good database design is prevention of repetitive or redundant data right we cannot have repetitive data inside our database so data models take care of that as well right and some data models provide us a visual representation of the data which in turn helps us to understand the data requirements more easily right and thus it makes easier the designing of databases all right I hope that this basic concept of what data models are and why do we need them is clear right next let's discuss what are the phases of data modeling as I said before designing a database we need to identify certain aspects of the database and data models help us to do so like for example first before we begin a database design process we need to understand or visualize the project or the company's business processes and its workflow like before designing a building what do we do we first plan we discuss our requirements right and then we talk to the engineers and then the engineer draws a plan and finally the construction begins so first we need to identify the requirements of the business like what kind of database would they need right and this planning or this uh identification process is known as a conceptual model okay once the conceptual model is done and we have understood the concept of a particular business we move to The Logical parts right logical parts means what that includes identifying the data entities their attributes and the relationship between the entities and this is known as The Logical model right and after The Logical model is done finally a technical structure is built to store and manage the data which is known as the physical model right so this was some basic around data models now let's head to the important part that is the types of data models right so we're going to discuss five main types of data models hierarchical model Network model relational model entity relationship model and object oriented data model then there's float model also there's semi-structured data model also but we're not going to get into those details all right let's start with the hierarchical data modeling when the data is arranged in the form of levels or classes for grade that is in the form of a tree like structure that is data is organized in the form of a tree like structure which looks something like this okay so this is known as a hierarchical data model here the higher layer like this is the higher layer this is perceived as the parent right and the segment that is immediately beneath it that is this one as well as this one these are considered as the child records right so this is the higher layer for these two children if these are considered as a children then this will be considered as the parent right so the higher layer is perceived as the parent while the segment that is immediately beneath it is considered as the child records all right now hierarchy starts at the root note all right so this is the root node Iraqi starts at the root node so at the top is the root node which extends towards the child nodes right so these two are children for this attitude but each child will only have one parent now this parent is having two children one and two but if you look at this child it is having only one parent if you look at this child here he is having only one parrot if you look at this one as the parent then it has again two children but here this child has only one parent this child has only one parent right so if parent here can have one or more than one children but every child will have only one pair right so as we can see one-to-one relationship can be established that is one parent can have one child so one to one relationship can be established and one to many relationship can also be established because one parent can have more than one children also right so one two many relationship is also being established right but do you see any many to one relationships that is two parents having only one child is it possible here this is known as many to one relationship can we see any many to one relationships here no right and do we see any many too many relationships also that is two parents are having more than two children right that is this child is having two parents this child is having two parents and both of these parents are having two children no many too many relationship also cannot be established in hierarchical data model only one to one and one to many relationship is established here right since this model only allowed a one-way approach this is not used much these days a simple example that we could take is of a college all right let's say this is the College this is the root node okay now college has two children one is the students and the other one is the faculty right then students can have more parts i t than CS then let's say Electronics engineering faculty can also have multiple paths let's say admin then um professors then assistant professors right so this can be an example of hierarchical data modeling every parent is having more than one children but every child is having only one all right I hope that hierarchical data model is clear now next is the network model now Network model expanded from the hierarchical model y expanded from the hierarchical model because it is quite similar to the hierarchical model but it is able to overcome the disadvantages that we faced in the hierarchical model what were the disadvantages in the hierarchical model in hierarchical model one parent could have more than one children right this is child one this is child two so this one parent is having two children right but one child could not have more than one parent so one to one relationship was established one to many relationship is also established but many to one that is many to one relationship could not be established and many to many relationship could also not be established so these disadvantages are overcome in the network model in network model what is happening as you can see here here this is parent one right this is child one this is child two so if you look at this parent this parent is parent to this child as well as this child so one parent is having two children right then if you look at this child here so this child is having this is one parent and this has the second parent so one parent is having multiple children as well as one child is having multiple pair right so we can say that this model is representing or exhibiting more complex relationships right because one parent is having more than one children and every child or some children can also have multiple right so this improves the database performance because there is no one-way approach data is 5 more related to one another here the data is far more related to one another because in hierarchical models the connections were very minimum but here the data is more connected to each other right also here the data is organized using two fundamental concepts known as the records and now what are records records are nothing but the fields so this is a record this is a record this is also a record this is also a record so these are records and what are sets sets defined a relationship between the record so we can say that this is a set because it is connecting these two records this is also a set this is also a set so all of these connections are nothing but sets because they are connecting the the records all right this parent is having this one as its child this parent is also having this record as its child and this parent is also having this record as its child right so a child is having multiple parents here so one too many relationship is being established one to one relationship can also be established many to one relationship is also being established right and many to many relationship is also being established how many too many like if you look at this parent here this is the parent to this record also it's going here also and it's going here also right this one it's going here also and it's going here also so many to many relationship is also being established all right so Network model we can say that it is more advanced or it is more uh successful compared to the hierarchical data model all right now let's head to one of the most important data models which is relational data modeling so relational model is one of the most widely used data models here the data is stored in a two dimensional table consisting of rows and columns right and these tables are known known as relations and one of the most important aspect of these relations Is that the data inside these relations Is interrelated to one another now what is a relation or what is a two-dimensional table a table consisting of rows and columns so this is a two-dimensional table so all the data in these rows and columns is supposed to be interrelated to one another right that is why the name of this database is relational database all right so the database that is based on this kind of modeling is known as relational database all right and the model is known as relational data model here the data storage is extremely sophisticated it is very disciplined as you can see everything is in its position right all the data is stored in its we cannot store any random data anywhere if this column is supposed to take the name this is only going to take the name and also since the data storage is so sophisticated the accessing of data is also very easy all right now as we discussed the database here is called relational database right so we know that when we have to store or retrieve the data from the database so this is a user you will have to either store the data inside the database or update the data from into the database or retrieve some kind of data from the database and how does it perform all of these tasks through database management system correct so these relational databases they use a special database management system known as the relational database management system known as rdbms all right so relational databases are the databases used for this kind of modeling and relational database management system is used as an interface to store update delete or retrieve the data from the relational databases all right now to store the data in the relational databases we use structured query language that is SQL SQL is a programming language that we use to communicate with the relational databases for example this is a user and this is the relational data sorry relational database right now to communicate with this database the user is going to use the relational database management system but how exactly are we going to do that we're going to use the structured query language this is a programming language so we write some kind of queries in structured query language and these queries perform whatever task that we are requesting it to perform right now every user is not going to know structured query language right if I talk about Google if I need some kind of information from Google I'm just going to write my requirement in the search bar in my own language in English language and the Google is going to retrieve my request and fetch me the data right I do not need to write a query in structured query language to retrieve the data from Google's or whatever database right now structured query language uses the declarative method for specifying data and queries what is a declarative method the user is unaware of the computational logic of the programming and of the workflow right I am just putting my request here and I am getting the data that I need 8. I don't know what is happening in the background I don't know what is the sequence of events that are being performed so this is known as declarative method for specifying data and queries right it focuses more on getting the job done rather than how the job is getting done so the user is not getting into how and why of the databases right it just enters his requirement his requirement turns into a s is into an SQL query and that SQL query performs the task of fetching the data from the database all right now let's discuss the components of the relational model OKAY the relational model as we discussed is nothing but a two-dimensional table called as the relation all right now these relations store the data about a real world entity what is an entity entity is a topic or a place or a person or an organization or an event about which we are storing the data inside the database one particular relation will have data about one particular entity for example student underscore info so this table this relation here is about the student information so this will only have information about the student then this relation has rows now these rows are called as tuples all right and these rows represent a single record that means this particular row is going to store data about one particular entry like if this is a student table then this row this entire row here is going to store data about one student only so in each row we are storing data about one particular entry also no two rows can have data about the same student that means they cannot be any repetitive or redundant data if we try to store the data about same student twice we will get an error message that this student already exists like if this row is about a student named Sachin then it will have sachin's age sachin's address sachin's phone number everything about Sachin will be stored in one particular proof then next we have the columns so these are the columns this entire structure is a column this is our column this is a column and these columns are called attributes attributes represent the properties or the characteristics of this particular entity right for example here we are going to store the name so this entire column will have only the names of the students okay names of different students this entire column will have the age so this entire column is going to store h of each student then if this column is about the address right then this entire column will store only the address of each of these students it's not going to accept any other values we program the database such a way that it will not accommodate any other values that means H column will not accommodate the name or the address address column will not accommodate p h all right so we design the database in such a way that only the appropriate values are accommodated in each column all right how does that happen with the help of domains and constraints what are domains domains and constraints are some kind of restrictions that we um put on each of these attributes or each of these columns right domain specifies the acceptable values that a particular column is going to accept right and what are those acceptable values for example if this is the name the name will only accommodate the alphabets from a to c so we are going to declare that this column is going to have only characters right if this is the age right then we are going to declare that this is only going to be integers because it can accommodate only numbers if this is an address right so address will have both integers as well as characters because they can be number also apartment number or house number along with the address so it's going to accommodate both address and integers so this is done by the domains here what are we doing we are specifying the data type that will be accommodated in each of these columns right then constraints are the limitations constraints are there limitations that we impose on each of these attributes or columns what kind of limitations like this is the name right so we can uh impose that name cannot have more than 20 characters address we can declare that address could be 100 characters log now age the age of a student is not going to be more than two integers it's going to be a two digit number so we can declare that the length of age column is only going to be two integers so this is nothing but the limitation then we can declare that the name column cannot be null let's say we declare it to be the primary key okay so primary key cannot be null and even if it is not a primary key we can declare any attributes to be not null this is nothing but the constraints constraints are the limitations that we are uh imposing on each column okay and these domains and constraints are for columns all right these are not for rows we Define or specify the domains and constraints for each column not for the rows because rows are going to have different values name will have 20 characters age will have two integers now most of these characteristics will also be visible in the entity relationship model I hope that this was very very clear to all of you now let's head to the entity relationship model first we are going to do very quickly because we've already understood what is entity what is attributes what are domains and constraints we've understood all the basics of relational model very well all right now entity relationship model allows us to visualize the data that is the entities and their relationships okay the entities here are also entirely based on the real world entities real world entities as we discussed are nothing but something that is physically present now the most important difference between relational model and entity relationship model is in relational model every relation is about one single entity relation means what the table right so one table is about one entity all right so every relation is about one entity however entity relationship model defines the relationship among different entities right so here we are trying to identify the relationship between more than one entities entity relationship model helps us to examine the structures graphically that is we have a pictorial representation of the entities and their relationships so we can understand the relationships far more better right the database designers prefer to use graphical model or graphical tools right that can help us to identify the entities and their relationships now entity relationship model complements the relational model as I told video most of the characteristics in fact all of the characteristics or all of the components of the relational model are also present in the entity relationship model right so both of these models they complement each other right when we have relational model as well as entity relationship model combines together we get a very strong structured database design now let's quickly discuss the components of entity relationship model we are not going to get into a lot of details first one is the entity right we know entities something about which the data has to be stored it is similar to the relational model but in case of entity relationship model The Entity is represented inside rectangles okay for example student underscore data this is an entity represented Insider rectangle then the properties of the entities or we can say the characteristics of the entities are defined by the attributes just like in the relational model attributes Define the characteristics or properties of an entity right but in case of entity relationship model the attributes are defined inside a oval just like your student ID name age what are these These are the attributes of which entity attributes of entities student underscore data then again just like relational model they these attributes have some characteristics defined by domains and constraints right domains Define the data types and constraints Define the limitations all right we do not need any kind of geometrical structure for this because these are expressed with the attributes right these go with the attributes then comes the relationship between the entities there are relationships are defined inside a rhombus all right so then you see anything inside a rhombus in an entity relationship model understand that it is the relationship between the two entities right and all of these entities attributes are and relationships are linked with each other using straight lines all right we connect them using straight lines now let's quickly take an example of how relational model and entity relationship model complement each other so we are going to take one example and we are going to draw both the models the relational model as well as the entity relationship model right so here we have two entities entity one is student underscore data entity two is Professor underscore data that's Prof underscore date right these are the attributes of the student data entity what are the attributes student underscore ID name age course side right so all of these attributes or all of these columns are X explaining something about our entity it is giving us some information right then Prof underscore ID name age course underscore ID these are giving us some information about the professor right and these are the attributes of the professors data now if you see clearly this course ID and this course ID we see a common column between the students as and the professors table so we can say that we are linking or we are connecting relating because the data inside every database see this is a college database College database has all the information about all the functionings or all the operations or all the people that are related to the college right and both of these entities or both of these tables are a part of the same College database right so this column course ID and this column course ID these are the same columns all right let's say this student here student one whose name is something let's say Rahul all right let's say he has he is a student of Cs and course ID of CSS 001 right so here he will have zero zero one let's say second student Sachin all right he belongs to i t all right and his course ID is zero zero eight so here we will have 0 0 8 let's say third student whoever he is also from CS so his course ID will also be zero zero one all right then let's say here we have the professor ID 11 12 and 13. this professor let's say is teaching i t so again the course ID will be 0 0 8 because I T's course ID is zero zero eight let's say this professor is teaching computer science so his course ID will be zero zero one let's say this professor is also teaching computer science so his ID will also be zero zero one so this course ID column and this course ID column is the same all right it's having the same values but for respective people all right so we can say that these two entities are connected to each other through this course ID all right now let's discuss the same example with the entity relationship model all right so we know that in entity relationship model we represent the entities inside the rectangle so this is our entity one student underscore data this is our entity two profit underscore data because that is the data about the professors right when we have the attributes represented inside the ovals because we know that in entity relationship model the attributes are represented inside the oval here we have student ID name age and cosine again here we have the professor ID name now how is the student entity related to the professor entity this professors are teaching these students right so we can Define the relationship as teachers all right so how are we linking these two entities the the professors in this table are teaching the students in this table okay so this table has the information about the professors that are teaching the details the students whose information is in this particular entity right are related or connected to the attributes also through a straight line right so everything in entity relationship model is connected with a straight line and these straight lines are known as lengths all right so everything is interrelated or linked with each other so as we saw in relational model every table was about one single entity however entity relationship model explains the relationship between different entities now let's quickly head to the object oriented data model so you must have heard about the object oriented oriented languages right so this is a combination of object oriented programming language and object oriented data models these were created or developed to represent complex real world problems now its approach is very similar to entity relationship model in terms of how it represents the entities attributes and relationships okay however here both data or we can say entities and their relationships are contained inside a single structure and this structure is known as an object all right have you studied any object-oriented programming language or do you know the concept of an object oriented programming language in object oriented programming language what happens is we have some objects okay uh like usually we take example of cars okay so there are multiple different cars let's take first one as Toyota the brand is Toyota okay second brand let's take as BMW correct and third one let's take us um Suzuki so these are the brands of the right now all of these cars are going to have some kind of color right and some kind of model right so the attributes for Toyota are going to be color and model all three of these are objects right because these are objects these are cars but all of these objects these are having similar attributes right so we can say that the objects with similar attributes can be accommodated into a single class okay these can be accommodated into a single class of and this class is also going to have some attributes object-oriented data models are a combination of object oriented programming languages and the relational database model what is a relational data model something that has entities something that has attributes then there is relationship between the entities so we have to include all of these along with the components of the object oriented programming model that is the objects the class then there are methods also if you study the object oriented programming language you must have studied the methods also so we have to combine all of these components of both of these things and come up with a data model known as the object oriented data model all right let's quickly discuss the components of object oriented data model as we discussed objects are a combination of entity and their relationships right these two combined together can be called as the objects right objects are the abstraction of real world entities and their relationships right now objects contain the data and code because it is a combination of a programming language and the data right so it contains both but both of these are hidden from the user and thus it provides data abstraction and initially when we started the video we saw that data abstraction is an important aspect of data models all right now these objects have different attributes also just like in relational model and entity relationship model the entities had different attributes right explaining the properties of the entities similarly here objects also have different attributes different objects are different attributes attributes are nothing but the properties of the objects just like in relational models they were the properties of the entities then we have the methods methods Define the behavior of an object that is what operation do we want the object to perform like in entities we only had attributes that is the properties objects don't just have attributes they have attributes as well as the methods they have to perform some kind of action or some kind of task all right so methods are the real world tasks that we want the objects to perform then we have a class we've already discussed class is the collection of similar objects right so this is a box of chocolates and inside this box we have some assorted chocolates right from different brands so this entire box of chocolates is going to be the class because the properties of the chocolates are going to stay the same however here we will have different brands of chocolates right and all of these brands or all of these chocolates are going to have similar attributes and similar methods right so the objects that have similar attributes and similar methods can be accommodated into a single class all right then an object-oriented programming languages we study the concept of inheritance also right wherein a new class or a child class can inherit the properties of the parent class or the base class that is also available in object-oriented data model all right let's quickly take an example of object-oriented data model see here this student info is an object all right this is object one let's say and Professor info is object two right there we had entities here we have object then this student ID gender age and cosiding these are nothing but the attributes similar to the entities because objects also have attributes all right so these are the attributes but along with attributes we discussed that objects also have methods objects do not just have attributes they also have methods so here what action do we want our object to perform to get the marks of each student here we are also asking for the course of each student so some kind of action is being performed the we want our object to perform some kind of task all right so it has methods get marks and get course and here the method is get info all right now both of these the students as well as the professors these are belonging to the same College all right so we can have a class I know this sounds very silly but we are having a class of college underscore people and both the students as well as the professors are the people who are connected to the college so they can be part of the class College underscore people and the attributes of this class are name so both the students as well as the professors are going to have some name they are going to have some Department they're going to have a mobile number all right I hope that object oriented data model is also clear the explanation was clear if you like the explanation please please let me know through your likes through the comments whether positive or negative let me know your feedback I will understand whether my videos are helping you or not all right and if it did help you please give it a thumbs up share your thoughts about the video in the comment section if you have any doubts any queries you can write that also in the comments section and I make sure to respond to each and every comment that I receive all right thank you so much for watching the video please subscribe and share this video with as many people as you can thank you for watching