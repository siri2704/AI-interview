Hello friends! Welcome to Gate Smashers The topic is Transactions states Means, when transaction is executed Then it passes from which states So first of all if we talk That when transaction begins Then by default It will come in Active state What is the meaning of Active state That a transaction is in passive state As we start executing it It will come in which state? In active state If we talk it in the term of operating system If I tell you Then in operating system we say it as program Like we have written a program We have written some program in C , C++ We have saved it So where is that program? It is in hard disk It is in ideal state But as we will execute it As we will compile it It will come in RAM And it is called active state So the same concept is over here When you are not doing any transaction Then by default where is the transaction in passive state But as you started it It will come in active state And what is the meaning of active state First of all You will have to understand this architecture Because whatever material you will get on transaction states They will tell you normal That it is active state, this state  They are theoretical concepts But, I will compare it will actual real life example That transactions is crossed from which state So for that first you have to see this architecture That CPU And hard disk Hard disk what where all the data, all the is permanently stored Whenever CPU executes  whenever it executes any transaction So to execute the transaction What does it need? it needs data And where is that data? It is kept in hard disk But, CPU cannot go in hard disk and execute any operation Because, CPU's speed is very high Generally CPU's speed is in MIPS(Million instructions per second) And hard disk is very slow Hard disk does 10-20 instructions Comparative to the CPU So CPU never can be compatible with the hard disk For execution So in between an intermediate RAM It requires intermediate memory Let's say RAM Or cache memory So what will happen with that We will get speed over here CPU will say I want this data We will call that data in RAM CPU will change that data And then finally we will save that data permanent I am telling you this in the term of operating system also We discuss this in operating system also And in Computer Organization also we discuss this type of concept But, Actually this concept is use in transactions also So I will compare that only Active state What is the meaning of active state That CPU is executing any transaction Obviously CPU will only do Because, What is in CPU ALU Arithmetic Logical Unit So what does Arithmetic Logical Unit do? To execute any transaction means Some plus, minus, multiplication Some operation is to be performed So that operation will be performed by CPU But Active state means That where have we called the data? In RAM In faster memory we have called Now we are calling it Active state Now CPU is executing it And CPU in transaction Which operations we perform Read operation Write operation These are the 2 major operations That we perform So read means From database, from permanent database we have read Now write means We are doing some change in it Some plus, minus, multiplication, division whatever the operation we are performing Now we are doing some change in it So when we performed the operations Let's say, we did read of A We did A=A-50 We did write of A We did read of B We are performing many operations When all those operations will be performed Then at last there is an operation commit When al the operations get completed Then at last we write the operation commit So over here partially commit means That you are performing operations You have performed all the operations Only one operation is left, which one? Commit so if there are N number of operations in your transaction Then N-1 operations you have performed  Because which is the Nth operation? Commit So when you have performed all the operations at your end We call it partially committed What have you done in partially committed? You have done some change You have done some multiplication You performed all the operations Now the transaction is in partially committed state But, still we have done any change in database Where are these all changes present? In RAM In local memory or in shared memory they are present These all changes So in final we write commit The Nth operation about which I am talking What is that final? commit So doing commit means, Whatever changes you have done over here Save all those changes in hard disk When they are saved in hard disk They will be permanently saved So over here In commit we are talking about what? About Hard disk In partially committed we talk about which memory? Generally about RAM And in active state also we talk about which memory Generally about RAM Where is the transaction going on? In RAM Where are the changes saved? In RAM But as you commited Where will all the changes be? in Hard disk When you performed all the changes Free the memory Deallocation Deallocation means Termination So all the resources that are occupied by it Which are the resources? It is obvious We don't have dedicated resource for each transaction In whole world in a day more than trillion transactions are done So there cannot be dedicated resource for each transaction They use that resources only in sharable mode First I am using Then you use  Then they will use it In this way So what all resources are there If it is CPU It is RAM Or they are registers Bandwidth is there Network is there All the resources, all the resources we will free from it We will do deallocation And then to whom we will give? We will give it to someone else Because, all these resources are limited It is not that one transaction has kept it That only I will keep it And when I will come again Then I will use it again When that transaction is completed All the resources are operating systems responsibility Operating system takes all the resources back So that is termination Termination means deallocation Take all the resources back Now over here we'll talk about failed Active, Partially commit, commit and termination But over here Failed Failed means No system is 100% full proof Anytime any error can occur There is power failure Some outage occurred Some switch is not working Router is spoiled There was fire Many types of outages can occur Outages means, any problem has occured So in case Your transaction was going on But in middle power failure occurred Or let's say in middle your wire connection, connection broke Whatever problem came Due to that problem Your transaction is failed So if the transaction fails So it can fail in which state? In active state We had just started right now And it failed in first operation Or it has performed N-1 operation I had almost performed all the operation But just before commit They failed Because after commit it cannot be failed You can never draw this line After commit it will always be terminated So either it failed in first operation Like many times In Irctc because I like this example very much In Indian railways It is an India railways example Whenever we do reservation in Indian railways of train Then it can also happen That as I filled my information To from I selected the train And over there only the transaction failed Network went Internet connection was lost So from Active state you directly came in failed state Or you filled all the information You went on payment portal After going to the payment portal As you did the payment You reached till N-1 operation You also entered the OTP But as you entered the OTP What is written in the next page Don't press back button Or don't refresh But as you did refresh by mistake Or you pressed the back button Over there only the transaction will be failed So your transaction was totally done, it was done till N-1 Just the last operation was left Commit But in that state As you pressed refresh or back button Along with that what happened to your transaction? It failed So meaning of failed We had seen in the properties Atomicity, either it will be completed Or it will be completely rollback So in this case I will have to rollback the failed transaction Or it will have to aborted Abort means We are killing it in a way When we will kill Then what we will do We will restart it When? in the near future The transaction is failed You can never bring the failed transaction in active state directly Nor can you take failed state to partially After failed it will always abort Abort means restart You can resume it Not at all, never a failed transaction will be resumed It will always restart Because what will recovery manager do Recovery manager will come Recovery manager will say ok It had performed 10 operations So I will have to rollback all those 10 So that Consistency can be maintained It should not happen That you withdraw money from ATM You got the message You got the message that money has been withdrawn But you did not get the cash So in that case Recovery manager will say No over here there is some problem So it will recover It will rollback So what will happen in rollback state Your money will come back So in today's time First this task used to take many days But in today's time If you are facing this thing Then along with it Along with auto debit, auto credit is also done Means your money will also along with that come back So this is the thing that after failed abort So you will again start the transaction Because, as abort is done It will be killed Restarting means That it will have to be started again And all the resources It has taken some resources You take back all the resources So this is the actual implementation Of what are the transaction state So you remember these states That where how work is done Because many time from the point of view of theoretical Questions come In Gate, UGC-NET Or in many competitive exams Where they can ask basic questions from this So this is all about the transaction states Thank you