let us discuss how to form schemas from the ear diagram this topic is very very important and we know that when we'll be forming schemas and later we can form the tables against each and every schema so forming schema means you were also in a process to form your tables for your database so how to read one ear diagram and how to get the respective schemas and obviously the tables from that to form the database so this topic is very important so here we are having multiple case studies let me go through them one by one the first one let us suppose that is one entity e having having a one as the prime attribute a two is a non-prime attribute and a 3 is a multivalued attribute then from this particular entity the schemas will be formed in this way we shall form e 1 with a 1 as a prime attribute and a 2 as a non prime attributes so in this way if it is having other non prime attributes all of them will be coming to a 1 and a 3 will get separated and it will be forming like this another entity that is e 2 and that will be your a 1 a 3 that will be your a 1 a 3 and here this a 1 will be the partial T and this entity will be the weak entity set so in this way this particular diagram will be broken into these two schemas so one case that you have completed we are going for the next one let us suppose we are having booked issue and student book is having two attributes one prime each student is having two attributes one prime I want to make one point clear to you that for all this u 1 and E 2 were maintaining the same attributes that means all of them are having a 1 prime attribute a 2 non-prime attribute for all the tools were having a 3 prime attribute and a 4 non-prime attribute so due to lack of space I didn't draw okay now for the first case here you see book issue and student so it indicates that it is many it is 1 that means multiple books can be borrowed by a single student at the same time but a book will have a single owner that means a book can be borrowed to a single student at a time so that's why it is many and it is one in this way it is taking place ok there is no existence dependency means what means you can find multiple books which are not issued yet so that book ID will not be coming in the issue table and you might be finding some students who haven't taken a single book from the library so that means some whole numbers will not be appearing in the issue table so that means we are having no existence dependency some rule numbers are not here and some book IDs are not here in the issue relationship then in the case will be forming this is my II 1 e 2 cardinal DS in is 2 1 as according to this one so we will be having u 1 with a 1 a 2 a 1 prime attribute it to with a 3 a 4 a 3 prime attribute and that will be another schema against our with a 1 a 3 both us both are as prime attributes so that is my first case we are going for the next one here also I told you that you wanted to is there and they therefore they are there ok now see here we are having student here we are having registration here we are having course a student cannot be a student to one University if he has not got registered to one of the courses so that means all students role number must have existence in the registration relationship so this registration is having say we are having course ID course name here we are having roll number and student name so here all the roll numbers must be appearing in the registration table because a student cannot be a student to one University until and unless he or she has taken admission in some of the courses a course there is many do this one so a course can have multiple student registered but student at a time can take registration to one course only so that's why it is many to one and here were having existence dependency so when you are having existence dependency then what will be done here we are having student roll number student name might be other personal details of the student and this horse ID will be coming in this particular entity so that's why I have shown here total participation that Miss E and R will be merged because this one only one course ID will be coming against each and every student and each and every student must get registered to one course only at most so that is the case so what will happen here we are having n is to 1 and here will be having 1 Union V 1 Union R and E 2 so what will happen this e 1 Union R so that's why it is my total participation and this made to say what will happen will be having this u 1 with our a1 a2 a3 where any a1 is a prime attribute and e2 where you will be having a3 a4 but it is a prime attribute and here this a3 is a non-prime attribute primarily put in one schema and if it is a non-prime attribute in another schema then in the second schema where it is non prime there it will be called as a foreign key so in this way the foreign key will take the part always leaving but in case of many to 1 whenever existence dependency is existing so many is powerful so many will absorb relationship for the sake of your simplicity to understand this one to remember this one during your exams many is powerful so many will absorb the relationship remember this one next one this is so here we are having no arrows at the earth that means it is many to many because whenever there is some arrow there we are having one but that is no error so they are many - meaning that means a customer can have multiple loans at the same time alone can have also multiple customers that means group loans are allowed a person can enjoy a person along group loans at the same time so that's why it is a minute meaning so here if you asked me to Marge say you won art then what will happen from here I'm getting a 3 a 3 there so if he will come here and it will become a multivalued attribute so again I shall have to split with this customer idea and the loan ID and that is nothing but the deletion chip itself so here also if you March if you merge them I'm not asking you too much I am just asking you to consider if you March them then this customer ID will become the multivalued attribute here because against one loan ID you are having multiple customer IDs because this bank is allowing group loans so that's why what will happen will be having 3 schemas against you one against our and against it - irrespective of the fact how that existence dependence is existing or not so here we'll be having this one so you want into an art it will be coming like this and it is many - meaning let us go for the next one here we are having 1 is to 1 that means a student can take only a single book and a book can be borrowed by a single student at a time so that is 1 is to 1 but I cannot ensure that all students will be taking book from the library so this student roll number is not having any existence dependency in the relationship issue I cannot also assure you that all books will always remain borrowed by the students so some book IDs might be absent in the issue so it cannot ensure the existence dependency of this book ID in the issue relationship so there is no existence dependency and the cardinality ratio is 1 is to 1 in that case will be going for separate you want it to an R you want it to a not separately as I have shown the last one last one is very peculiar just see we're having driver we're having driving license so here will be having private lessons number date of issue place of issue time of issue and other details and here we are having this driver ID diverts name personal detailing and so on and you know that a driver can only be a driver if he is having a driving license and obviously a driver can have say one driving license only I'm not considering two wheeler four wheeler or something heavy vehicle or something let us suppose a driver should be a driver will be a driver if he is having a driving license and as it is one is to one so I'm considering that a driver will have a single driving license okay now here we are having the existence dependency and the cardinality ratio is one is to one now see a driver should have a name a driver should have a address a driver should have some say say your age of the driver that is true and also it is true a driver should have some license ID a driver should have the license type a driver should have the date of issue of the license and so on then why should I go for these three tables so what will happen will be going for EU 1 Union R Union e 2 so all that tributes will get clubbed under one schema so a1 a2 a3 a4 and we know that driver ideals are unique for all drivers and also the driving license ID or driving license number will be unique for all driving licenses so we can consider this one as primary hood we can consider this one as prime attribute you can in the design implementation if you require you can make both of them as a composite attribute composite key so in this way you can implement it according to your implementation choices so so we are having this case studies are there so here I've done the lifting that what should be done and this is a basic one when the multiple would active it will be coming that will get splitted with the prime attribute I think you are getting this logic in the next video we are going to discuss one case study on the banking system and there this concept will be used and whenever one ear diagram will be given to you you must be in a position to read it and get the meaning and extract the required schemas and the respective tables to be formed that planning should be concrete and logical to you thanks for watching this video