[Music] hey guys welcome back to this SQL discussion and in today's session I'm going to talk about joins now joins are very important aspects of learning SQL why we require join in SQL now join allows us to access multiple data which are resided into multiple tables in your SQL server database now over here we'll be learning the most important aspects of joining where we'll be working extensively on inner join left join right join and full join now the question is why we require join in SQL there will lot of scenarios in your day-to-day work where you have to extract data from multiple tables for example if you have two tables like employee or department and you need to understand that there is a data recited in department table and the data recited in the employee table now for some reasons while working with the employee table you thought you there there might be a requirement where you need to get some information in terms of the department from the department table so in that case we have to perform a join operation to get the data from the respective tables and to proceed with the options of working with different types of data so let us understand the different types join with an example so I'll be talking about the inner join the left join the right join and the outer join so let me initialize my SQL Server Management Studio and let us see each of the joints with an example so the best way to understand join is to understand it visually so what I will do before I discuss the inner join let us understand what is inner join with a visual approach so I have opened my uh the paint application and what I can do I'll take two tables so consider this is a table A and this is table B now if I want to perform an inner join now there's a universal row that we follow while working with joints in order to establish a join between two tables uh there should be at least one column of similar data type available in both the table the column name doesn't matter but the column data type should be same now for example in employee table employee ID and in department table department ID should be of the same uh data type but in case of establishing a join in both the table at least one column should be of the similar data type now for example if the employee ID column is available in the department table then we can easily establish a join between the employee ID and the department ID now the question is what is a inner join in inner join the join operation takes place on the basis of the matching criteria now when I say the matching criteria I mean to say in both the table at least one column should be similar in terms of the data type in inner join on the basis of this matching criteria only those data will be extracted which matches with the matching criteria now let us understand this particular join with the help of an example so as you can see in this particular picture in inner join only the matching data on the basis of that particular matching criteria will be extracted or will be selected from both the table now how we can achieve this kind of um join through queries so for that let me go back to my SQL server management studio and let me click on new query now for this particular example I'll be working on the adventure work database so let me initialize this particular database now as we all know this database is listed under the database folder let first let me use this particular database and now let us select two tables on which we can apply the inner join now if I expand this particular database under the table folder I can see all the tables listed under adventure work database 2019 now let me select two tables from here first let me go with the employee table so let me write a query to see the data in the employee table select star from human resource dot employees and now if I execute this particular query this is the employee table again let me write another query select star from uh let me take another table over here as the table which I am searching for over here can [Music] be okay let's not work on this particular adventure work database let me work on the human resource database so I'll select the human resource database from here hr database let me remove this queries from here and let me use the human resource database and if I execute this query and now in the human resource database if I expand this particular database and go to the table folder I have this employee table and the gender table now let's understand let's see what data we have in the employee table so select star from table name that is employee now if I execute this I'll get the employee data let me select another table that is gender table so in this table you can see in the employee table we have the SID employees employee number birth date first name last name gender SID date and the hire date now if I go to this gender table select star from gender and I execute this particular query I can see that in the employee table and in the gender table we have one column of similar type that is the gender column now on the basis of this column if I execute both the query over here you can see the query is getting executed over here if you can follow my cursor you can see in the gender table we have the gender column and in the employee table we have the gender column which are of similar data type now we can establish a connection between these two table now what I want I want to select the employee number the birth date the first name the last name and the gender on the basis of these two column by implementing a inner join so let me write a query I'll write select from first let me perform the join from now what I will I'll mention the table over here so I'll write the employee table and I'll create an alias of the table as emp i'll perform a inner join by writing the inner join expression over here and I'll mention the gender table over here and I'll I'll take a alias for that particular table and now on the basis of this alias I'll be performing the inner join by referring the gender column so I'll write gen or emp or you can write gen dot gender equals to emp dot gender and what I can do I can write over here on now this on keyword allows initialize the joining operation so what I have done I have taken alias as emp for employees gen as for gender and on the basis of the gender column I have perform inner join and now let me select the columns from the respective table so I'll take employee number i'll take the first name i'll take the gender name from the gender table and the gender now you can see there is an error over here what error this is an ambiguous column name error the SQL server management studio is unable to identify from which table this gender column has been extracted or mentioned because gender is available in both the table right so what I can do I can write emp dot gender and now you can see the error has been removed so what I have done I performed the inner join on the basis of the gender column and now if I execute this particular statement I'll able to see the employee number first name gender name along with the gender column from both the tables so gender name has been extracted from the gender table and the gender column has been extracted from the employee table along with the first name and the employee number so this inner join I have just executed with the help of a query where I have taken the gender column as a base now let's understand the concept of left join now for that again I'll go back to my the paint application i'll just click on it and I'll just take this particular table data which I'm working on so earlier we have seen that we have we have taken two tables and we have performed inner join now for inner join the matching data will only be published in terms of the matching criteria but for left join all the data from the left table along with the data which matches in terms of the matching criteria will be extracted now if you visualize the left join it will look somehow like this where all the data from the left table along with the data that matches with the uh right table on the basis of the matching criteria will be extracted now the question is how we can perform this in SQL with the help of queries i'll go back over here in my SQL server management studio i'll take a new query for this lift join and the tables that I'm going to use for this particular example is employee table and the manager table now if I select the data from the manager table and if I execute it I can see in the manager table we have informations like position from date to date sid employees etc and what I want I want to perform a left join on the employee table and the manager table so what I can do I can remove this star over here and I can select the table from here so I can write the table name from employee table as emp performing the left join on the manager table as mgr on now the question is what will be the matching criteria of the employee table and the manager table now in the manager table we have a sid employee column now if I right click on the employee table over here and I click on design I can see in the employee table there will be one more column called SID employee so on the basis of this particular column I can perform the join so what I can do I can write empt sid employee equals to mgr dot sid employee and now the column that I want to select from the employee table will be let me select the columns like first name last name so you can select employee number first name last name from the employee table and from the manager table I can select position and let's select the from data option or let me okay so let's select the from data option now if I execute this particular query I can see that from the employee table all the data has been selected on the basis of the matching criteria that is SID employee and where the data is not available you can see there's a null value over here and what I can do I can sort this particular query or I can sort this particular column so that I can check whether Is there any values in these two columns or not so how can I do that by using the order by clause now what I can do i can perform a sorting operation on the position column now we can sort this particular column by also specifying the column position now over here the position column is located at the fourth from the left so position column is the fourth column starting from the left that is employee number column so what I can do I can specify the column position number and I can just sort it in descending order and now if I execute this query on the basis of this particular position column the data will be sorted in descending order and now we can see that by after applying the left join all the data from the left table and the data from the right table on the basis of the matching criteria has been populated and sorted in descending order now the key takeaways from this example is that we can sort a column by defining the position of the column and over here this particular column position has been is located at the fourth position from the left so this is how we can perform the inner and the left joint in my next video I'll be discussing the join in depths where the other categories like right join and left join right join and outer join will be discussed apart from this I will also discuss about the advanced operations that we can perform by using join i hope you have enjoyed this particular video thank you for watching guys