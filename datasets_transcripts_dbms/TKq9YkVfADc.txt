hello everyone Welcome to our Channel simplified computer science concepts by professor rutuja today we will be learning about checkpoints in dbms which is very important topic in recovery of the transactions so let us begin so what are what are the checkpoints basically this is nothing but a mark point where all the previous logs are removed from the system and store permanently in the storage disk now there are very uh unknown maybe words in this particular sentence so for this you have to go and watch the earlier videos logs what are these logs logs are nothing but when if you try to map this concept to a realtime exam example is that you are surfing internet and all whatever you are searching whatever you are browsing all that is stored in our browsing history what is that that is nothing but maintaining lock of whatever we are doing similarly when the transactions are executing they also maintain a law whatever what all tasks are performed what is the updation all that has been maintained in a file called as a log file so what is this checkpoint so let us see just look at this diagram this is a timeline and at this particular time a checkpoint has been taken which means that the wherever we have taken the checkpoint the logs that were maintained before the checkpoint are permanently stored and will be stored on the storage disk it and after permanently storing it will be removed from here so that means even if the failure occurs at this particular point of time it will not roll back to the initial part it will roll back to the checkpoint part from where it will again reexecute the transaction right so these lock files before checkpoint will be removed as I told and they will be stored to the storage dish permanently so when a checkpoint is reached updates are saved to the database and the log is clear now without the checkpoint what is the problem let us understand so let's say there are thousands of transactions which are executing and uh started from executing transaction and at let's say 700 7,777 transaction the system got failure now what happens the earlier transactions which were executed that also got wasted why because we have not checken the check point checkpoint at this point what we have to do we have to roll back to the transaction T1 and again perform all those 7 7,077 transactions so it is very difficult and it becomes a burden for the CPU so for this the solution that was implemented was taken taking the checkpoint so look at this particular diagram let us understand for four transactions T1 T2 T3 T4 now this is without checkpoint at T4 in the middle of the task it got failed the transaction got filled so here what is the solution from here again we have to roll back to the initial State and again redo all the operations so whatever tasks were done all got wasted and this is this was the demerit of without taking checking without taking the check F so it was time consuming and again performing the same tasks which was already done is one are the one of the demerits so what what happened after introducing the checkpoints so here as system periodically performed the checkpoints so see here we have taken the checkpoint after the transaction T1 then T2 3 and T4 and middle of the transaction T4 failure occurred so it will roll back but where it will roll back it will roll back to the checkpoint that is been taken so at least we have we are successful in Saving the trans logs of transaction T1 we have to only redo now T2 T3 and T4 so T1 we have saved so if we take periodically roll backs then that also this also would have not been taken so maybe if we have taken one more checkpoint over here then again multiple uh uh redo operations would have been avoided I hope you have understood this concept now just look at this log file which is maintained for this particular transaction how checkpoint is maintained so T1 started T1 committed then we took a checkpoint so checkpoint number one which is logged in such manner in a log file then T T2 started T2 committed T3 started T4 T3 committed T 4 started but it did not got committed so that is not maintained over here then how to recover from recover using checkpoints that means how to recover from the failure using checkpoints so for this there are certain rules let us understand that first of all we have to read that log file from reverse order that is from T4 to T1 for this particular example then we have to maintain two lists one is redo list what is then the other one is undo list what what will by the contents of this list we will see now so see let's say if the transaction any transaction which have start and commit both things after the checkpoint and or only commit after the checkpoint and that will be stored into the redo list and the transactions which are only start but which do not have Commit will be kept in the undul list now let us understand this with this diagrammatic uh representation so see here uh as per the rules which particular as uh for first we will start from reverse order that is from T4 to T1 so let us now first check for T4 T4 start is before after the checkpoint but commit is after the failure so if that is the case it has to go to undo list because start is before uh the failure and after the failure there is commit so this will go to the undo list then we will go to the T3 transaction T3 start and and commit both are both have been completed before the failure so again it has to go to redo operation then T2 T2 both start and commit after the checkpoint before the failure so again this will go to the redo list and then comes Ste here no start but commit is again after the checkpoint and before the failure so this will also go to the redo list so what are the check merits of this so checkpoints accelerates the data recovery process obviously it will because we do not have to roll back to the first transaction and again perform all those tasks so uh recovery process is accelerated then comes checkpoint records in the lock files AO irrelevant redo operations as we are maintaining two list redo and undo list so with the help of checkpoints we will not perform duplication of the task or irrelevant R do operations then the third one is checkpoints helping getting the transactions back in the case of accidental shutdown of the database so let's say if we are taking if we have taken regular checkpoints and uh there is immediate shutdown of the database we can still go back to the check latest checkpoint that we have taken and from that we can uh recover the data so I hope you have understood this concept thank you for watching this video please do like share subscribe to the channel thank you everyone bye-bye