>> Programming in Python: Good evening everyone. My audible  Okay. So I think we should start enough. People have joined Yes, priyanshu have something to ask.  >> 24F3004439 PRIYANSHI KUMARI SINGH: Women Last Class, You have explained the subset code for the one set is the  >> Programming in Python: Yeah. >> 24F3004439 PRIYANSHI KUMARI SINGH: subset of other. Can you explain it?  >> Programming in Python: Yes. Okay.  okay, so today's session, in fact, all the sessions for now will be for your Opie to revision.  So, I have some pyqs that we are going to practice today, okay? And yeah, I'll discuss that problem from last class.  >> Ayush Verma: Sam, can you please? describe me, which  Week is coming for OPP 2 up to 11 or 9.  >> Programming in Python: No, it's okay. Two is up to your week. 11, The recursion concept is there, right?  >> Ayush Verma: Yes.  >> Programming in Python: P2, I think is up to week, 10 only.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: VKA treatment.  >> 24F3004439 PRIYANSHI KUMARI SINGH: Yes, ma'am of two file and link TA in the TA session and also in the programming  section.  >> Programming in Python: Okay, in your grading document just check it. Once I know file handling, is there in your Opie so if it is up to that then it will be just week 8. I'll check one. It's okay, wait.  >> 25DP1000035 BASANT KUMAR: Man.  >> Programming in Python: Yeah. >> 25DP1000035 BASANT KUMAR: Can I use the pattern to turn? OPP 2?  >> Programming in Python: Sorry, use what?  >> 25DP1000035 BASANT KUMAR: Python tutor.  >> Programming in Python: I'm not understanding. Can you? >> 25DP1000035 BASANT KUMAR: That.  >> MANGATHAYARU NC: Is asking that Python you can be used in oppe exam.  >> Programming in Python: Python tutor.  >> MANGATHAYARU NC: Oh yeah, it is in the  >> 25DP1000035 BASANT KUMAR: Yes.  >> MANGATHAYARU NC: HD pepper. >> Programming in Python: It's where?  >> MANGATHAYARU NC: Problem has been given in that. Question Papers. Why turn tutor will be there?  >> Programming in Python: Okay. I mean is it some kind of companion tool?  >> MANGATHAYARU NC: yeah, only for execution, it will check whether >> 25DP1000035 BASANT KUMAR: According.  >> MANGATHAYARU NC: the new mistakes are there in that. And informers, that's it.  >> Programming in Python: Okay, I am I'm not aware of this. If some company tools.  >> MANGATHAYARU NC: A minimities in that program sheet, only man. >> Programming in Python: Okay, then you if it is there, maybe I yeah it will be there in your Opie. It's just for testing, right?  >> MANGATHAYARU NC: yeah, I thought just for testing  >> Programming in Python: Yeah. Okay.  >> Dhanaraj Bala: But if you write in that it doesn't allow to copy and paste, right?  >> Programming in Python: No, no, you have to write the thing. They have to type it.  >> Dhanaraj Bala: No. What I'm saying is Python tutor, right? If you need to copy. Right, would you be able to copy and paste or if you make any changes? Cannot copy back to the.  >> Programming in Python: I haven't used that to let also. If anyone else is used to. Can you answer this question?  >> MANGATHAYARU NC: Just for testing purpose, madam whether any mistakes are there and how the code will be executed, it will show us. If we have given, >> Dhanaraj Bala: so, it is a single line, you can execute  line by line, you can execute  >> MANGATHAYARU NC: Execute, and it will show. >> Dhanaraj Bala: That's what it is useful.  >> Programming in Python: Okay. >> Dhanaraj Bala: Like Debuggerish. Is it a kind of deeper?  >> Programming in Python: Yeah, it is it just going to execute the code. That's it. Just for testing  >> 24F2004744 SHIVANI V: Are doing man.  >> Programming in Python: Yeah. Okay, is the screen visible?  >> 25DP1000035 BASANT KUMAR: There's nothing. Hello.  >> 24F2004744 SHIVANI V: As.  >> Programming in Python: Yeah. >> 25DP1000035 BASANT KUMAR: One more time.  Who money laptop case, some care? Not working. Can I use external cable?  >> Programming in Python: Camera.  >> 25DP1000035 BASANT KUMAR: External keyboard, man.  >> Programming in Python: Keyboard. Yeah sure.  You just see like in that there is a testing right before your Opie, you do a testing of all these things. >> 24F2000363 HIRDESH BUTOLIYA: Yes, ma'am.  >> Programming in Python: Yeah, so there you can ask whoever is there. I'm not sure about these things or  >> 24F2000363 HIRDESH BUTOLIYA: Yes.  >> Programming in Python: you can ask your Proctor.  >> 24F2000363 HIRDESH BUTOLIYA: vegan is  >> Programming in Python: Yeah. >> Dhanaraj Bala: What one more question?  Yeah, in the instruction it says you can get the help something. I'm not sure  >> Programming in Python: During exam. >> Dhanaraj Bala: how to get the help like APA right for example. Yeah, I I remember reading the instruction. In the exam so you can.  >> Programming in Python: During exam. If you have any issues, you can let the Proctor know the meeting that he'll join.  >> Dhanaraj Bala: No, no help in the sense, the APA, right? For example, list methods, right if I  want to see list method and it's parameter. So that is there any description of that method, right? For example, happened, what does it do? What parameters it takes? So like that.  >> Programming in Python: Basic method descriptions are saying. >> Dhanaraj Bala: yeah, I remember reading so you can use help and see get those  >> Programming in Python: Yeah, I think that it's the future. >> Dhanaraj Bala: information anybody used  >> 24F3004632 VICKY THAKUR: It will show only the methods available with the public.  >> Dhanaraj Bala: How do you do that? Can you please somebody? >> 24F3004632 VICKY THAKUR: Any function.  >> Dhanaraj Bala: explain. How do we get that list of methods show?  >> 24F3004632 VICKY THAKUR: I think you have to type the method name and then Dot help then it will help you out. That what are the available methods are there?  >> Programming in Python: Yeah, but it's >> Dhanaraj Bala: oh, like  >> 24F3004632 VICKY THAKUR: no, it will not show, it will show only the list of available functions which  >> Programming in Python: Yeah. >> 24F3004632 VICKY THAKUR: are built inside.  >> Dhanaraj Bala: Okay. You mean that if it is a list variable the variable dot Hell, if I type help. >> 24F3004632 VICKY THAKUR: Help.  >> Programming in Python: just, >> Dhanaraj Bala: To all the. >> 24F3004632 VICKY THAKUR: Yes, you can check.  it. You can check it. It is like something I have used like a few days back but just check from your end. I have used like this. >> Programming in Python: Okay. >> Dhanaraj Bala: So we can do the same thing now.  Graded assignment, We can do the same. Did you try that?  >> 24F3004632 VICKY THAKUR: Yes, I have tried that. Yes, you can do that.  >> Dhanaraj Bala: Dot help. Will give that, okay?  >> 24F2000363 HIRDESH BUTOLIYA: Tiger system.  >> Programming in Python: Okay, yes. >> Dhanaraj Bala: Thank you.  >> Programming in Python: So see, these are so total eight questions I have, okay. Now one question will be there from inop 2. One question will be there from file handling, okay? But that is very basic question, just maybe some kind of string, formatting. You just have to read from the file and do some kind of manipulation on that. It is a very basic type of question. It will be in your Section 3, second problem. Okay. Now file handling questions. We will take in the next session, but to this session, I will take the first six type of problems, okay? So, first three questions as you know, will be from easy type. Then, two questions after that. Fourth and fifth question will be from medium difficulty and the last two questions are from difficult level. So, out of those last two questions, only the last one is from file, handling might be there, okay. So, first six type of problems will do. So this is the first problem.  These are all piqs, okay? so, you have to write a function, see there will be two types of questions, Mainly one is your function, definition type where you just have to write the  function, same as op1. And another is there iotype question, right? So you have to take some input from the user, The first three, easy type questions. It will all be function type. So, you have to write in this one. You have to write a function, which is called is even two digit. Number that will check whether a given number is an even two  digit number or not, Okay? So the number that we consider has to be exactly two digits, and we don't care about whether it's a positive number or negative  number. The sign doesn't matter. You have to take the absolute value. Okay, and you just have to check whether it's order even. So, I have the problem statement is clear for everyone. Let's write the code. >> P_S _Kiran: Man.  >> Programming in Python: Yeah. >> P_S _Kiran: Which term paper is this?  >> Programming in Python: This is last September term paper.  >> P_S _Kiran: I already discussed.  >> Programming in Python: These were discussed. I didn't know that I was told to discuss. Pyq only.  Okay, so see all of the problems. I'll show you. Tell me if there is If anyone wants me to discuss these.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: He?  welcome and go from the starting, like you just take 5 to 10 months, right?  >> Programming in Python: Yeah. When there are eight problems are taken. So these are from different sets. Also, okay, so not only from one set, let's see. Even if you have solved is just a practice session, so no problem.  Okay, so I have the problem statement is clear for everyone. >> 24F3004596 LAKKISETTY RANGA ROSHINI: Yeah.  >> 24F2004744 SHIVANI V: Man.  >> Programming in Python: So, let's write the function. It is called is Even. Two digit number.  So, you will take some number that you have to check in the parameter. So what will be the >> 24F2004744 SHIVANI V: I mean. >> Programming in Python: Yeah. Is it not getting shared the Spider terminal?  >> 24F2004744 SHIVANI V: No, no. Like collapse or is it only the >> Programming in Python: No, I'm sharing the Spider terminal. Wait. >> 24F2004744 SHIVANI V: Okay. >> Programming in Python: I'll present the whole screen. One second.  Okay. Now is it? >> 24F2004744 SHIVANI V: Mom. Okay.  Request. Asthma or can you three minutes or two minutes for us to solve? And then you can  >> Programming in Python: Yes, yes, no problem.  Everyone. I'll just then open this problem statement. Okay, so it's a 12 now you solve till 8:15. okay, then I'll solve  Just everyone, please write the code for this.  If any of you is done, you can let me know.  >> 24F2004744 SHIVANI V: Yeah, Boston.  >> 24F3004439 PRIYANSHI KUMARI SINGH: I'm done.  >> P_S _Kiran: And the function. The variable.  >> Programming in Python: Oh yeah. >> P_S _Kiran: You want to?  >> Programming in Python: This is the function. Name is even two digit number. So this function will take a number and >> P_S _Kiran: but,  >> Programming in Python: Just take a number as argument. Any number? Okay, let me check. No numpy. And all of that will not be in your Opie, right? This is just an opi session so that you just have to study for your income paper.  >> 24F3004046 INDRA BIJAY NARAYAN: Okay, Mammo quick question though. So those classes objects that would be under that OPP 2 or no because >> Programming in Python: No opp, no. Just  >> 24F3004046 INDRA BIJAY NARAYAN: No, no. Okay, thank you.  >> Programming in Python: Okay. Yes. Both the courts are correct. Both of you that have posted so you can either take the absolute value.  >> 24F3004557 DHULIPALA SRICHITRA: there's,  >> Programming in Python: A converted into a string and get the length.  >> 24F2004744 SHIVANI V: Mind. >> 24F3004557 DHULIPALA SRICHITRA: Also matter this.  OBJECTORIAN programming's programming. Is it there for?  >> Programming in Python: Not, you know.  >> 24F3004557 DHULIPALA SRICHITRA: Okay, thank you and one more thing.  >> 24F2004744 SHIVANI V: It's my favorite.  >> 24F3004557 DHULIPALA SRICHITRA: this this, the storms PA sessions, colab notes. And all are not shared in the Python dashboard.  >> Programming in Python: PS Session, not shared.  >> 24F3004557 DHULIPALA SRICHITRA: Not shared all other subjects. The Google Drive link that spreadsheet, is there.  but,  >> Programming in Python: Okay. Okay, let me ask the DS after the session. >> 24F3004557 DHULIPALA SRICHITRA: Yeah. It's thank you.  >> Programming in Python: Okay, well okay. Someone is posted this code return true. If  Length of numb is equal to 0.  Okay, Kalyani. This is your code. Why is the length equal to 0?  And absolute number, you're taking the percentage.  To I mean modulus 2 is equal to 0. So why is the length equal to 0? We need to be exactly 2 digits, right?  >> Kalyani Shubhankar Badave: It was typing mistake. I went to write a length of  >> Programming in Python: Okay. Okay, so now let me just write the code. So if so anyone couldn't write  >> Kalyani Shubhankar Badave: Is this current?  >> Programming in Python: See, the correct way of writing is that you can either take the  length convert the number into a string and then take the length of the string and match it with two. Or you can just place a condition that the number has to be greater than 9 or you can even take greater than equal to 10. And less than 100. Okay, these two conditions after satisfy. So just in the the return statement, I'll do the second way so it can be. Number Person, Tools equal to 0. This is the first condition. and second is, You can take the absolute value. For the negative integers. Also.  And it can be less than equal to. You can put 99 or if you don't want to use the  equal sign, just use 9 on this side instead of 10. And on this side, your 100 Right. So after this  >> 24F2004744 SHIVANI V: And the spelling mistake.  >> Programming in Python: Yeah. Thanks.  So if I call this function, no. Easy level questions can be done in one line only. so, let's take 25, It should be done.  Wait. Which part is index.  okay, three equal to  Definitely done false and for any even number will return to as long as it's. In two digits. A simple question. Okay, I hope this is clear for everyone.  >> Kalyani Shubhankar Badave: Man, can you please? The. 99. >> Programming in Python: Yeah. >> Kalyani Shubhankar Badave: Why did we take?  >> Programming in Python: See, you want the number to be two? Exactly, two digits, right? So it has >> Kalyani Shubhankar Badave: yeah, so what  >> Programming in Python: two fall between 10 and 100, It cannot be 100, has to be less than hundred, and it has to be greater than 9. Right. These, this is the condition. So instead of that, I just use greater than equal to. So I change the conditions either. The number can be greater than equal to 10. That is, it can be 10 or greater than 10, and it has to be less than equal to 99.  >> Kalyani Shubhankar Badave: Okay.  >> Programming in Python: Okay. >> Kalyani Shubhankar Badave: but,  >> Programming in Python: So let's do the second question.  Is the second one. So, you have to write a function. It's called is.com or is Dot or Dot in. So you basically have to take a domain name. Right. And you have to check that whether that domain ends with.com or dot in. So, if any of it is, anyone is true, then the entire function should return true  Otherwise false. So these are some examples. See if it is dot comma dot in. It is returning true for dot org, it should be done first. so, this Code, you have to write. Okay, I'll give you two minutes, please. Write this everyone if you're done  posted in the chat.  No, no need to take input. You can just write the function for it.  okay, so most people are using ends with  can anyone write the code with slicing  Let's take one more minute. Try writing it with slicing.  Okay, well, I didn't see anyone use that everyone is using ends with. Yeah, okay, someone as you slicing Okay. So I've run this code, right? Placing this in the return statement. So let me write it.  Okay, so the function is We're calling it. Is. Dot com. Or. Dot. In. And it will take some domain name as its parameter.  Now obviously you can use the ends with method that is the easiest way of doing it. If someone wants to use slicing, then you can just take out extract the  Last four characters from the domain and check if that is equal to.com. and in the odd state after the OR statement, you can extract the last three characters and check if that is dot in Right, that's one. Way of doing it. So, just write domain. If I want to take,  Minus 4 then colon. so that will extract last four and you match it with equals to equals to if it is.com And second function. Second condition is  You take last 3. And check if that is not in. So if any of this is true, then the function will return true. Let's check. For, let's just place. My email.  So this is returning true because this address ends with a.com, let's check for the other case. Also, so, for all it is giving false Okay. This one is clear for everyone.  Third question. This.  Now, you have to write a function. So we have one element and two lists. Okay Now this function is supposed to check whether the element is present in opposite halves of the tool list. So I have to list sell one L2 and one element. Now, we are dividing each list into two hubs, okay. Basically, you have to find just the middle index and that will divide the list into two halves if the element falls in two cases in which the unself to the return statement should return. True, first cases, if the element is falling in the first half of list 1 and second half of list 2. and second cases when it falls in second half of list, one and first half of list 2. Right for other cases. If it falls in the same half for both lists, or if it is not present in any of the lists, then you have to return false. These are the examples, right? So here three see in the first example, three is falling in the second half of list, one and second half of list 2. So this is false has to be an opposite house. Here 7 is not even present in any of the lists. So it also return false and six is present in first half of L1 second half of L2 so this is true. please write the code for this also and give To three minutes. >> 24F3004439 PRIYANSHI KUMARI SINGH: size of,  >> Programming in Python: Size of both. The list doesn't matter.  Can be any list.  Just assume that there of even length, that's what is given in the question.  Yeah. So take two minutes. Write the code if I done paste in the chat box.  Good. So this is a basic just slicing question, right? So you just have to check that both halves of each list. So should I write it?  So definition of the function function name is, let's call. It is present. In. Opposite halves. Three things we have to take. One, is the element.  Then. Let's call it L1. Lists. The Specify The Type version is a list.  So first you need to check what is the midpoint of each list, right? So we have to find the middle index. So let's take one variable called m1 in which I'm going to store the middle index of the first list. So, that is just take the length function length of L1. Then to the integer division. By 2.  similarly, one more variable to take the midpoint of list to  Length of List 2. Right.  These are the two midpoints. Now we have to check the condition. So in return statement just right. first checking is, if the element Is in. L1. First half.  So the first half means 0 is index to middle element. That's the first term then. It should also be in the Second half of L2. Well to second up.  this is one condition, another condition that can also be possible is Or. Just same thing. You can copy this.  Reverse it.  So here we check for the second half in the first list and first up in the second list. >> 24F3004608 MUKESH GUPTA: The empty, it is the  >> Programming in Python: so, for size, Is okay. >> 24F3004608 MUKESH GUPTA: Yes. >> Programming in Python: Yeah, so this is first checking in second half of the first list and first half of the second list. If any of this is true. Let's call the function of  Give me any two examples.  >> P_S _Kiran: 90630.  >> Programming in Python: We are taking evil, linked lists, right?  9 0, 6, 3 and what is List 2.  For which element am I checking? So, if I check for six, right? And I'm putting six five Nine zero.  okay, then you just call this function, so print  This thing.  so, you can directly put element as Let's check for six and L one. L.  Right? And it's giving true.  the six is in the second half of L1, and first half of into  Now, what if I remove six from here? Put seven here and six comes in the first half of L1 as well. Then it is giving false. Yes that's the wrong condition. This one is clear for everyone.  Those who wrote the code, good, those who didn't face their codes, is it clear?  Okay, then I'll go to the next question. So three of them. >> P_S _Kiran: Oh man.  I hope I said my good. Can you check it? It's incomplete but it is working.  >> 24F2004744 SHIVANI V: for me, also it's coming through  >> Programming in Python: Which one? >> P_S _Kiran: At children.  Yeah, this one is. Bit. um,  >> Programming in Python: But here you have only checked one condition, right?  Maybe the all the private test cases are, I mean, the lists, and the element are all in this format only that is, it is present in the first half of the first list and second half of the second list. That's why this is giving true. Can we maybe can configured that way?  Because this is not all the possibilities.  >> P_S _Kiran: Yeah, that I know this is in complete.  >> Programming in Python: so, maybe the in the test cases, this is the type of Function called, i mean the parameters are same as this.  >> P_S _Kiran: Now, the public ones, we can see what in the privatistics. Also passing three auto  >> Programming in Python: Yeah, I haven't sometimes all the possibilities and maybe not there.  >> 24F2004744 SHIVANI V: Yeah, I'm getting through Mem for this. I just posted in the chat box.  >> Programming in Python: 8:26. Right. This one is your phone. She  >> 24F2004744 SHIVANI V: Yeah, X-Men. Yeah. She  >> Programming in Python: Okay. yeah, you have returned element in pasta and second half or  Inside.  >> 24F2004744 SHIVANI V: Okay, thank you for  >> Programming in Python: Yeah. Okay, so this is clear. We can go to the next question. This is medium level.  Okay, so you have to write a function which is called count or three digit numbers.  Right? So, it takes a list of integers which is called Nums here and returns the count of numbers that are odd. Three digit numbers, you have to ignore the  negative sign, don't need the sign and it should not be none. It's in the entire list of numbers. You have to check for what three digit numbers. Let's see, the examples. Also write the code.  Difficult level questions. Two of them. I will solve. Okay. This is the last one. You write the code first.  Opi 2. Question level is pretty much same as Opi one, okay? The only different thing mainly is this. Island, that's all.  Difficulty level is exactly the same.  Okay.  >> Dhanaraj Bala: So there may not be questions related to recursion. >> Anooja Shenoy: Posting programming.  >> Programming in Python: One by one, please.  >> Anooja Shenoy: Pattern questions also.  >> Programming in Python: Pattern questions might be there. See, whatever. Was there in Opie one. All of those questions can come in Opa to  also the only extra thing is this file handling.  >> P_S _Kiran: I'm doing.  >> Dhanaraj Bala: so, we may not expect any questions from  Recursion. And  >> Programming in Python: No, no. >> Dhanaraj Bala: The error handling.  >> Programming in Python: A recursion this part is not there. Okay, it's still week, eight only. Okay. Everything. >> 24F3002097 ASTHA SONI: I am, what is the?  >> Programming in Python: Weekly? See, it's pretty much. I mean, every week up two week, eight is important for repeat. Well, I cannot specify. I mean in every set there will be different types of questions. You cannot really specify. But one question is going to be there from file handling That is for sure.  >> 24F3002097 ASTHA SONI: Pokemon. And what is the Syllabus of Andamine? Python is there an exam of Python?  >> Programming in Python: Yeah, there is a >> 24F3002097 ASTHA SONI: Or not.  >> Programming in Python: theory exam for income so that is the entire 12 week. Syllabus 12th week. I don't have I don't think we have any content, right?  >> 24F3002097 ASTHA SONI: Yeah. >> Ayush Verma: in twelfth week, we have no under  >> Programming in Python: Yeah. So it will. So from now on that's why these are all just practice sessions with nothing new. We are footage after this also, you will probably one more session for opi revision and then in term revision, that's it.  >> 24F3002097 ASTHA SONI: Oh, maybe not. And I'm like these questions are arise or the mcqs will come.  >> Programming in Python: In terms, see there in Mcq format, but obviously, you have to solve the code yourself.  >> 24F3002097 ASTHA SONI: Yeah, sure. Okay. Thank you.  >> Programming in Python: Okay, so a lot of your posted, let me know, write the code.  okay, so the function is definition, is is Which one are we doing? Or three digit right? So count Odd. Three digit numbers. Which takes some list as it's argument.  Now, you can use generator here. Also, if you want, I am just going to simply write it using account variable. so you can first initialize count as 0, This is going to keep the count of how many such digit numbers are there. So then you can go for numb. That is for each number. In the list, you can check Num is Not none. This is the first condition. Not none. A person to. so, you can Keep it like this. Also okay, numbers and two, This can also work because if it is an odd number, then this will evaluate to one, which is taken as true, Okay? But you can also add this so not equal to 0.  Length of the convert this number into a string and then take the length of that string. And the absolute value obviously.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: can you explain why we are converting that into string? >> Programming in Python: To get the length.  Because we are going to check here, right? That this is equal to 3. For 3 digit numbers. So, let's call. Let's take a list of numbers.  >> 24F3004632 VICKY THAKUR: now, we can use boundary condition also is not like  >> Programming in Python: Yeah. Yes. Yes that also you can use Okay, if I take this list, let's try.  originally, the solution for this was given with the generator, so you can use some function for that. But I think if that gets confusing for anyone in the exam point of you can just use it. Okay, missed one line here. So if this  >> 24F2004744 SHIVANI V: Have bad.  >> Programming in Python: condition is True. >> 24F2004744 SHIVANI V: oh,  >> Programming in Python: Yeah, I forgot to write this name. So then you just increment count  okay, if all the conditions are true, then you  Okay, one equal to is missing. Okay, why is it giving none what's wrong in the code? Oh, we haven't returned. so, Let's just put a return statement here return.  Out.  Okay, this is also done clear for everyone.  >> 24F3004632 VICKY THAKUR: And what if we interchange the conditions like you have written if Num is not none and a numb percentage 2 is not equal to 0 if you interchange those two  >> Programming in Python: It doesn't matter. >> 24F3004632 VICKY THAKUR: conditions, we put  >> Programming in Python: Yeah, because they joined by and the ordering doesn't matter.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Oman, can you write this code without using count? >> Programming in Python: Yeah, without using count, you can use the generator. Okay, so you can use some for that. Should I write it now?  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Eamon please.  >> Programming in Python: Okay. Just give me a second.  This can you wait one second I'm just having a call. Just quickly, take it and come back. >> Ayush Verma: Okay.  >> 24F3004608 MUKESH GUPTA: The. >> 24F2000856 ANOOJA SHENOY: Gives me where we need to write the course to show, man.  >> 24F2004744 SHIVANI V: Collab. I will just share the link on. >> Ayush Verma: I have any shoe regarding this syllabus for obb2, if anyone knows, please clear  is in opp to problems are going to be asked from up to the week, 8 or 9.  >> 24F2004744 SHIVANI V: It's up to I heard from instructor, like it's from be Quantum Week or 10. But mostly, it will be from up to week eight. So,  >> P_S _Kiran: Are not that. That is just for, in terms for overpay, you  >> 24F3004632 VICKY THAKUR: Of none of what OPP for OPP. You can go into the practice set and there will be OPP. 2. Practice set in that. You can see, there are three like a practice sets in that it is up to file handling only so you can go in the portal, make a dashboard and you can check it there. It is mentioned there. OPP 2 is just check the pattern, the same pattern will follow.  >> 24F2004744 SHIVANI V: But sometimes there are the dhaka of asking question. So week 9.  >> Programming in Python: Hello. Yeah, I'm out of it.  >> 24F2004744 SHIVANI V: Yeah, yes.  >> Programming in Python: Okay, yeah, so this function you want to write without the count, right? see now here, if I don't want  >> P_S _Kiran: Yeah, and then he >> Programming in Python: Yes. Sorry.  >> P_S _Kiran: Or in that case, we can use a filter.  >> Programming in Python: Yeah. See, I am going. I can use a generator. Okay, let me write it with that. Different ways to do this problem because these are very simple problems. so, just in the sum function, what we can do is  So you place one, you know what is this one for anyone will explain to me?  >> P_S _Kiran: if our number is odd and of length 3,  >> Programming in Python: Right. So if the condition satisfied, then every time that will return one to the generator, right? And it will keep on adding those ones. so, for  >> 24F3004596 LAKKISETTY RANGA ROSHINI: What is my generator? >> Programming in Python: generator was taught in which week, three or four, I think  The generator functions are. Do you want me to go into a detail of this, or Because I explained all of that. Wait, let me just write. >> 24F3004596 LAKKISETTY RANGA ROSHINI: Just tell it on screen. >> Ayush Verma: Even this grief, it man.  >> Programming in Python: Okay? So generator functions are what it is, basically, it's a tool that we used to create iterators. Okay. Like here this is what this is an iteration only we are doing right. For loop. So, generator functions are a special type of function that return an iterator.  object. Okay. now, instead of using return to send back, one single value now generator  functions, what they do is they produce a series of results like here. See what is happening. Every time I go through this loop, Okay, let me write then  Therefore first  so, for them in nose, if Number is not. None. Number two.  Same thing. Length of string of. Absolute value of the number. if this is equal to 3, Right. This is our condition.  so if I run this, see if it gives the correct result or not, Wait, I haven't used the I've used return.  >> MANGATHAYARU NC: Equal.  >> Programming in Python: In. Okay, one more is equal to as well.  >> Ayush Verma: And then divided by student does not equal to 0. >> Kiran Dhaka: I'm going to.  >> Programming in Python: Yeah, it's it's not required C if you just put this now. So if the numb is odd, If it's let's say a hundred one, then this part will evaluate to one only and  one means true in Python so you don't need to check that like equal to if you don't use then also it will work. Okay? Because this itself gives a Boolean value One or zero.  >> Ayush Verma: Okay.  >> Programming in Python: See, this also works. So this is a generator here.  okay, for every C for every iteration, if the condition is true, then this one will be returned. To wear to this sum function. So if for every iteration, if it returns of one, it will keep on adding those ones. Right. So for only two values here, one will be returned. That's why this one is written in line. 3, This is an example of generator. So, it's >> Dhanaraj Bala: We can also use count right? Count.  >> Programming in Python: Found. Also, you can I think count? >> Dhanaraj Bala: instead of some  >> Programming in Python: ways simpler. Yeah, that's why I use found first.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: A pumpkin.  >> Dhanaraj Bala: the account here is of some If he is change it to count then instead of one, we need to use num. Correct.  >> Programming in Python: Yeah. >> Dhanaraj Bala: It's a another way.  >> Programming in Python: That is for every num, if it goes, if it's corrected, the conditions are correct. Then it will count that.  >> Dhanaraj Bala: Thank you.  >> Programming in Python: Okay. >> 24F3004596 LAKKISETTY RANGA ROSHINI: For using.  >> Programming in Python: you don't use one, I mean this is some, right? So it is adding one every time. The condition is for every iteration. If the condition is satisfied,  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Yeah.  >> Programming in Python: Okay. Now see these are easy, medium level questions, we have done now, we know difficult level questions. We have to write multiple functions, right? So I have taken two such problems with solve them. This is the first problem.  So we have to take a list, write a program that takes a list of full names and outputs their initials. Okay. So a name can have two or three words in it  Middle name might be there. So we want all the initials followed by the full last name. Okay, so don't take the initial from the last name, just the first name and middle name, initials, and followed by the last name. Entire last name. So output should also be sorted alphabetically. Now, an initial is first letter of each. Part of a name. We have to assume that names are given in the correct case. That is all the input lines are already in the proper case. So this is iotide question. So here, you have to take input from the user. So, first line of input will contend now, how many number of names are there, right? So, if you're input has four names in it, then the first line of input will be 4 so you have to take first this any you have to take input from the user and then the, in next in lines of code, that means in this example, next four lines of input is what does the four different names? Right. So, this is the input sample. So first You take n as input which determines that? How many next in number of lines contain in different names? For three. There are three names now. Output should be in this format. The C from every name, we have taken the initials followed by the last name and they're also sorted in alphabetical order.  Right. So let me write the code for this is the problem statement here for everyone.  >> 24F2004744 SHIVANI V: Man.  >> Programming in Python: This is also medium difficulty only. >> 24F2004744 SHIVANI V: And can we try for three minutes? Is it possible or  >> Programming in Python: Yeah, that's right. Okay. No problem, try to late 50, to 3 minutes. Take and try it.  One end is here you can use Lambda function.  Yes, this will also work.  He both of you that have posted the code right Bhumika and Kiran. I think So, both the codes are correct, obviously, but you can write it in and even shorter way.  But yeah, in exam whichever comes easy to you. Do that. No need to shorten it.  >> P_S _Kiran: On how?  >> Programming in Python: Okay, should I? Yeah, I'll show you if you use lambda function, it becomes easier. Okay, should I start?  You continue writing those who are writing, I'll just start writing the code. okay, so we have to take  In input from the user first, right? So in in first take,  Integer type of input.  This is the first line of input. Okay. Now, next in lines are going to be the names. Okay, so we are first going to take an empty list Where we are going to store these names.  Okay, next now we are just going to run a for loop.  In range in to take all the end names from the next 10 lines of input. now see, In the name variable, you take the input.  After that, we need to split it. So let's take another variable called parts. We'll split the name according to space between the words No name, not split. You can use it. Once that is the >> 24F3004439 PRIYANSHI KUMARI SINGH: Remember we can.  >> Programming in Python: Yeah. >> 24F3004439 PRIYANSHI KUMARI SINGH: And we can also write the split in the name partner. Name is equal to input dot split  >> Programming in Python: Yes, but I'm using this part is Variable Y. I'll show you. Okay. >> 24F3004439 PRIYANSHI KUMARI SINGH: Okay.  >> Programming in Python: Now, we have to create the abbreviated name next, there is the format that we want. So it's just simple straight. Formatting. What I'm going to use a lambda function for this. So let's call it short name.  Okay. So, if No. We are going to join using what dot and space. Right. That is given in the question. Dot and space. So then Dot join you, right? You use a map? I'll explain all of this, okay? Lambda. X is the parameter. will take x of 0. Then parts.  So what does this stick? This part parts, this sliced part. What is this?  >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Lakshmi.  >> 24F3004439 PRIYANSHI KUMARI SINGH: And we'll take the last surname.  >> Programming in Python: Last name. >> Trilok Prakash Kondaboiena: First of the,  >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Determines.  >> Programming in Python: So then you also have to join the last name at the end, right?  Right parts. Negative of 1.  So this part will take everything except the last name. And this one will take just the last name because we have to follow it by the last name.  so this is the simple string formatting, you can do here and then once you have got it, I'll explain this line with Just append it to the Names list.  Okay, names up. And A short name that you created. now, since we need it in sorted order, Just do a simple sorting after this. so we can write for Name in. Sorted. Names.  Print. Name.  Okay. Now, see this line. Okay, this formatting that we did. So I just took out an explanation. Yeah.  >> P_S _Kiran: Map The first letter that you are accessing for each word, has to be a problem.  >> Programming in Python: Yeah, the initials are already in the correct case, right? That's given in your problem statement. Only you don't have to wait like check for the case. >> P_S _Kiran: Okay.  >> Programming in Python: Okay, see. So first, the split that we are doing is it is just splitting the  name into a list of words, right? Like this. Okay. Now in the formatted part you see this screen right? The PDF  okay, so in the string, formatting what we are doing seek this parts, this slicing operator. What is this giving it is? This this slice gives us all element except the last one? So that is a colon negative 1, gives that, right? Now. The second, this part of it, the mapping and the lambda function. So, map is a function method that we know that applies on the Lambda function itself. So the lambda function is lambda x and we are taking x of 0 to each element in parts of this. That is a rest of the name, except for the surname. Whatever is present in the rest of the name. We are taking the first element from each of those words. So x of 0. Okay, this extracts the first letter from each name. And after that, you have to also join it. Right? That's why the joint function is also there. So it joins the initials with the dot and space that we specified.  And at the end you also have to keep the entire last name. So, keeping parts negative 1, This is the last element or the last name. So, this will give you result like this. Okay, like b, a Rickman.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Mum was the use of Lambda function here.  >> Programming in Python: So, Lambda function is an anonymous function, okay? So you can just take one variable here, what we are doing? See here, the lambda function is taking this x variable as parameter what is x. so in this part of this part that you have sliced out parts of colon negative 1, this is what this is the everything except the last name. right in the parts variable where we have stored the different components of a single name. So it is taking every component except for the last name and then the eggs variable is what it is acting as a representative of every single element in that list. so, for the first name, let's say if I consider the first name as X, so we'll take x of 0. That is the first letter in that first name. Okay, you can check out the previous videos where we have discussed lambda functions, there will understand So this is just an easier way of writing it to your friends have also written it in different ways. They're pasted in the chart, you can try those codes. Also Let's try if this runs properly or not. Okay.  So, let me give it. Tell me input. Let's say three names I'll give  >> Dhanaraj Bala: sorting is not done yet, I think, right sorting >> Programming in Python: Sorting is done right here.  This is the sorted part, so for name, in sorted name. So you just thought that entire list names, where your weaponed all the abbreviations, Then. >> Dhanaraj Bala: Or credit is a function.  >> Programming in Python: Yeah, sorted.  >> Dhanaraj Bala: Thank you.  >> Programming in Python: So this 3 is the first line of input. After that, we can take any three names. Let's give it as input. Just tell me any name. Say. Through. Is the first line of input.  Second line. Third line. So it is giving me everything in sorted order. In that particular format we need, right? This is one way of writing. Is it clear to everyone the code?  Okay, line 6 is clear, right? >> Trilok Prakash Kondaboiena: No.  I mean the line number 9 for name in sorted, you the thought it was hot Trilok will happen only once or every time we pick up, picks up a name from the  listing.  >> Programming in Python: No, no see all the names are present. All the abbreviated names are present in the names list. Only, right.  >> Trilok Prakash Kondaboiena: Correct. Correct.  >> Programming in Python: So, if you saw the entire list and then print one by one. So the characters will be printed in sorted order only.  Yeah. >> Trilok Prakash Kondaboiena: So it first, it will start the names and then from that, it will pick up each. one and print it.  >> Programming in Python: Yeah, when you take sorted names, it. >> 24F3002769 DIBYA MAZUMDAR: Them again. Them can you please explain the line number six again?  >> Programming in Python: Yeah. >> 24F3002769 DIBYA MAZUMDAR: Considering.  >> Programming in Python: See, that's why I Took this PDF how it is easier to understand from here. So first, what we are doing? See. This part of the slicing. So in parts what have we stored parts is storing every component of the name, right? First name. Last name, middle name separately in a list.  now, when you take part school and negative 1, so this slice will give you every element except the last element  Negative 1 means what. That that represents the last element in the list so you're taking every element except that last element. Right, so if the name is Bob Allen Rickman then parts of this, slicing will give it Bob and Allen just these two  Okay, so this is one part. Now, in the Lambda function. Think of x as the parameter variable in this anonymous function, okay?  So x is every word in this list that is Bob and Allen these two, right? So first thing of x as Bob, So, if I take x of 0, it will extract just 'b'. If I take x of 0 in Allen, it will take a right. This is how the Lambda function works. so after this, after these are extracted,  Okay. Yeah. >> JYOTHI jv: It will take the index value, right?  >> Programming in Python: So x of 0 means, 0 is index. That is the first letter of the name.  >> JYOTHI jv: Okay.  >> Programming in Python: Right map will apply the Lambda function to each element. Okay? In. So we want to apply this lambda function to every element in this parts of negative one, this slice, right? Like Bob, and both of these, I want to apply the Lambda function too.  Map is to apply the Lambda function. Yeah.  >> JYOTHI jv: Okay.  >> Programming in Python: Yeah. after this, you have extracted now the initials But you also have to follow it with what this entire last name. So, last name is what, which slices last name, parts negative one this negative one index contains your last name, right? So that's what I've taken here at the end. Now, you have to join things with what the entire problem statement it is given that it the output should be in a  particular format. So the initials separated by Dot and Space, same for the last name. So that's why we are joining with. Dot space. and then at the end, the last name will come Okay, that's why the join function is there. So every initial has to be Separated by a dot space. Understood.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: None. The same code, which are written. I have written their number, but it is showing Error.  >> Programming in Python: What what error is it given?  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Like it is not running them. This cases are not passed.  >> Programming in Python: They're not passing.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Yeah.  >> Programming in Python: That shouldn't have a heavy copied the exact same code.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Yeah.  >> Programming in Python: Just paste it. Once let me check.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: And pasted.  >> Programming in Python: And this should work.  Okay, who is this? This last one.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Yeah.  >> Programming in Python: Dot space. Don't worry.  Looks okay. Only is there any Indian national or anything you're missed?  If you have missed just check the indentation one more time, otherwise it's just till the end of the session. Then you share your screen and I'll check >> 24F3004596 LAKKISETTY RANGA ROSHINI: Yeah. Okay.  >> Programming in Python: Okay, is it clear for everyone? Should we go to the next question?  >> Trilok Prakash Kondaboiena: Who else say, for example, for four parts of our team?  >> Programming in Python: Okay. >> Trilok Prakash Kondaboiena: Rather than 2.  >> Programming in Python: Good. Three. Initials  >> Trilok Prakash Kondaboiena: let us take for example. Three initials? So the the dot you you have introduced between the last cent last part of the Look at the code.  >> Programming in Python: After every initial, there will be a dot.  >> Trilok Prakash Kondaboiena: But there is a final dot which you are given between this flower back, it's That between two flower brackets.  >> Programming in Python: Yeah, that is to join the last one. That is the last name.  >> Trilok Prakash Kondaboiena: The last initial.  >> Programming in Python: No, not the last initial. This part is the last name. Surname.  >> Trilok Prakash Kondaboiena: Correct member before that. There's a daughter, right?  >> Programming in Python: this dutta,  >> Trilok Prakash Kondaboiena: Huh. That is for the last initial weight. That's what my question. What is a dot there? What it is doing?  >> Programming in Python: This is to join that last name with the rest of the initials. Okay, after every initial, this dot space will come. >> Trilok Prakash Kondaboiena: Correct.  >> Programming in Python: And then after that is done, you also have to join it with the last name, right? this rod is for  >> Dhanaraj Bala: I think if there are more than one, then only the first dot will come. That's  >> Programming in Python: Yeah. >> Dhanaraj Bala: I think that's what is question. So first Dot will  >> Programming in Python: Yes. >> Dhanaraj Bala: not be added unless there is one more exist. So that is the beauty of this, I think, right? So for example  there are only one first name Alan Jackson, it will only, it won't put the dot because there is no, there is  >> Programming in Python: see, we can just try running this again with A name that has.  Only one word. Okay.  >> Trilok Prakash Kondaboiena: Hmm. Okay.  >> Programming in Python: Let's see what it gives. So  This from this second name. Let's take just the first name, you see? >> Trilok Prakash Kondaboiena: Sure.  >> Programming in Python: okay, so this dot will come  >> Trilok Prakash Kondaboiena: okay, when there's this funds one, okay, John  >> Programming in Python: Yeah, then it is treating it as the last name.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Mom, can you explain the third line like can we use for? underscore like, without >> Programming in Python: Yeah, this is just too. Yeah this is just two iterate through all the inlines of input. This is anything you can put, doesn't matter.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: but,  >> Programming in Python: Okay. Now  >> P_S _Kiran: Kind.  >> Programming in Python: Sorry. >> P_S _Kiran: Or can we give us?  >> Programming in Python: Yeah. This is just a simple folder. Okay. Anything you can use.  >> P_S _Kiran: But now we're variable cannot take symbolism. You should definitely  >> Programming in Python: This symbol is saying for.  >> P_S _Kiran: Oh yeah.  >> Programming in Python: Yeah, so you want to use ie or J or something like that here.  >> P_S _Kiran: No, I'm saying. If they can use symbol. Of variables, can be only.  >> Programming in Python: Yeah. Variables can be only alphanumeric, don't take special symbols.  >> P_S _Kiran: But unless code is not all for numerical.  >> Programming in Python: This, this type of see this line, why it works is when you have lines of input, right? I don't know what that input is. Okay, so I'm not using a loop variable. In that place, you can use an underscore whenever you need to take a number of lines of input underscore is used. okay, this is  >> Dhanaraj Bala: So we get I also find right? Even if use, I that span, but I is not used but it should be okay, right? Or I in  >> Programming in Python: Yet forever. See if I just change this code here, if I put, I  >> Dhanaraj Bala: I that also will work.  >> Programming in Python: undetermined literals,  Something is changed, okay? This line of  Code. Do the same thing here.  I just put same names, same thing, it will give you can use underscore, you can use any variable it's just to iterate through the lines of input. Nothing else.  >> Dhanaraj Bala: Placeholder, right? Because the  >> Programming in Python: Yeah, just a placeholder. Okay.  Yeah.  >> P_S _Kiran: For a spider, you have something to take notes.  >> Programming in Python: Spider. What?  >> P_S _Kiran: For for a spider, you have a feature to take notes.  >> Programming in Python: Yeah, I know I didn't use that.  >> P_S _Kiran: But how can we do that in obsc code? How to take notes in VS Code.  >> Programming in Python: How to take notes in ways? Could I haven't tried, I haven't read base code for Python at all. I use Python only Okay, I'll check and tell you let me just see how to do that.  Okay, now we'll do two difficult questions and we're done. See. In this one. First question. Okay. So you have Yeah. >> Trilok Prakash Kondaboiena: Them. Sorry, when before we go, into difficult questions, I have to simple questions but I'm not able to solve it. Can I give you the  >> Programming in Python: Yeah, just send it in the chat.  >> Trilok Prakash Kondaboiena: Yeah.  >> 24F3002769 DIBYA MAZUMDAR: Use now which are given in the code.  >> Programming in Python: All over. Excuse me. Thank you.  Okay.  >> Trilok Prakash Kondaboiena: By my center on the chat window. >> Programming in Python: Yes, I'll check and solve your questions.  >> Trilok Prakash Kondaboiena: Yeah, it's  >> Programming in Python: Okay. Can you do one thing? It will be better. I mean, last week also one student did this just can you send this in mail in case I lose it okay, because I don't  have these papers with me right now so I need to check the problems.  >> Trilok Prakash Kondaboiena: Okay.  >> 24F3004596 LAKKISETTY RANGA ROSHINI: Nothing.  >> Programming in Python: Okay, just mail it to me and you the answer by tonight only.  >> Trilok Prakash Kondaboiena: Which one this? Okay.  >> Programming in Python: I've sent you my mail in the chat box. Just send the question codes. >> Trilok Prakash Kondaboiena: I need to send.  >> Programming in Python: No, no just send the question code that is. Okay, I'll check.  >> Trilok Prakash Kondaboiena: Okay, the same thing which I put it on a chat.  >> Programming in Python: Yeah, yeah, just send it as a male, that's it. >> Trilok Prakash Kondaboiena: Okay.  >> Programming in Python: Okay, now see in this type of difficult level problems. So some type of a data structure will be there either. It's a list of dictionaries or something like this. Okay, So basically it's kind of like a data set like we had in CT, right? So here you have a list of dictionaries where each dictionary has the three different types of keys. One is name. One is quantity. One is price. Now, for each item, this is a grocery list where preparing, right? So for each  item, in a grocery list, there is a separate dictionary for that item. in the dictionary, we have the name of the item quantity in which it is  purchased and the price. For each quantity. Okay. Now three different functions. We have to write. For three different tasks. So three requests are there. One request is you have to find the total bill amount. To find the total bill amount, you can sum the price multiplied by quantity for each item.  Right. So like in this example you can see apple quantity to price three. So for Apple the total price is 3 into 2. So like this, you do the total price for every item and just do the sum of that that's a total bill amount. So there should be one function for this. second function is you have to find out the maximum quantity item, the item, which has been purchased in the maximum quantity, if there are multiple such items which have been purchased in the maximum quantity, then you return, the first one that you encounter  Okay, and last task is you have to sort by total amount. So you have to just sort the list by the highest total amount for an item like here, in this  example, see for Apple, The total amount is what three into two six for banana. It's 10 for carotid support. So banana is the highest one, so you should sort it in this descending order. So, three different functions.  >> 24F2000856 ANOOJA SHENOY: So we have to write, we have to write the exactly same dictionary. We have to make, right?  >> Programming in Python: You just have to write a function, nothing else. Okay? Dictionary. All of that is given in the test case, you just write these functions and the main function. Okay.  >> P_S _Kiran: Cutting in blood, you.  >> Programming in Python: Sorry. >> P_S _Kiran: Should we sort in place?  >> Programming in Python: Yeah. Okay, I will also write this with you only, let's start.  Okay, so Since I know that I have to write one function to find the total bill amount,  right? That means there is one calculation that I have to repeat, which is that  calculation, Price into quantity. Right? For every item I have to do this pricing the converting. So instead of doing that, I'm just defining a simple function for that. Let's call it item amount. Okay. An item amount. We are taking parameters.  Item. So what is item item is every dictionary. Okay, that that is one item.  Then what do you have to return? You have to return the price into quantity for that item. So just in the return statement, right item? Put the key. What is price? Start. Item quantity. Okay, this value will be written. Okay. Now, let's come to the actual functions that we have to define. The first one is called total bill amount. Okay. So, total bill amount will take. No list as its parameter. Let's call it. Just call it grocery list. As perimeter, okay.  Now total amount is what let's define a total amount variable. In which I'll store it. So, total amount is initially zero. After that, you have to go through every item in the grocery list. So it is a list of dictionaries, but each dictionary represents an item. So we have to go through every item that is every dictionary. So right, for item, In.  Grocery list. Total amount.  Plus equal to. So now I can just call the function, I defined previously, right? This item amount function,  That will find the total amount for every singular item. Put item as the parameter. Simple. Then just in the return statement, for return total amount. So, first function is done. Okay. next, I have to define Yeah. >> Trilok Prakash Kondaboiena: Case, in this case.  in place of price and quantity, we can also use zero and one as index rate that so  >> Programming in Python: It is a dictionary key.  >> Trilok Prakash Kondaboiena: Key. Okay.  >> Programming in Python: Okay, so you have to use the key to get the particular value Stor. >> Trilok Prakash Kondaboiena: key not, not the index because we know,  >> Programming in Python: No, that item is what you see. Grocery list is the list of dictionaries. So,  >> Trilok Prakash Kondaboiena: Of distribution.  >> Programming in Python: every item is a dictionary.  >> Trilok Prakash Kondaboiena: Current within the dictionary, to select the particular element of the  >> Programming in Python: Yeah. >> Trilok Prakash Kondaboiena: dictionary. You have to use the >> Programming in Python: The piece. Yeah, that's why it's given in the problem statement that there are three types of keys. Okay. >> Trilok Prakash Kondaboiena: Good.  >> Programming in Python: Now, we have to define one more function to find the maximum quantity item. Call it Max.  Quantity. Item. Okay, this will also take the entire grocery list as its parameter. Now, here just write the one line code written.  I'll again, use a lambda function here. Okay, so I need to return maximum Of what? The first time to pass the grocery list. From here, I'm getting my Data.  Then key I have to define key is the condition, okay? That I have to find some max element, but based on what condition the condition is that, max quantity, so key is defining that condition. Okay, now inside the key and place, the Lambda function assign it to the key. The key equals to And the X.  Now X we will take what? What is the condition quantity? Take that key.  Is this enough? If I return this is it enough? What is the question asking? Question is saying this one should give the name of the item with the maximum quantity, right? So we have found the maximum quantity, but we also have to find the name of that. so simply just after this bracket is closed, just put Name key. so for whichever dictionary, it has found the maximum quantity For that dictionary, it will return the value that is stored against the name key. Okay.  Think of this part this entire part is giving just the particular dictionary  containing the maximum amount item. And then you are placing name as the key so it will give you the particular name. Okay, I'll explain all of this in detail. Let me first write the functions. So, third function is we have to sort by the total amount. In decreasing order.  Let's call it diff. Ali.  Amount. again, integrals realist as your Parameter.  Now. I can simply use the sorted function here, right? So I'll call it sorted items. This will also give you a list only. Okay, the sorted items equals. Sorted.  Grocery list.  And let's define, one more lambda function. So what is the condition here? Now, the total item amount Right. So lambda. X. Now, define the function.  So you are you have here two different ways of sorting right? We need two parameters to start. Now, primarily we know, we are sorting according to the maximum amount maximum total amount, but, if two items have the same maximum total amount, then we have to take the one.  Which is. the, in the question it is given you have to sword by name, in ascending order if two items at the same total  amount. So alphabetically, we have to go. So for this, there have two conditions given to the land of function. So the first condition is the primary condition which is the item amount. Okay.  Anyone knows why I'm using this negative sign.  By the negative sign is being used. Because we are sorting in descending order. Right. That's why the negative sign.  Okay, so this is one item amount next. Another one second condition is the name that if I get a tie then I need a tiebreaker that is the name. So alphabetically sort in that case. And what will be returned? Finally, just return. This sorted elements list.  Sorted items. These are our all three functions. Okay, now we have to write the main function also the main function is,  Let's call it. Process.  Grocery list. Which will take as argument. The grocery list. And it will also take the  >> P_S _Kiran: Request.  >> Programming in Python: Request that is, which task you want to perform? Right. so,  I'll just put this as a good practice. So, grocery list is what type of element. List.  >> P_S _Kiran: List of dictionary.  >> Programming in Python: Yeah, I'll just put list and request is what? String.  so if request is equal to equal to three different things I can ask for first, for total bill amount.  Total will amount if that's the request, then you will call the particular function for it.  Returns.  Yeah.  >> P_S _Kiran: Um attend there is another in 16th Lion, it should write a score amount.  >> Programming in Python: Have I missed any brackets?  >> P_S _Kiran: I don't understand the function name.  >> 24F2000363 HIRDESH BUTOLIYA: Amount. Yeah.  >> P_S _Kiran: No, I don't. >> 24F2000363 HIRDESH BUTOLIYA: Land.  >> Programming in Python: No, no, this line some error is there. No.  >> P_S _Kiran: Yeah, it is the >> Dhanaraj Bala: The line number 16 is item underscore amount, right item. The function name is  >> Programming in Python: Okay, okay. >> Dhanaraj Bala: Item.  >> Programming in Python: So total bill amount is the function will work.  >> 24F2004744 SHIVANI V: Here in the line, eleven, you just close the bracket before the name.  >> Programming in Python: No, this entire thing is think of it like a dictionary, okay? This entire thing will give you the dictionary for the corresponding item which has been brought in the maximum quantity. For that dictionary, you have to extract the name value. Okay.  I'll explain this language, just let me finish writing. So I'll take Roshini list as the parameter here also. This is one. it is, if there can be  Second request can be a MAX quantity item.  For max quantity item, which one you will call. just, Return. Next Quantity, item. With roshini list again as the parameter.  and another  ellipse statement can be for the third test request is equal to, What is the name of the third test sword by total amount?  Third task. So for this We are going to call. Written. Third by. Total amount. Again, grocery list as parameter. Now, if  Are the correct request, okay? Either it has to be one of these three or otherwise you just write an L statement. Which returns none. Okay, or you can write invalid request or something like that.  Okay, now to test this function, let's take a grocery list, I had kept it in the video.  Let's take this list alone. And copy from here.  Possible to copy. Okay. Create the grocery list. Now, let's call. so, Process. Grocery list.  It's called the first request total. Bill amount.  So should we try all three?  Stickers.  >> Dhanaraj Bala: Do we need to pass the graphs released?  >> Programming in Python: Those rail list.  Total bill amount is giving none. By,  If request total will amount.  And it should be done this.  >> Dhanaraj Bala: So, it should be within single quote, right? Single quote,  >> Programming in Python: String rate.  Okay, yeah, so now it's giving 20 so that's the summation 6 plus 10 plus 4. Like this, you can check the other ones also. Let's check for this last one for total amount.  Yeah. Amount that comes first followed by apples. And  this works now see for those who did not understand the function, so some parts of it, I'll explain. So this is one, but  Max quantity item. So the lambda functions are just explaining once, so max is used in this lambda function which extracts the quantity from each item, right? We are only taking x quantity. So, each item you're taking the quantity and it will return, what it will return them dictionary with the maximum quantity. Now, you want to access the Name key. So treat this entire line starting from Max to quantity treat this as the dictionary. This part will return the dictionary and you take the name key and extract, the actual name of that item.  Okay? And in the  sorted by total amount in this I've used, one more lambda function. So here, the sorted function will sort the grocery list itself based on a key. So you're sorted, sorting it based on what key by total amount.  Right. So item amount is, what? That is the condition based on which we are doing the sorting. So, item amount x and negative sign I have taken because it is sorting in descending order. Now, one thing can happen that two of the items can have the  same maximum total amount in that case, a tie will happen. So you have to have a backup plan for that. So, this is the tiebreaker condition this second after comma, written x name. So, in the question, it's given you can, in that case, you can alphabetically sort. So this will sort alphabetically from the item name, Okay, so both this conditions have to give in the Lambda function. Okay. Is this code clear for everyone?  >> Dhanaraj Bala: Can you please paste this in the chat or  >> Programming in Python: And share all the documents in. >> Dhanaraj Bala: Okay.  >> Programming in Python: I'll share it in the calendar. I'm sorry. Yeah, calendar, I'll paste the Google Drive link. Okay. Anyways, last week the students who >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Well.  >> Programming in Python: mailed me. I've given them the problems for the last week also. Yeah. Okay, one more question is that >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Nobody has been second function.  >> Programming in Python: Second, this deaf Max quantity. This one or total bill amount. >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Total villagers total below.  >> Programming in Python: See, total will amount. Let me zoom in a little Total will amount. What we want is to find that in a particular grocery list. what is the total amount I have spent? So for every item that is one dictionary, right? It grocery list looks like this. So in this grocery list what is the total will amount? I have purchased two apples where the price of each? Apple is  3. So for Apple, I have spent total quantity into price for every element. It is quantity into price and you have to do the sum of all that. That's the total amount spent. Right? So you take grocery list as your parameter in this function, total amount is a variable which you assign zero first. Now you go through every item in  grocery list which is a dictionary. Every item is a dictionary. And then in total amount variable you are going to do the summation, but see what I am calling is, this item amount this earlier function that I defined. So this you can write it here. Also, if you don't want to write a different function for this, I have written a different function. So this item amount is just for every dictionary. It is calculating the price into quantity. There is total price. Spent on that item. Okay, total money spent on that item. So for every item that value is generated by Item amount and you just come back to the calling function and add those values. okay, that's your total amount just return that  >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Yes.  >> Programming in Python: Okay. >> Dhanaraj Bala: Just curious. So it can also be written like some right, some of like the you the like, Mac quantity item, so it could be written like that, also right  >> Programming in Python: Yeah, you can. >> Dhanaraj Bala: similar,  Some.  >> 24F3002769 DIBYA MAZUMDAR: Man, can you paste the code in the chat box?  >> Programming in Python: This one. Okay. Best  Okay, history. Okay, let's do the last. Problem.  This is also difficult level, okay. But this is simpler than the previous one. See, Here you have a call log history represented as a list of dictionaries is the PDF visible.  >> 24F3002769 DIBYA MAZUMDAR: remember your code is cut in between  >> Programming in Python: Wait. The last part of the function didn't get twisted.  Okay.  See, this PDF is visible problem statement.  Am I not audible?  >> Trilok Prakash Kondaboiena: Him. He  >> Programming in Python: but, See, the problem statement is saying we have a call log history, which is represented as a list of dictionaries again, where each dictionary contains two different keys. One is the name. One is the duration name is a string type of value. It is storing duration is storing an integer type of value. So name is the name of the collar. Duration is the duration of the call in seconds. Okay, so there will be multiple entries with the same name in the data set. That means one person may have done multiple calls, right? So for them, there will be multiple such dictionaries.  So, implement a function called Process Call Logs, which takes the call logs list of dictionaries. That is your data set and a task. Just like the previous one, where task is one of the following? So three different tasks here. Also, first task is to get the call counts.  so this first definition of function, it should return a dictionary with caller names as Keys and the count of their calls as well. That is how many times this collar has made a call. Okay, so here all the colors are unique obviously as their keys. Second function is get total called duration. So this will return a dictionary  with caller names as keys again. Except the values are now, total duration of calls. To just have to find the summation of the duration for from the original data set wherever their name is present.  Okay? And the third function is most frequent caller. So you have to return the name of the caller who has made the highest number of calls. and if there are more than one such colors, then you have to return the name with the most called duration. Right, two conditions again. So first primary condition is collar with the highest number of calls. If there is a tie, you break the time with the highest duration of call. Balance statement is clear. Everyone. Okay, let's quickly write the code for this. This is simple code. Okay, all three.  Definitions are pretty simple. So, let's write the first function.  So name is what get call counts. So get call counts. Will take that entire call log.  Right? As it's parameter. This has to find out. This has to return what a dictionary. Well the keys are the caller names and the corresponding value is number of times. They have made a call right, so if you have to create the dictionary, You have to create the keys also. So let's Call that dictionary as call count dictionary.  now, for now, go through each record, or each dictionary in this call logs list, For log in. Follow logs.  You have to check whether for that user an increase already in your qualcomm's dictionary or not, okay? If there isn't an entry then you have to create it if there is an entry then you just do a increment by one.  Okay. >> P_S _Kiran: Man. As argument.  >> Programming in Python: Yeah, I'll give it. Okay, the end, I'll give the call log status. Right.  So law for every login color that is for every dictionary in call logs, you check if Log name.  Not in. All counts. there is, if there isn't a key for this name in our dictionary, then you have to create the key. So call counts. Before particular long name. And you assign it, the value. 0. Okay, so first create a key. and then,  anyways, you have to increment that because one entry, even if encounter means one call count, so,  Your name. You can put plus equal to 1. Okay. so this means what that, even if there is a new key, for that also will first create the key then do the increment and if the key is already present, then just do the improvement. after this is done, after you have gone, through all the records, all the logs in the columns just return. The dictionary, you created call counts. Okay, this is the first function. Now, let's write the second one second, one is for call duration. So, it's called depth. Get total.  Quality duration. Same parameter the data set.  For this also almost the exact same code, okay? So I'll just copy paste this part and change whatever is necessary.  so first of all, let's change the dictionary name to Total. Durations.  Okay. Now, for every login, call logs, now the keys here are also the same log name, but the value is what the duration summation of durations for each name.  So if it is not in call in the dictionary, we're creating now that is total durations. If the current log name is not a key. when you create a key for that name, >> Dhanaraj Bala: Then we implement the both in Sing.  Also.  >> Programming in Python: more than Yeah. Yeah. >> Dhanaraj Bala: Can we implement both this in the single function, right? Because it will create single dictionary with both values.  >> Programming in Python: You can do that. >> Dhanaraj Bala: To.  >> Programming in Python: but, >> Dhanaraj Bala: Okay.  No, another dictionary rights. You are returning the dictionary. It's  >> Programming in Python: So, you're creating two different dictionaries in one function. That's Right. That also you can do but here's in The question is, ask for three different functions. We're getting three Okay. So create the key and If it is already present, in that case, just add the duration. So here we will  not increment by 1 here we have to add the durations so plus equal to log duration for that particular entry. Okay. It's done. Similarly, just return that dictionary. We created.  Third task is what most frequent color we have to find, but here's a catch that they can be two conditions. Primary condition is we have to find the one with the highest number of false. if more than one person has been the highest number of first, then you separated by sorry when you do it alphabetically, the sorting, right? So then name has to also be a condition. so that's most Frequent color.  For logs.  so here, what we can do since we already have those other two function definitions just introduce call counts. Okay, and get that. All that get call counts function in here. So that will create the dictionary. Why I'm doing this? I can just take the Max value directly if I do it right. so, call logs, you have to pass Similarly, create one more for this. Total.  Durations.  You get total. Called duration. With call logs.  Okay, now, these two have stored that respective dictionaries one for number of curves, one for duration, of course. Now, the return statement will have returned. Max like we need highest number of call counts. so fast that all Sounds.  Now, we are using one more lambda function here, so what is the condition?  That for a particular name. We are trying right for a particular. name of a user, we are checking. What is their call count? What is the total duration and primary condition is called count. So for every name of user, you're checking  what is the call account? And you take the max of that. So, here, your first primary condition or your key is called count. Okay.  So in Lambda function in this key variable will introduce the rounder function That is key equals to Lambda.  Define it. What are your conditions? All counts. Name. This will give you number of counts for that name. How many times they are And second one is. Total.  What is the total durations?  Total duration. Also, for that name.  Let me see anything.  But okay, so this is well, I'm the function. This is also done. Now this is this return the maximum. base first based on qualcomes, if there is a tie, then break it with the fold,  All right. Now we have to write the main function.  So main is your this process called logs function. Same as the last one. Process called looks, what will you take us?  Parameter your call logs. And the task.  So again, check if task. is equal to equal to  Get called counts. Then return. You get call counts with. As the whole logs.  Now, that is the first task next. Ellie. Equals to equals to.  Get total duration.  Get total. I think it was get total called duration. With total call duration.  Then return. Corresponding function.  All durations with again, call logs.  Third delicious for the third. Task If task. Equals to equals to. Most frequent. Color.  Then return. Most frequent color. Again with whole logs. And last one is if the task is invalid. So just else. You can return none. Or anything else invalid task for something.  I'll just do not. Okay. Now  Let's get a call of.  >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Them sequentials failing incident. Elements.  >> Programming in Python: Yeah, which line can you tell me?  >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: It's function.  >> Programming in Python: Okay. Chill function. Yeah, this is okay. Till there is some issue. >> P_S _Kiran: the duration, not >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Then a third function. >> Programming in Python: Duration. >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: In line, 70.  >> Programming in Python: Yeah, okay, this is okay.  >> 24F1002378 KHEMRAJ DHANRAJ NAKHATE: Yes.  >> P_S _Kiran: Remember is not different.  >> Programming in Python: So we can just put a value error here. That will also look good since we use none in the left. Last question, let's use value error so just right invalid. Task.  Provided. Okay.  Let's get a call slow.  Okay. Now let's call one of the functions. So Print. You have to call the main function, main function name is process called logs.  Okay, process called logs. What is the? Parameter as the call logs. And the tasks. So if I want to do get call counts,  Okay, so in this, what should be the call count for Alice? It should be two more, which should be one.  Okay, this one is working.  Let's try the other ones also. Get total. All duration.  What did I miss?  Okay, here's a miss. Yeah.  Duration is also fine. and last one is, Most. Frequent color. Okay.  Tall of them are working now here.  In the PDF, I have explained some of the parts which I think you might have problems in. so this is the only thing I thought that you may have a problem in because usually students have problem in this lambda function. So here we are calling these two function. calls. First, right, get call counts and get total call duration. So, these two are already defined. They will give the respective dictionaries which were storing in qualcomes and total durations. Our task is to find the most frequent color. That is based on what is our condition that is your key, whatever is the condition is the key. The condition is that we have to find according to the maximum call count. Right. So, that's why you are using. What there is. This is our primary  condition maximum call count. If we get a tie, then for tie breaker, we have a condition is that you have to do it by name that I'm sorry, you have to do it by call duration. So whoever has the higher quality duration, his name should appear  Okay, so for lambda function. Now, instead of x, we are using the variable name because in the dictionaries name is the key. So, in both dictionaries will place this as the key Right for call counsels total durations also, whichever is the primary condition you place. That first second one is the tiebreaker. Okay. Should I post this code?  >> 24F3004632 VICKY THAKUR: I have posted the code for the total. Call counts in the chat box. Can you check?  >> Programming in Python: Total call counts, okay?  This one wiki.  >> 24F3004632 VICKY THAKUR: Yes. >> Programming in Python: Okay. Call logs, call accounts for login. Call logs Okay.  So, where are you creating the key?  >> 24F3004632 VICKY THAKUR: Just you're done a simple like for the total like call counts only, I have not returned the full code, I have written the code for the call counts so I'm  writing the next  >> Programming in Python: Yeah, call comes dictionary your creating right. >> 24F3004632 VICKY THAKUR: Ah, yes.  >> Programming in Python: So for that, you have to create all of the keys  >> 24F3004632 VICKY THAKUR: yeah, so for the name, I have created here  >> Programming in Python: So for name, you have created log name. >> 24F3004632 VICKY THAKUR: Yeah, and  >> Programming in Python: Yeah, so that's your key.  >> 24F3004632 VICKY THAKUR: and then,  >> Programming in Python: And if name in call counts, yeah, if it is already present, then you are incrementing by one. Else you keep it as one? okay, ne  >> 24F3004632 VICKY THAKUR: I should use here in one or like, >> Programming in Python: Sir, come again.  >> 24F3004632 VICKY THAKUR: In the else part. It should be zero or one. One is correct.  >> Programming in Python: No, if you have encountered it once then it should be one. Right? If you have encountered, then only your creating a key, right? >> 24F3004632 VICKY THAKUR: Yes. >> Programming in Python: So it should be one anyways.  >> 24F3004632 VICKY THAKUR: Oh, not 0.  >> Programming in Python: You know, it will never be. Zero means there is no entry.  >> 24F3004632 VICKY THAKUR: Okay, okay. Thank you.  >> Programming in Python: Yeah, this is also correct. So should I paste the corner? Should I just give you the Google Drive link. link after the class?  >> 24F3004596 LAKKISETTY RANGA ROSHINI: We'll face the programming.  >> Programming in Python: Okay. >> JYOTHI jv: He?  >> Trilok Prakash Kondaboiena: And it helps preferable to space the Google technique.  >> Programming in Python: Yeah, I'll do that after the class. I'll do that. Calendar. Yeah. >> Trilok Prakash Kondaboiena: So, that will be as part of the meeting invite list of housing. A.  >> Programming in Python: In the calendar. Only, you can find wherever the Meatling is present. Wait, the last part got cut off with replaced it.  Yeah. Okay. >> Trilok Prakash Kondaboiena: Well.  It was end end of the court.  because, Here. If you look at this return, Max Call counts. I think from the top one, two, three. The most frequent color. >> Programming in Python: Oh, this line, 20. >> Trilok Prakash Kondaboiena: if you go to the return statement X,  yeah, the line ready 9:20 to 23 is there is a particular reason why you are choosing to write in this format like Max.  >> Programming in Python: No, no, you can lie, right? In one line. Okay, I am just writing this so that entire thing is visible. No, no.  >> Trilok Prakash Kondaboiena: Okay. Okay. I thought you have some sort of a mental mind map. do not us to do this, do this. >> Programming in Python: No, if I write it in one line then I have to go left and like this. That's why. >> Trilok Prakash Kondaboiena: Okay, okay.  >> Programming in Python: Yeah. >> 24F3002769 DIBYA MAZUMDAR: Are some part of the code still cut. Can you paste it? The last definition. Just causes.  >> Programming in Python: Process called logs.  >> 24F3002769 DIBYA MAZUMDAR: Process called logs.  >> Programming in Python: I posted it again.  >> 24F3002769 DIBYA MAZUMDAR: From the say, second elliptical to most frequent.  >> Programming in Python: And just paste the whole thing process. How much? I don't know why it's getting cut.  Yeah, posted it again. Okay, so >> Trilok Prakash Kondaboiena: Not just to remind you, those two questions to do two questions, I sent you.  >> Programming in Python: Yeah, I definitely I'll see it after I'll see it after the class and get back to you.  >> Trilok Prakash Kondaboiena: Okay.  >> Programming in Python: Okay, any problem in this anyone?  Anything you did not understand. see, there is no need to use lambda functions if you're not comfortable, okay, you can do it your own way. All of these that we are writing can be done without lambda function. Also, okay. Just a bit of a longer code. That's all.  All right, so next class I'll ask, whoever is taking the next class, I'll ask to discuss some file handling questions. And if you want, we can discuss more op question also. Like this type. >> 24F3004439 PRIYANSHI KUMARI SINGH: And please also include the pattern printing questions. >> Programming in Python: Pattern actually opa to the Python's I have gone through. I haven't been pattern.  But okay, I'll tell the next instructor to discuss while handling.  >> 24F3004439 PRIYANSHI KUMARI SINGH: Yes, none of the Pyth.  But it is.  >> Programming in Python: Hmm. Usually, it's not as it's  >> 24F2000856 ANOOJA SHENOY: Opp one only pattern is present but still. Opp were No.  >> Programming in Python: Still, it's better to know, right? If it is not clear to any concept is not clear to. You see it's not about the syllabus right after this. Python course you should be ready to solve this type of problem. So if you have any doubt solve it before income, Okay, I'll ask these two things and I'll check those two questions you have sent me. Alright, thank you. >> 24F2005169 SRIDHAR HARIHARAPUTRAN: And file handling will. >> 24F2001515 ADITYA KOLLURU: Remember, when you  >> Programming in Python: Yeah, I'll post it.  >> 24F2000856 ANOOJA SHENOY: Thank.  >> Programming in Python: Okay. Yeah. Thanks for joining everyone. Good night.  >> JYOTHI jv: Thank you.  >> 24F3004439 PRIYANSHI KUMARI SINGH: Thank. >> Trilok Prakash Kondaboiena: Thank you. >> 24F2005169 SRIDHAR HARIHARAPUTRAN: but,  >> 24F3002769 DIBYA MAZUMDAR: Can you take one more? OPP practice this week?  >> Programming in Python: I won't be taking but some other instructor will take one more session on, okay?  >> Trilok Prakash Kondaboiena: Ma'am. Please Add  >> 24F3002769 DIBYA MAZUMDAR: Sell anything.  >> Programming in Python: Not sure. Maybe be yourself. Wait, let me check.  >> 24F3002769 DIBYA MAZUMDAR: as if you said to that because the other two instructor session is Much helpful because I'm struggling to understand from other two instructors.  >> Programming in Python: Let me check one today's 31st.  Wetness. There is one. Your opio is on what did sixth.  >> 24F3002769 DIBYA MAZUMDAR: Six to six for all.  >> Programming in Python: Okay. So before that Opie, I can see one session for poster so maybe he will discuss how big questions there.  >> 24F3002769 DIBYA MAZUMDAR: You can take Thursday, Friday. >> Programming in Python: Thursday, Friday, Board, Desire DBMS, and CT sessions. So I can take >> 24F3002769 DIBYA MAZUMDAR: oh,  >> Programming in Python: but yeah, User will take one session so I can ask him to take the Opie discuss.  >> 24F3002769 DIBYA MAZUMDAR: hmm, abuse, if you ask you, sensitivity,  >> Programming in Python: Yeah. Okay. Yeah. Thanks.  >> 24F2004744 SHIVANI V: Thank you so much.  >> Trilok Prakash Kondaboiena: Mom, please post that link on the calendar month. Your Google Drive link.  >> Programming in Python: Yes, yes, I'll post it.  >> Trilok Prakash Kondaboiena: And this, this recording version available, right on the calendar.  >> Programming in Python: Recording is there in your YouTube? Yeah.  >> Trilok Prakash Kondaboiena: Okay, thank you. 