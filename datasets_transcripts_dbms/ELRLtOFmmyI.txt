good morning welcome to lecture 12 of module one in database management system uh today we are going to see how to create a create an er diagram so till now we have seen the different concepts that are required for creation of an ear diagram so today we are going into the real construction of an ear diagram so before going into the uh construction of an ear diagram let us see let us review the various notations for creation of an er diagram that we have already discussed so this square box uh rectangular box represents ntt and this one is a elliptical elliptical or oval shape represents attributes and if that attribute is having a underline which means that it is a key attribute okay this is the normal attribute okay then this one double square double rectangle implies the weak entity okay so we can dt we have already discussed the concept of weak entity we quantity means that the entity that that does not have any primary key or a key attribute that is called a weak entity now this dot ellipse dotted ellipse is called a derived attribute the example we have already discussed uh date of birth and age so age can be derived from the date of birth so age is called the derived attribute such attributes are represented in dotted ellipse okay so this is a normal attribute and this is a multi-valued attribute we have already seen about multi-valued attribute for example mobile number a person can have multiple mobile number okay in order to so to store multiple multiple values for a particular attribute we use a multi-valued attribute that is represented by using double ellipse double oval shape okay next is composite attribute composite attribute we have already discussed for example a name a name can be a particular attribute can be subdivided for example name a name will be having first name last name and so on okay another example address address can be the street number city district state these are the different subparts of a attribute address okay so in order to store the subparts we use a composite attribute okay this uh this shape diamond shape is used to uh it is used to store the to tell the relationship okay what uh what what is the type of relationship that is involved in the ah in this year diagram okay that is the relationship type so relationship type is represented using this diamond now double diamond double diamond is used to represent the identifying relationship what do you mean by an identifier relationship we have already discussed that identifying relationship is actually used to connect a weak entity and a strong entity okay in order to connect a weak entity and strong entity you'll be using this identifying relationship so using these notations we can create an er diagram okay so let us see an example example one so in university you'll be given certain says statements like this and you after reading the statements i have to create a year diagram okay let us discuss the company database keeps track of a company's employee department and project okay so here uh here we are storing we are having we want to create a company database so that company database must contains what all things companies employee details so employee employee means it must be an entity okay department department is all is also an ndq type okay project is also an id type okay we store the employees name assassin address salary gender data birth age okay so we have to store all these details of the employee entity so these ssn address salary gender data birth are the attributes of employees okay so attribute of employees involved employee name assassin address salary gender date of birth age okay and employee is assigned to ah one department okay so ah i will i will take i will read each and every statement and create the entity okay in each step i will create uh the start the creation of the entity year diagram okay so first uh first we represent what all entities are required so we have discussed from the first statement itself which is understood that we require what uh employee companies uh employee i will so employee is a an ngt department is another entity and project is another entity okay so first of all we draw the three entities entities represented using rectangle okay so employee department and project okay let us see any more entities are coming okay that will be uh we will be understood only after reading the full statement okay next what we do so first we have created this thing and the next task we store the employees ssn number ssn employee name ssn ssn is a unique identification number for employee then address salary gender data birth age so we have to create the attributes for the employee okay so attributes for the employees are name ssn address salary gender data birth okay now let us see the attributes of department what will be the uh attributes of the department and employees assigned to one department member console project each depart each department is having unique name unique number and locations several locations okay so next we'll be having we will write the uh attributes will draw the attributes so attributes are represented in oval shape right oval shape so employees what all uh uh what does the employee entity contain in em employee name employee name is their employee assassin employee ssh so this ssn is actually a unique identification number so it is a primary key okay that is why it is underlined okay so assessment is a unique sense it is a unique number so in question in question it may not be saying that ssn is a unique number it is unique such statements will not be there sometimes it may be there if it is not there you have to understand that ssm or a such numbers like ssn serial number roll number etcetera such things are actually unique unique in uh when you're having unique unique uh in nature so such uh unique attributes must be represented using represented by an underline okay next name assistant uh assassin then employee name address uh address okay address is there then salary or salary salary is there i just left it out okay then gender okay then date of birth age okay now let us see about this one date of birth and age okay so age is actually what it is a derived attribute okay in question it is not saying so but we must understand that this is a derived attribute okay we have already seen the example because this age can be retrieved from this derived attribute data birth if you are knowing the database we can very well calculate the each okay ah so that is over next department so what are the what all the attributes uh required in the department department uh let us see each department has a unique name okay unique name unique number and several locations unique name unique number which is given as unique okay so unique means it is a unique means it must be a primary key okay so these using these attributes we can uniquely identify a particular attribute vertical a particular record okay so unique name and unique number are primary key okay so department number so this is department number which is unique since it is unique or it is a primary key we'll be underlining it okay then unique name only the name name is also unique so it is also a primary key so we'll be underlining it okay then it is written as several locations not a single location several locations so this location attribute need to store several details locate several different locations okay because my department will be placed in different different locations so all those locations must be specified here so since it is a ah given us a several location it is it is a multi-valued attribute okay since it is a given a several location this location will be represented as a multi-valued attribute that is why i have given it as a double ellipse okay clear the department controls okay next project what about project what are the attributes of the project uh project uh project must have a unique name project has a unique name unique number okay project must be having a unique name and unique number so this must unique name and unique number both are unique so this unique uh p for project number is unique so it is this underline project name is also unique so this must be also underlined okay then project location uh project location which is having only single location so it is a single value not multi-value okay so i have just given a single ellipse okay next so all those uh attributes uh relation i mean all those uh uh entity i have identified and one more entities there which is dependent see here a dependencies also that that will be that we will create here okay next we create the uh correlation let us see this read the statement uh employee store employee is a center birthday agent an employee is assigned to one department that is a relationship between employee and department you're saying that an employee is assigned to one department an employee is assigned to one department okay so an employee is assigned to one department okay so what is the cardinality here an employee is assigned to one department a department can have one employee no many employees a department can have many employees okay so here the cardinality ratio is many to one okay so here you have to create the relationship as well as this cardinality also you have to mention the cardinality also okay so in the question it is already given that employee is assigned to one department an employee is assigned to one department employee can be a part of only a single department okay okay the the reverse relation is not given that we have to understand a department can have multiple employees okay so the cardinality is many to one okay so the relation first relationship is over next one is what uh employee an employee is assigned to one department and but may work on several projects but may work on that is an employee can work on several projects that is the next relationship okay an employee can work on several project that is our next relationship an employee can work on several projects okay an employee can work on several projects but it is not necessarily controlled by same department okay so an employee can work on several projects an employee can work on several projects so what is the cardinality here an employee the question is given an employee one employee can work with several project okay in reverse order a project can be a project can be given to a single employee or multiple employees that is both are correct okay so here i am giving multiple employee project will be given to uh multiple employees okay project can be assigned to multiple employees in it companies and all a project or a work or a software development project will not be given to a single employee it will be given to multiple employees okay so a project can be assigned to multiple employees so here the cardinality ratio is many too many okay so the cardinality ratio is many to me clear so similarly you have to read all these statements line by line and have to clear the clear all those things we clear the relationship cardinality and so on but work around several projects and the same department a particular employee another thing a particular employee manages a department okay so here employee here a particular employee a single a particular employee will be a manager okay and that employee can manage this department okay that many a single employee will be managing this department okay there's the this man is managing is the next relationship that we are going to create see an employee manages a particular department okay so here the cardinality what will be the cardinality ratio and employee can manage only a single department correct and employ a single employee can manage only a single department okay in reverse way what is that what will be the currency a department a single department can manage to buy only a single employee okay a single department can be managed only by a single department because each department will be having only a single manager each department will not be having many managers or head of the departments each department will be having only a single manager or head of the department so here the cardinality ratio is one to one clear next day a particular employee manages the report that is over each department has unique name unique number and several locations that we have already filled it out each department is having a unique name unique number and several location that we have already filled it the department controls the number of projects department controls the number of projects each of which has a unique name unique number and single location so a department next is department project relationship a department controls project okay department controls many projects that is the next relationship okay a department see a department control many projects okay okay so a department control number of projects each of which has a unique name week number and a single location okay so a department controls many projects so uh what is the cardinality ratio a department a single department can control many projects okay but a project single project can be a part of only a single department so here the cardinality ratio is one to many so one too many is the cardinality ratio clear then the department controls the number of project each of which has a unique name number the department controls number of project which is a unique name number and single location that we have already filled okay then a new thing we want to keep the track of dependent of each employee for the insurance purpose okay so we have to create a new entity called dependent okay that is our next step task will be creating a new new entity called dependent why we are creating the dependent for the employees insurance purpose okay so for the insurance purpose we require the dependence name uh data birth and so on okay for that we are creating a new entity called dependent so we are going to create a new entity called dependent okay so we have created a new uh entity called dependent and the dependence should contain what all things first name sex birth date relationship okay here it is not visible which is relationship so the dependent uh entity must contain first name sex birth date and relationship okay so i have mentioned this attributes first name sex birth date relationship okay so from this uh thing uh here is there any uh unique attribute see first name it is not unique name is not considered as a unique attribute sex is not considered as a unique attribute birthday cannot be a unique attribute relationship cannot be unique attribute so this entity type does not have a unique key or does not have a primary key so such type of entity is called weak entity so this dependency is actually a weak entity so this will not be mentioned in the question we have to identify it okay we will not be given another question so this dependent is a unique this is dependent is a weak energy that that concept we have to understand okay so this dependent is a weak energy satisfy we have given a double rectangle to represent this entity okay so dependent is a weak entity why because does not does not have any primary key clear now this dependent is related with why this uh it is weak entity because it does not have any uh primary key so it has to depend depend with the another entity the another entity is employed so it is going to create a relationship with the okay ah let us see so this is the relationship okay we keep track of dependent first name we want to keep track of the dependent of each employee so employee and dependent is having a relationship called dependent of employees the dependent of this one okay so here the relationship the relationship is actually what relationship is actually actually the relationship is so this relationship is called identifying relationship why because this relationship is actually connecting a weak entity and a strong entity so weak entity and strong entity is connected through a identifying relationship okay so since it is a weak ngt and it is an identifying relationship the car the total participation here is having total participation why it is having total participation so this double line signifies a total participation what is the total participation this because this uh entity cannot exist without the employee entity okay this cannot have any existence if the employee is not there so this is having total participation clear that is every entity in this dependent dependent entity type is actually depend on every entity in the entity in the employee ndg type okay so for example if there is dependent one dependent d1 d2 d3 and the employee e1 e2 e3 e4 this d1 will be uh d1 will be having relationship with e1 d2 will be having relationship with e2 d3 will be having relationship with the e3 that means that every entity in d dependent is having relationship with the employee so it is having total participation but in the reverse order it is not mandatory every employee it is not required to have a dependent so because e1 e2 e3 is having dependent e4 is not having any dependent okay so it is not mandatory to have every employee to have a dependency so this is a partial participation this is total participation so these concepts we have already discussed so this is the this is an example for an entity creation of a linear diagram okay this is a creation example for a creation of er diagram so in university the questions will be asked lies like this okay and we can see one more question example two this is a university question see in some questions uh the attributes will not be given or the properties of the entity will not be given in such case we don't have to write any attribute ah even if if they are asking to write the attribute we can write our own attribute okay our own choice of attribute we can right no issue so this is a such question here the attributes are not given only the entity and these relationships are given okay so let us see the questions in detail and write the er diagram step by step so the first one a company has the following scenario there are a set of salesperson okay so we are having a first attribute salesperson i am drawing the first sorry not attribute the entity type salesperson so you are having set of salesperson some of them manage other salesperson okay so this is our next statement is some of them manage other salesperson that is a salesperson in a sales person entity type the sum of the sales persons will manage other salespersons okay so the salesperson is having a recursive relationship that is the next step okay the sales person uh manages some salespersons okay for some salespersons can manage other salespersons okay so we can say that a a single salesperson can manage several other salespersons so that single salesperson will be a manager that is a meaning okay in the other way what will be the relationship will be like this many salesperson will be managed by a single salesperson or a manager so this is a recursive relationship so this type of relationship is called a recursive relationship okay so however a sales person cannot have more than one manager a sales person cannot have one more than one manager that is the meaning the salesperson cannot have this many salesperson cannot have more than one manager that is the mean so a salesperson many salespersons will be managed by a single salesperson or a manager clear that is the point here next upon a sales person can be an agent for many customers a sales person can be an agency for customer that is our next relationship a salesperson can be a agent for many customer okay a sales person can be an agent for many uh customer a sales person single sales person can be an agent for many customers so the conditionality ratio is one is to one to many okay one too many okay what will be in the reverse case the reverse case is also given it says a customer is managed by exactly one sales person a single customer will be managed by only a single salesperson so here the cardinality ratio is one too many okay so in both way uh the both way the relationship has been specified here okay both entity the both ways the relationship has been specified okay here the sales person can be an agent to many customers that is this way a sales person can be a manager can be agent for many customers a customer is managed exactly by own salesman because a single customer will be managed by a single salesperson okay next statement what is sales a customer can place any number of orders a customer can place any number of orders next relationship okay a customer can place any number of orders right a customer a single customer can place any number of orders okay now the reverse way an order can be placed exactly by one customer and see a single order can be placed exactly by a single customer so the cardinality ratio is one too many okay so either the relationship is uh is actually specified in detail here in both way it has been specified in the question itself okay a customer can place any number of orders that we have already completed and an order can be placed exactly by a single customer next one each order list one or more item each order list or normal item that is our next task next relationship each order each order listed or normal item okay so each order lists one or more item in reverse way what an item may be listed in many orders an item a single item may be listed in many orders so the cardinality ratio is many too many okay so it is specifically given in the question paper next one an item is assembled from different parts and the parts can be common for many item so this item the item is actually a product a item or a product is assembled from different parts okay so next entity is parts and our next relationship is assembled item is assembled from parts okay so a single item is assembled from different parts many parts okay a item is assembled from different parts okay in reverse way what is it and a part can be common for many items a part can be common for many items okay a single part can be common for many items so here the relationship is many to me okay next statement is given one or more employees assemble an item item i know more so this item will be assembled by one or more employees so next entity we are going to create this assembled and sorry employee and the relationship is assembled see so one or more employee an item will be assembled by or a product will be assembled by one or more employee clear so that is work is given the statement so an employee employee can assemble many items see both way it is right an item is assembled by many employees and an employee can assemble different items or multiple items so the relationship is many too many okay ah so this is over next is about a supplier can supply different parts in a certain quantity say supplier here we are going to create a new entity called a supplier so supplier can supply different parts supplier can supply different parts so supplier can supply different parts in certain quantity so next entity is supplier and the relationship is supply okay see supplier a supplier can supply many parts okay next a part can be supplied by different supplier a single part can be supplied by different supplier so this is the question so based on this question we can create the year diagram so it is here in this question they have not asked to write the ah attributes see we we see we didn't have we didn't write any attribute here okay so when we write so when we write these attributes uh this year diagram will be a full mess okay full of entities will become when we cover this when their entities will be a full mess so in certain questions they will not ask to write the attribute okay so so they just write to uh the the statements uh the entities and the relationship will be given okay in these type of questions also they will ask to write the we they will ask us to choose certain entities certain attributes of our own in that case we have to write our own attributes for example salesperson we can write sales by salesperson's id salesperson name location and so on for customer customer id customer needs salary so on etc order order id order number order name etc item item number item name etcetera okay essential attributes we have to assume and write in that case which is not given in the question paper the ah attributes we have to identify and write okay so this is an example for a yeah diagram okay so i have discussed two examples and i will give our own auto exercise to work it out okay only after ah working out will be clear with these concepts okay thank you