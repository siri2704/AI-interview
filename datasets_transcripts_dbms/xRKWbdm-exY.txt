after you add the relationship lines then we need to add the multiplicity on the end of each line so multiplicity identifies quantity how they're related in a numeric way and there are four multiplicities to consider and we can add multiplicities multiplicities with just a regular text box so double click anywhere and you get one there's 0.1 which represents 0 or 1. there's 1.1 which represents exactly one there's zero dot dot many which represents zero to many and there's one dot dot many which represents one to many so an actor is one of many in the actor list and how are they related an actor is related to only one actor list because there is only one and we would never have an actor that without having an activist to store them in so it would be this one dot dot many so I can just copy that and drag it up there and it goes on this line because it says how many actor lists is an actor associated with and then I want to go the other way and I want to say okay if I have an actor list how many actor objects is it related to well we can't have a list with zero actors uh so we it will be one but it could have many actors so we could have zero dot dot many I mean one dot dot many so an actor list has one-to-many actor in it and that's how we identify what they are so let's look at actor and movie info we know that an actor might be associated with more than one movie right they might be in bambian Shrek so we know it's going to be one of the many options and we have to decide is it one to many or zero to many so if we look at the movie info would we ever have an actor that's not in a movie so we know that happens in the real world that there are actors that are not in a movie but it would be that way in our system in our system would we create an actor profile an after object if they weren't in one of the movies in our system and I'm going to say no we would not so anytime we have an actor they would be actually there would be an at least one movie that's associated but they may be in more so this so the relationship between actor and movie would indicate that each actor has one is associated with one or more movie infos and what about the other way when we have a movie info object how many actor objects is it going to be related to well this also will be many we may lots of movies have multiple actors in them and now we just need to decide it would be zero to many or one to many and here is there a possibility of having a movie without an actor so would there be an animated film that didn't have actors that was completely produced electronically and didn't have any actors at all and let's go ahead and keep open that option so I'm going to say that every movie info is associated with zero or many zero or more actors and that's what you do you put on all the aggregation and Association lines you put a multiplicity on each end here in a generalization relationship there is no multiplicity required on either end so this relationship indicates that every time there is a DVD object it is a movie item object and so the relationship there doesn't need to be defined with Multiplicity