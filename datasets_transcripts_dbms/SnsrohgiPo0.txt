Hello friends welcome to DBMS class in this class we are going to discuss tuple relational calculus so if we talk about this exam 99.99% chances are there for questions to come from sequel or from relational algebra. but as they have mentioned in the syllabus on TRC so we will do a little discussion on this also so first of all if we talk tuple relational calculus is a non procedural query language so actually whose part it is it is a part of relational calculus in relational calculus two types of query comes two types of languages comes tuple relational calculus and domain relational calculus in this the tuple relational calculus its main focus is on tuples which is on our rows, now the domain relational calculus its main focus is on columns which we call attributes so here if we talk about tuple relational calculus it is a non procedural and non procedural I have already told you where we tell what to do but how to do we do not mention so here if someone ask you what is the difference between relational algebra and and tuples for the first differences tuple relational is non procedural and relational algebra is procedural, so here if you talk about tuple relational calculus here we use first order logic funda and here every query is written like this { T/ P (t) } now what is the meaning of t here  resulting tuple, means the final tuples you have the answer what will be the answer we represent in this way with t and what is PT it is predicate it is a rule or you can say range here we give conditions so you can say which ever tuples which ever tuple satisfies this PT that will come in final output so here that t will come that tuple will come which will satisfy this condition which will not satisfy that will obviously not come in final result so what this does basically in tuples relational calculus let's say if you have a table so what is there in table multiple couples so what it does first?  this small t I am talking about, what is this this is a variable, this variable starts from tuple 1 then tuple 2, tuple 3, tuple 4 what it does to all tuples examine, it examine all the tuples, and examine on what basis that condition  that predicate we give here in right side the condition we give in this range we will give in  all the conditions in that range corresponding to all the conditions whatever will be true the tuples which will satisfy will come in result and which do not will not come in result this is a basic funda of tuple relational calculus next now I  talk here about operations same as we use in relational algebra the same operations we can use here also but there the operations are different here if you talk about like or, and, not apart from that here we talk about we talk about atomic about atomic functions what is the meaning of atomic functions which on one tuple which works on one tuple one variable we use in it like let's say supply like supply table is given to you from that supply table all supply ideas are to be found out whose name  is Varun, so here it is what you are give giving a single condition in a single condition your final answer is coming but if you are giving more than one condition then it does not remain atomic it becomes composite formula a part from his if we talk this to quantifies we use this is their exist and this is for all, what is the meaning of their exist as we normally discuss in first order logic that what is the meaning of their exist, there exist some tuples and which tuple belong to this particular condition which satisfies this condition in whole table there is a row if we talk with a simple example in the table I have values 10 20 30 now let's say this is age this is age column now if you are asked tell if there any exist their exist any tuple t and you are asked where age is greater than 20 where age greater than 20 so what it will do it will examine all the tuples one by one and check whether there exist any tuples and check whose age is greater than 20 so yes here it exist, so you can say it's answer will come true, Now here in age if I make it 40 in place of 20, then what will come in that case? It will examine one by one and give the result in final false if we talk about for all what is the meaning of for all? It is clear from the name itself for all means it will check all the values, after checking all the values it will give the final answer, final answer will be made on what basis? For all the conditions it is not like that there exist means one will exist so in output true will come. For all means let say I give two values here I separately give two values 10, 20, and in other table I give value let say 30, 10, 50 clear, now if here question is asked here if you are asked question for all t where t, if we talk lets say in this table all the values should be greater than this table see that not all values are greater 20 is greater than 10 but if we talk about 10 it is not greater than all values so for all it checks all values it checks for all conditions then you get the final answer, Next  here we talk about an unsafe expression what unsafe means that I in this way I have a supplier table so from supplier table we write in this way supplier(s) so here what we made, made a variables supplier and what we write outside supplier.name and what we put here not function, not function means we have to find all the names who does not belong to the supplier this is called unsafe if you remove this note, you remove this note so what it is giving print the name of suppliers whoever suppliers are there print their names so it will print and give you but what is the meaning of putting not all the supplier names who are not in the supplier table so in this case what answer it will give  infinite, means it will stuck in infinite loop means this is unsafe expression which is not in relational algebra so therefore if we talk tuple relational calculus and relational algebra so are their power same yes their power are same in tuple relational calculus you have to take care of unsafe expressions means unsafe expressions should not be there. so you can say tuple relational calculus and relational algebra both have same expressive power means the query you can write it in relational algebra the same query you can write in tuple also and even in domain relational calculus but power of SQL is more than them, there we have added some more extra functions. Now we will discuss with an example the query which we have received before one with a supplier part catalogue. first of all write a query in SQL to display the s name of the supplier so how to write here what we have to find here in final to print the name of supplier, from which table? you have to print from the suppliers table,  so what you have to do, to supplier, what we said now? variable s inside the supplier, what this s is doing? it will check all the tuples of the supplier and from all those tuples in this way let's say there is a supplier table and in the table there are many tuples, what we put, we put a variable s in this way it will examine all the tuples one by one corresponding to that it will s.s name, what is the meaning of s.s name? The s variable will print all the s name in the final output. so in this way we write its query. similarly if you talk about what is the parts name whose colour is red? here we have to find out from parts, so I make a variable p for parts, which will work on the parts of every tuples but there we have given a condition so putting and p.colour, what I do with p.colour = red write in this way p.colour = red and what you will put outside from p what you have to show in output? in final you have to show the output parts name so in this way you print the parts name, so in this way your simple query will be ready. if you talk about the third query write a query in SQL to display Sid of suppliers whose name is Varun and address is Chandigarh? so see here it will be same first of all see which table will be used? table used here will be supplier, which table will be used here supplier now what you applied on supplier on that supply you put as variable which will examine all the tuples one by one now what condition you give along with? that what s will check s will check that s.name means this as variable will check attribute on the table name should be Varun and s . address what should be the address? address should be Chandigarh so in this way it will check and in final what it will print it will print SIDS so in this way your simple query will be solved. next we will talk about write a query in SQL to display the Sid of suppliers who supplied some parts? so again from where we have to find the answer from catalogue table so what you have to do in catalogue we made a variable c in the catalogue in catalogue  made a variable c which will examine all the tuples one by one and there you don't have to give any condition what you have to print simply you have to print Sid. so in this way you will print Sid, and your Sid will be printed next 5th question write a query in SQL to display the s name of suppliers who supplied some parts? so here two tables are required suppliers is required and catalogue is required so how we will write here so from where we will get the final answer final answer you will obviously get from the supplier table so this we call free variable what is free variable? because most of the chances is for theory questions in case if it comes, altho SQL and relational algebra are more important than this but in case if any small point is asked so if you talk about gate exams until now no direct question has come on this so in case you get any question if you understand you can do it otherwise you can solve any simple level question over it and  even you will have some idea that how we write queries or if you are given a query then how you can find output. so on supplier I put a variable s and along with now see here there is requirement of two tables 1 is catalogue and other is supplier so on catalogue we have to put condition now what we are applying here there exist why we are applying their exist what is the meaning of applying their exist that supplier and catalogue it will take from two tables and then check is there any existing who's existence? that s.sid = c.Sid means their supplier and catalogue Sid are equal, is there any row which is existing? if any row exist then corresponding to that it will print s.suppliers name this is called their exist what their exist will do one supplier ID like  supplier table here it is S1 S2 S3 and in catalogue let's say there is S1 S2, so what it will do? it will pick one s1 and will check is there any existence of is there any existence of in whole table is there any existence similarity S1 is there any existence yes similarity S2 is there any existence yes there is similarly S3 is there any existence no so this will become false s1 s2 become true so corresponding to that what do you want, suppliers name to suppliers name will be printed so this we call as free variable, the s is free variable and the c here is bounded why we are calling it bounded so with the variable we put their exist or for all that is called bounded and with which we don't put anything we do not put their exist or for all that we call free variable last query, the last query is being asked here right a query in SQL to display s name of supplier who supplied red colour parts see here 3 tables are required but do you know from where final answer will come final answer will come from supplier from where the answer comes write it first on supplier report a variable s along with that report is their any existence there exist some row in the catalogue on catalogue we put variable c their exist some catalogue and their exist some parts means on parts you put variable p and what you put on catalogue c variable and what condition you put on final that s.sid = c.Sid and p.Cid p.pid =c.pid means part id in the catalogue part id inside the part and part. color = red, red colour part we will give this way we have to write, but this portion is a little different here what we did? same thing let's say in supplier there are S1 S2 S3, and in catalogue let's say there are S1 S2, and in parts there are P1 P2 P3 let say S1 sold to P1 and S2 sold to P2 so what we did? from supplier what we have to print finally? supplier's name but what condition we put? we have given a s variable to supplier catalogue we put c variable and we put p variable on parts now what we did? we checked supplier alongwith catalogue that is there any existence of variable see where S1 = S1 means S1 and S1 matches here it is matching s2 is also matching S3 is not matching now to its corresponding we put one more that P1 = P1, and p2=p2 where pid are also matching? yes pid are also matching, so from here it is clear that your parts are sold by a supplier and what is the colour of that part red and  corresponding to that supplier name with will be printed, so again if it is asked which is the free variable s is your free variable and c and p are your bounded variable these are the main queries, these types of queries you can be asked, and I will not recommend you to go more deep but again this query language is very much vast if you want to do then you can do but more than this is not required for this exam, thank you