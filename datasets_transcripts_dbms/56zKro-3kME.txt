hi this is my eighth lecture in this will be studying entity attributes and its types when we talk about a database management system when we talk about dbms software or dbms we have er diagrams along with this so what is er diagrams entity relationship diagram whenever we talk about a database a entity relationship diagram plays an important role in this so that we'll be studying in this lecture so before we draw this er diagrams er diagrams we need to understand what is an entity what is a relationship what is attributes and all so in this class we'll be studying what is entity attributes and its types so first we'll see entity what is an entity the basic object that the er model represent is an entity entity is a basic object which has a independent existence you can also call it as entity has its own existence independent existence entry doesn't depend on the other object and entity may be an object with a physical existence or it may be an object with the conceptual existence what they're telling is entity may have a physical existence or a conceptual existence physical existence means a particular person care house and employee all these are come under a physical existence and conceptual existence which doesn't have a existence like a company a job or a university course these all comes under the concept of existence i hope you are clear with the definition entity is a real world object we can say which has a independent existence it can be a physical existence or a conceptual existence example for entity is person card house or a company job university course etc are as an example of entity here they have taken one example each entity has attributes here in this diagram are an example they have taken both entity and an attribute see here the particular properties that describe it entity has its own attribute for example uh for a person how do you describe a person by his attributes by his properties like he has eyes nose and hairs etc like this each entity has its own attributes for example they have taken employee ndd employee entity may be described by the employee's name age address salary and job you have to have taken employee each employee one employee has the attribute name address age phone number these are the attributes of employee entity and see here c1 they have taken as a company company has its own attribute company name headquarters where it resided and who is the president of that company these are the attributes of this company then what is this john smith two three one one these are the value of an attribute whenever we are inserting the value in a table we have employee table clear employee is an entity it has name and address next we have age of an employee and one more we have home phone like this we store the data right so these are the agreements now value we need to store right john smith two three one one age is 55 and phone number is 731 something so this is how we store the data i hope you all understood what is an entity what is an attribute and these are the value of an attribute next we have attribute attribute the definition is attribute is a particular property that describe the entity what is attribute attribute is a property which will describe an entity whatever whichever entity we are uh considering in our database every entity has its own attribute right so attribute is a property which will describe the entity is called as attribute the attribute value that describes each entity become a major part of data stored in the database see attribute plays an again important role in a database without attribute you cannot store you cannot store so you cannot describe only your entity entity may describe name age salary job etc in this slide only we have seen what is n in attribute right so we have different categories in it first one is simple or atomic attribute composite attribute single valued attribute multivalued attribute stored by attribute and derived attribute see this is an important concept we need to understand for your er diagram entity relationship diagram to draw this diagram you need to understand this concept very clearly so the first one is simple or atomic attribute this entity has a single atomic value for the attribute atomic attribute is an attribute that is not divisible is called as atomic for example simple or atomic value or attribute is attribute which cannot be divided further means it has a simple attribute for example here student is an entity register number first name and gender here first name they have not considered as the simple or atomic because this first name can have a single person can have multiple names right he's original name his pet names etc register number here we are considering this as a primary key this i'll explain in the future classes but as of now you understand simple or atomic attribute attribute should not be divided or divisible for example gender gender is an atomic value means a single value which cannot be divisible gender we cannot divide right so example is gender next we have composite attribute the attribute may be composed of several components means it is an exact opposite of your sim simple or atomic attribute atomic which cannot be divisible composite is divisible a single attribute we have an attribute that we are dividing further the composite attribute can be divided into smaller sub parts which represent the basic attribute for example they have pick an address see here address is on one attribute right address can be further divided into smaller parts street address city state jim card and not against street address they have divided into street number strip name or apartment number like this an attribute which can be divided into multiple parts is called as composite attributes next we have single valued versus multivalued attributes single value is the same like simple or atomic activity has a single value is called as single value you can take example as gender only gender has a single value rate next we have multi-valued attributes what is multivalue which has multiple values for that attribute don't get confused between the compose composite and multi-valued attribute my team value is which has multiple values in it composite is we are dividing a single attribute see here multi-value of color of a car color can be anything right it can be red blue black white etc but address we are dividing into multiple parts that is composite i hope it is clear what is multivalued and composite so these two are different from each other and how we are denoting the multi valued attribute by the flower brackets stored versus derived attribute for a particular person entity the value of an age can be determined from the current date or the value of the person's birth to date hence the age is called as derived attribute and the date of birth is called as store attributes here we have two entries stored and derived attribute again we have the attribute age and date of birth right by the date of birth attribute you can easily calculate the age right if you get to know the date of birth of a person you can easily identify the age of that person so here is a derived attribute where we are deriving this value from the date of that attribute so age is derived and date of birth is stored attribute clear next we have null values in some cases a particular entity may not have an applicable value for an attribute we have employee we have some attribute names and that particular employee doesn't have for example phone number that employee doesn't have a phone number so we keep it blank right it is called as null value or we can take employee has its own house right he doesn't have apartment when you when do you have apartment number whenever you are staying in a apartment building then only you will get an apartment number for example this even employee is not staying in apartment so he doesn't have apartment number only we will take one more example apartment number so we keep this blank because this even employee doesn't have an apartment number so another values are the one which doesn't has the value in it is called as null value complex attribute we can represent the arbitrary nesting by grouping the components of composite attributes between the parentheses and the multivalued attributes with the flower brackets see what is complex attribute complex attribute is a mixture of it's a mixture of both composite attribute and multivalued attribute and composite we are representing in uh parenthesis and this multivalued we are representing in brackets flower brackets here they have given the example i hope you all understood what is an entity what is an attribute and its type if you like this video please like share and subscribe thank you