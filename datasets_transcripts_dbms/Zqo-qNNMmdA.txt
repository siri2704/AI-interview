[Music] hello everyone welcome back we know very well that databases are used for creating and managing the databases where these databases are the repository for storing the data so why we need databases because we need to store the data as well as retrive the data effectively at the same time the database management system simply dbms must serve as an inter face between the end user and the dbms software let's assume I want to book a train ticket and all the train related information are stored in the database suppose if we are accessing a screen for seeing what all the trains that are available so there is an interface to see all the train related information from where the train related information are displayed on the screen actually the screen what we are seeing is just the front end but the data that are stored are in the back end which we call as the dat databases whenever we need some data from the databases we need dbms this acts as an interface by fetching the data from the database and providing the relevant information on the screen coming to the train ticket reservation let's say I have reserved a ticket once the train ticket is reserved the data are actually stored in the databases now whenever I want to see the information about the tickets that I have booked I simply Supply the PNR information the passenger name record information now this PNR information is required so that our data is referred using PNR information and we are able to retrive the desired information on the screen so any organization when they want to store and effectively retrive the data they need dbms now what language they prefer one of the widely used languages is the SQL the structured query language let's see the theoretical parts now SQL stands for the structured query language why do we need this language we know very well rdpm is the relational database management system where we are going to store and retrive the data or store and manage the data effectively we cannot simply go and store the information in the file system because handling file system is a tedious job we know we can store and retrive the data in files also but coming to the structur data storing and retriving for the structured data in a file system is really a tedious job and that's why we want some other system than file system for doing this operation and fortunately we have the best solution the database management system and if we are storing the data in the database management system the storing of data as well as the managing of data are effective and what kind of data we are going to store in the rdbms we are going to store the structured data what kind of data structure We are following here a table data structure say we want to store the data we are going to create a table where our information are referred using rows and columns so it's clear that SQL is useful in handling the structured data and actually this SQL is based on relational algebra and tle relational calculus we have already seen about what is relational algebra and tle relational calculus this SQL is actually built upon the ANC standard we have varieties of softwares that uses SQL say for example the rdbms softwares like the Microsoft SQL Server informix Oracle MySQL cbase supports SQL and the best thing about this SQL is the queries are using English like statements if we are proficient in English then writing an SQL query or a command is not a big deal because the query itself is like English like statements say for example suppose I want to delete a table if you see this is the actual query delete table table name let's assume there is a table with the name employee and if I don't want the table to be existing in our memory in that case I can simply give this query delete table table name that is delete table employee so that the dbms software accepts this query and deletes the table with the name employee this is exactly like an English statement delete table employee and this is one of the most fascinating features about SQL we have seen the basics of SQL we will see see more about SQL writing an SQL query is not a case sensitive one so you can use the uppercase and lower case combinations in order to write an SQL query at the same time the statements of SQL are dependent on the text lines we will understand about this point when we see some example queries we know in computer system there is not only one solution for a problem there are multiple Solutions likewise when we are giving an SQL query it's not only one way to solve the problem there may exist a multiple number of ways and the dbms software picks and chooses the best way to execute the query I mean to say suppose if we are giving a query and the dbms software constructs a plan for executing this query and there may be multiple plans and the system has to choose the best plan to execute the query how the best plan is chosen various factors are involved like the cost cost is one of the factors for finding the best way to execute the query like I said when a query is given to dbms there are multiple ways to execute that query and the system is going to choose the best way to execute the query now what all the components that are involved here SQL engine optimization engine query engine query dispatchers these are all the components that are mainly used by the DPMS in order to execute the query anyway I'm not going into the architecture part but my intention is to provide some insights about SQL so from this we have understood that dbms is going to accept queries and gives the response let's see how it actually works let's assume there is a user and there is the dbms software let's say this user wants to get some information from this database so what he's going to give he's going to give an SQL command or query this dbms accepts this query and there are multiple ways to execute that query and the best way to execute the query is chosen and finally the result is then given to the user and these results are generally tables this is how SQL Works let's now see what are all the various types of SQL or various sublanguages of SQL the first one is ddl the data definition language the second one is DML data manipulation language third one is DCL data control language and the last one is TCL the transaction control language don't worry about this now in the coming lectures we are going to see elaborately about ddl DML DCL and TCL before we conclude let's see how a table looks like the structure of the table is generally referred as the schema and here is an example schema this is a table which contains four columns or attributes ID number which is the first column or first attribute name is the second attribute Department name is the third attribute and salary is the fourth attribute so talking about this table this table is comprising of four columns or four four attributes now this column is using number data type this column is using character data type this column is also using character type and this column is using number type so talking about a schema it is mainly dealing with the columns the number of columns the data type of each column and what about the data part here these information are the data the id1 is pertaining to John Abraham who is working for quality assurance Department with this much salary this is an interrelated data and as I already told you this is using a table data structure where the data are stored in the tables by referring the rows and columns in this presentation we have seen about the basics of SQL we have seen the various sublanguages of SQL the ddl DML DCL and TCL and we also have seen what is a schema that is the structure of the table I'll see you in the next presentation and thank you for watching [Applause] [Music]