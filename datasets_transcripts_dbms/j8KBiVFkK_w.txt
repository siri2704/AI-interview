in the previous video we talked about the first two steps of the uh conversion from er model to relational model okay and in this video we are going to be talking about the third step of the seven step procedure okay our seven step algorithm of converting er model to relational mode right so the third step is about mapping off one is to one relationship type or i should say mapping of binary one is to one relationship types okay why binary because we are talking about binary relationship types what is binary relationship types binary relationship types are the one in which there are two participating entities okay for example this particular relationship type works for right so how many entity types are participating in it two and three types one is employee and one is department so this is a binary relationship type okay so a binary relationship type is the one that has a degree of two right and what is the degree the number of participating nte types right so the third step talks about mapping of binary ones to one relationship types that is if we have a binary relationship type of one is to one uh cardinality ratio then how do we map it to relational model right so this is a relationship type of cardinality ratio n is to one right so in this step we are going to be talking about one is to one relationship type that is a relationship type like this what is this relationship type manages and this is a one is to one relationship type as represented by this by this diagram or er model diagram okay so this relationship type manages the one is to one relationship type between these two entities employee and department right so how do we map binary one is to my relationship type firstly we need to identify the relationship relational model that correspond to the participating entity type right that is let us say if we have this relationship type managers right so which entity types are participating in it employee and department so the first step is identify the corresponding relations in the relational model right so how employee entity type was represented in relational model by this relation employee right and this department relation department engineering type the corresponding relation for this particular entity type is department relation right so these two relations are the ones uh which we will uh which we will deal with or which we have to use in order to ah convert this relationship type into relational model right so these are the two relations corresponding to these two participating entity types okay so we can do this mapping by three approaches okay there are three approaches in order to map one is to one relationship type or binary one is to one relationship type right so there are three approaches the first one is the foreign key approach okay where should i write okay so i don't think there is a need for this as of now okay so there are three approaches so the first approach is foreign key approach okay and the second approach is merged relation approach okay and the third approach is cross reference or relationship relation approach cross reference or relationship relation approach okay so when we deal with one is to one binary relationship type the most popular approach is the foreign key approach right so first we look at foreign key approach right what are these these three are approaches by which we can map binary one is to one relationship type into relational model right so in the foreign key approach what we do is we include as foreign key in one of the relations the primary key of another relation right so which relations the relations corresponding to the participating entity types right so which two relations are corresponding employee and department right so we will include in one of the relations of these the primary key of another relation that is either include for as foreign key in employee relation the primary key of department relation or include as foreign department relation the primary key of employee relation right so either i can uh include department number here let us say i rename is that it has d number okay so this is a foreign key in employee relation that refers to this particular relation right and what we have included we have include the primary key of this relation right or i can include the primary key of employee relation as the following key in the dependent relation what is the primary key of department relation employee sorry what is the primary key of employee relation ssl so i can include ssn here okay or i can even rename it and include it right so this is a foreign key that refers to this particular attribute of employee relation okay either ways can be done right so what does it represent if in case if we think about it in case if we include in the department relation the foreign key it means for every department couple we are recording the uh secure the uh sorry we are recording the social security number of the manager of this department right why because we are depicting the relationship type manage right managers is the relationship type which means that this particular department is managed by this particular employee that is or if this particular department is managed by an employee whose social security number is this and this right or if we include it on the employee side the primary key of this d number then for every employee it will include the department number that the employee is managing right so these are the two ways but what we do generally is we include foreign key on the side that has total participation in the relationship type right so which uh entity type has a total participation in relationship type department entity type okay why because this is double line so double line means that this has total participation in the managers relationship type in case this has the total participation then what happens is in case this has total participation then it means that for every department there is a manager but not every employee is manager some department right this is logical right so for every department there is a manager but not every employee manages the department right so we include foreign key on the side that has total participation that is we include foreign key on the side that has total participation that is department number right that is in the department relation we are including the foreign key right so why is it happening let us say i am not including ssl and i rename it as mgr okay so now it represents uh the ssn better that is it is it represents the ssn of the manager right so why we are doing this and not this because since not every employee is a manager what happens in case i include the number here in case i include d number of the department that if this particular employee is managing here what happens let us say there are 100 employees and only 10 of them are managers and 90 others are not managers right so for every employee tuple for 90 employee tuples the value of d number will be null why because these employees are not managing any department so d number will be null for these 90 employees only for 10 employees that d number will have some value right that represents the department number that a particular employee is managing right so for 90 tuples we have to include null values right so in order to avoid it what we do we included on the department relation in case there are only 10 departments then for every department we are including mgrs and that is social security number of the employee that manages this particular department right so in that case we can avoid null values okay so that is the reason why we are including foreign key on the side that has total participation okay it is not necessary but it is how it should be followed like it is a better way to do it okay so include foreign key on the side that has total participation in the relationship type right and also in case this has any simple attribute the relationship type has any simple attribute so this manager's relationship type has a has an attribute start date that is the date on which employees started managing a particular department right so this is a simple attribute so include that too on the side on which you have included the foreign key so we have included foreign key here so we will include this attribute also here let us rename it as mgr start date that is the date on which the manager started managing this particular department right so that is how we converted this one is to one relationship type into a relational model by this foreign key approach right what we did we included the foreign key of one relation as the primary key of another relation right and we can do it either ways in case of one is to one relationship type in any of the relations we can include the foreign key but we do it on the side but it is better to do it on the side that has total participation in the relationship type in order to avoid null values right so now let us talk about the second approach that is modulation approach how can we map binary one is to one relationship type into relational model using this particular approach called as merge relation approach okay so in merge relation approach what happens is both the entity types and relationship type are represented in just a single relation okay so this approach is not very popular when it comes to the mapping okay but it can be useful when there are when there is total participation from both the sides then this approach can be popular that is we can represent both the entity types as well as the relationship type in the single relation right so that is about the merge relation approach okay and this cross reference or relationship relation approach this we will be going to uh look in detail when we are talking about mapping of binary m s to n relationship time okay in that we will discuss about it and also we will see how to map one is to one relationship type as well by using this particular approach okay so for now just remember that by for mapping of binary one is to one relationship type we have to the most popular approach is the foreign key approach right now let us move on to mapping of uh okay so these relations are called as like employee relation is called as uh entity relation okay so this is called as entity relation because they are created by mapping of entities into relational model right so these are called as entity relation also every tuple in this particular relation uh represents an entity instance so these are called as entity relations okay now let us move on to my mapping of binary one is to end relationship types okay binary one is to end the relationship okay this is the step number four okay so this is the uh this is the relation as a result this is the these are the two relations as the as a result of these three steps that we did okay three steps of mapping so mapping of binary one is to end relationship type so which relationship type is n is to one this employee works for a department right so this is an n is to one relationship type so what we need to do for n is to one relationship type for every n is to one relationship type again we have to first identify the relation that corresponds to the entity type at the n side okay so here we have to identify the relation that corresponds to the participating anti-type at the inside which means whichever entity type is on the n side that is which one is the only inside here it is inside this is one side right is it visible this is one side okay so this is n side this is one side so whichever entity type is on the inside like this here employee relation is on the n side identify the corresponding relation in the relational model right so which is the corresponding relation employee relation right so on this side we will include the foreign key in case of n is to one relationship type right in case of one is to one relationship type we had the flexibility we could include foreign key on any of the other side even it was better to include it on the side that has total participation we had the liberty to include it on any side but in case of ns21 relationship type we have to include the foreign key on the relation that corresponds to the n side of the relationship type okay so we have to include foreign key on the employee relation right so we include foreign key so which is the foreign key include as foreign key the primary key of the relation corresponding to the other participating in t type that is c these are the two participating nda types so what we do include we always include as follow the primary key of other relation right so we include as foreign key in the employee relation why because it is on the inside of the uh relationship type right on uh include as foreign key here what we include the primary key of this relation okay the corresponding relation to this particular participating anterior type so department in e types part is uh corresponding relation is department so include the primary key of this d number department number here so what it represents it represents the employer department number for which is employee is working for right this is a works for relationship so it represents the department number for which employee is working right so include as foreign key in in the n side the primary key of the other participating npa type right that is this one again we created this in the previous also right but there it was for managed by leaving example and here it is for so what we did for n is to one relationship type simple first identify the n side okay so n side is employee so on the employee we have to include foreign key so what will you include as following the primary key of other relation or the other participating indeed what is that the participating entity type department so its primary key is number so you include number as foreign key here so we have just renamed it as d number right so why we are doing this why we are including on n side and y not on one side okay so it is because every entity here is related to at most one entity there okay you can also infer this relationship type as employee works for at most one department department has at most n employees okay department has at most n employees an employee works for at most one department right so in case i include on department side right in case i include on the department side the primary key of here that is the primary key of this side that is for every department if i include the ssn of the employees that it is having okay so in that case it will become a multi-valued attribute why because the department has n employees at most working for it right so a company has many employees a department has many employees working for it so in case i decide to record uh social security number of employee on department side what will happen every department has many employees so we will have to include a multi-valued attribute here for every department we have to record all the social social security number of all the employees that are working for a particular department so it will become a multi-valued attribute but in case we are including on the employee side every since every employee is working for at most one department there will be at most one value here that is it will be a simple attribute right so in order for this to not uh be to avoid dealing with multivalued attributes what we have done is we have included foreign key on the n side right so that is how a mapping of binary one is to end relationship type is done again using foreign key approach right so the most common approach for one is to end all one is to one relationship type is foreign key approach right so that is how we did it again if there are any simple attributes also include that two on the side on which you have included the foreign key so there are no simple attributes for the works for relationship type in case there were we would include on the side on which we have included foreign side employee side so employee here only we would include the um attribute that was present on the relationship type right so that is about mapping of binary one is to n relationship type right so now let us move on to mapping of ms2 and relationship okay mapping of binary m is to end relationship okay so let me erase it and here only i'll create so this is the relationship type m m okay um about spoon okay so this is the ms2n relationship type that we are trying to map into relational mode right so this is another entity type project which has attributes name number and location okay in case i had included it earlier only we would have dealt with it it in first step that is mapping of regulations this is a regulatory type we would have mapped it there how we would have just uh created a new relation this is not required so we would have just created another relation project in the first step only project that has name let us say p name let us say we are renamed e name p number and p location okay and since it has two key attributes we can take any one of it and make it as primary key let us say we make project number as primary key right so now let us talk about mapping of binary m is to n relationship type okay so for binary m is to n relationship type what we do is for every m is two relationship type we create a new relation okay so this is new for m is 2 in relationship type we have to create a new relation okay and the name of this new relation will be name of this new relation will be the name of the relationship type right that is works on okay so we create a new relation and now what we do is we create a we have created a new relation now in this new relation as attributes what we include the primary key of the participating entity types or the primary key of the relations corresponding to the participating in types right so which are the participating in types employee and project and what are the corresponding relations employee and project so include its primary key of both the relations as one key here okay so include essn let us say i have renamed this and we i have also renamed this as p number okay so these two are referencing here okay because these are foreign keys so these foreign keys are referencing to these two relations employees and project relations right so these two are referencing here okay so that is how we created a new relation that is for every we are including um since every employee can work on many projects and a project can have many employees so it is not possible to include it as a single foreign key approach for this right so what we do is we create a new relation right and on new relation we have included the primary key that is we can uh just include that employee one is working on project one zero one employee one is working on project one zero two and project one zero two is again worked upon by employee number three or something like this right so this is how the relationship works one is represented in relational model right so also in case so the primary key for this particular relation will be the combination of these two okay so the primary key will be essn comma p number the composite attribute okay so why because every employee can work on many projects and the project can be worked upon by many employees so none of these two if we consider if we only try to make essence as the primary key it would fail because there are many employees that are working on because an employee is working on many projects similarly in case you want to make p number as the key it will fail because the project is worked upon by many employees right so the combination of this will be unique right so one and one zero one right sorry one and one zero one it's not one and one zero one the combination will become the primary key for this new relation that is the relationship relation so this approach is called that the third approach that we discussed here cross reference or relationship relation approach this is called a relationship relation because we have converted the relationship type into relation and here every uh tuple in this particular relation represents a relationship okay so every instance or every tuple in this particular relation represents a relationship instance so this is why it is called as a relationship relation right so which which relation it is works on relation right so or now let us talk about how to represent n is 2 1 as mine one is to one relationship uh types also uh how can we convert or how can we represent n is to one relationship type and one is to one relationship type using this approach or cross reference approach right so in case we want to represent one is to one relationship type using this approach also okay so we have um in case there are any simple attributes on this particular relationship type okay so i just forgot to add it so in case they are all there any attributes any simple attributes attached to this particular relationship type works on then include that two on this relationship relation that is let us say here rs is an attribute okay so ours is an attribute that records the number of hours the employee is working on a particular project right so this is a this is an attribute that is attached to the relationship type so include that to on this relationship relation okay so include ours also as an attribute here right so with this we are done with mapping of m is to end relationship type using uh cross reference or a relationship relation approach right so it is not possible uh to represent it using a single uh to include as a single foreign key in any one of the relations it is not possible for ms2n relationship type because every entity here is related to at most n entities here and every entity here is related to at most m entities there so it is not possible right so now let us talk about how to map n is to one relationship type also and one is to one relationship type also using this approach okay so for this approach what we will do is there's a lot going on here okay so what we don't need this right as of now so when we are mapping this relationship type what we will do let us talk about first one is to one relationship type we will create a new relation manages and again we will include the primary key of both the relations corresponding to the participating entity types right so which are the participating end times employee and department so employee and departments primary key will be included here ssn and number or let us say uh mgr manager ssn and uh number department number okay so we can include now this will reference to here and this will reference here i know this is very clumsy but try to understand it okay so this is referencing mgr ssn referencing here and d number is referencing here right so this is how relationship relation is created and in case there is any attribute included here only start date okay and also the primary key for this relation can be any of mgr ssn and d number why because mgr because this is a one is to one relationship type right so in one is to one relationship type there will be just one instance of every mgr or mgr ssn and one instance of department number right let us say one department 10 is managed by manager number three 21 let us say mgrs and 321 then 321 mgr assistant won't be managing any other department because an employee can manage at most one department right and also department can be managed by at most one uh employee right so there will not be any other instance of d number as well here right so d number can be uh primary key and mgrs and can be primary any one of them can be the primary key for this new relation right as long as there are no null values here why because if there are null value then there will be violation of entity integrity constraints right so any one of these can become the primary key of this relationship relation in case of one is to one relationship type right now let us talk about mapping of binary and is to one relationship type right so in case the same thing in case of binary mapping of this relationship type we will include the super key of the relations corresponding to the participating type so which are the relations participating in this employee and department so employee and departments primary key will be included here so let us say essn okay and number department number and works for okay so and this will be the foreign key right so these will be included as foreign key here that will reference the primary key right so essn will refer here d number will refer here right and in case there is all also any attribute then that will be included here as well okay and now again another thing the primary key for this relation the primary key for this relationship relation in case of n is to one relationship type will be the primary key of the relation corresponding to the inside participating entity right which is on the inside employee entity so employee entities relations primary key that is essent will become the primary key for this why because an employee works for at most one department right but a department can have many employees so in case i like department number 10 it can appear more than once here right because many employee 101 2 0 3 4 2 1 many employees can work for a department right but any employees can work for department right but an employee 101 will not work for more than one department it will work for at most one department it cannot be a situation like this right so the primary key will be the prior the primary key for this relationship relation will be the primary key of the relation corresponding to the n side of the relationship type right so these are the main points that you keep in mind you need to keep in mind in order to map a binary ns to one relationship type and one is to one relationship type into relational model uh by cross reference or relationship relation approach right so in this video we talked about all the okay so we talked about all the five steps of this algorithm first we had already discussed in this video we talked about numbing of one is to one relationship type m is to a relationship type and n is to one relationship type right so the only two steps are left we which we will cover in the upcoming videos and that's it for this video in case you like it then please don't forget to press the like button subscribe to my channel for more such videos and press the notification bell so that you get notified every time i put up a new video i'll see you in my next one bye you