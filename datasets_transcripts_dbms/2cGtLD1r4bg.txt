[Music] foreign types of tbms now let's say you don't know about devians okay and I have given you list of all students of scalar so how will you store it how will you store the list of all the students of scalar okay some might say let's store it in Excel sheets some say let's store it in Google Sheets some say let's store it in files so these are some of the methods to store data now can these are also considered as dbms can I say these are also dbms actually yes in fact the original way people used to store data in computer system was files okay so the very first type of dbms is files as a database that is files based tvfs okay now let's take an example of scalar code base so scalar wants to store information about what type of data information about student dense information about mentors information about instructors information about assignments p is okay now scalar say okay for each and everything for each and everything I create a new file okay so the files are students.txt to store information about students then mentors.txt instructors.txt and assignments.txt likewise so scalers say okay there are multiple lines in the file okay and each line represent the information about one student One Mentor one instructor so now let's create a student file let's say this is students.txt file okay this is students.txt file now so the first line represents information about First Student the first student let's say is one name is something enrolled in some year and all the information let's say second student enrolled in 2019 and all the information let's say third student enrolled in some year and this is all the information no of course there is an instructor's file there is a mentors file in different different files now can you see a problem here if I store data if scalar wants to store the data in the form of files create a different file for each and every text students.txt instructors.txt mentors.txt can you see a problem here if I'm storing information and files what's a different problem that arises actually there are several problems so some of the cons of storing data in file based system are the very first is searching let's say I want to search Ram if Ram is present in scalar so for searching Ram I have to go to Whole file first one then Rohit then 2019 then all the information then second the Mohit and all the information then so even if I don't need the information about row rate about movies and all these students then also I'll have to go to all the files the complete file because the thing is in files the data is read in sequential manner in sequential manner like byte by bites okay so the first byte then second third till it matches the value you want to search so the searching the travels the iteration becomes very slow becomes inefficient so searching is not efficient and it's very slow because in files data is read in sequential manner one by one okay second problem is redundancy green and NC means duplication let's say I have a file students and I have another file instructors now uh there is a student one let's say name Rohit and it's role uh its phone number is 9376 okay now Rohit is also an instructor so name is royet9376 now Rohit wants to change wants to update his phone number so he updates his phone number one two three four now somehow he forgets to update an instructor's file so what happens can you see another problem arises here the first one is the first one is you are storing one information at different places so that is duplication is there second thing is it leads to another problem that is inconsistence inconsistency means data is not consistent is there is any way you know that which phone number of Rocket is correct if you want to dial if you want to call Rohit if there is any way you can know if okay 9376 is the correct phone number or one two three six is the correct or latest phone number no so it creates inconsistency in my data okay so the first problem is redundancy and redundancy creates another problem that is inconsistent the data is not consistent throughout my file okay third is security if someone gets the access of a file so it can read your whole data of course there are passwords out there but passwords is in the file if you get the password of the file you will get the whole data you now you will get the access of the complete file so third issue is security there is no such security concerns in the file now fourth fourth one is on current access if let's say there are two users who wants to read data from a file let's say this is my file okay this is user one user one wants to read data okay so how file work is whenever you try to read the data and try to open the data there is a pointer a pointer to reading position so there is a point that is given to you at the point you are reading and the one thing to note here there is only one pointer for one file so one pointer for one five now user one is reading the data now let's say in somewhere in between user 2 appears and he user 2 also wants to read the data what happens is he able to read the data no because there is only one pointer which is used by user one at that time so user 2 has to wait till user one completes reading the file then user to open the file takes the pointer and then reads the data so concurrent X's is not two people cannot able to access the same file at the same time okay now so you can see there are different cons of using file based systems so they are of course not the most efficient most used uh database in the real world so there is more sophisticated more complicated and more featureful database management system out there in uh that is dedicated tbms it's more featureful than compared to file based systems and it's actually used in the real world nowadays okay so what are the different features of this dedicated dbms apart from all the pawns which we discussed there are some additional features which are provided by dedicated dbms okay what are the very first and important point is background background what if you lose data you can able to regain it because there are backups at every certain interval of time weekly monthly daily okay so even if you lose data you can able to regen that data okay so the very first and important feature is backup then the second important feature is concurs so dedicating dbms allowed multiple users to access the same data the same dbms at the same time how it's possible we'll look into that after some time okay then the third is C Ure what happened in file there in files data is stored as it is in the disk but in dedicated dbms nowadays data is first encrypted then it is stored okay so security it's provide encryption First Data is encrypted in density okay in file based dbms in files data is stored as it is okay then the fourth is very important is efficient efficient access efficient access and Storage so dbms makes it possible actually the smooth and easy access easy way so you can store and you can access your data okay so by using dedicated dbms it becomes very easy very smooth for you to store to manage to manipulate your database okay because it's actually stored in an organized in a structured manner right so the fifth one is integrity nowadays dbms allows you to avoid inconsistencies there are certain Integrity rules out there which helps to avoid data inconsistencies we look into Data Integrity dbms integrities all the constraints in our further videos okay till now integrity means there are certain Integrity there are certain rules which helps to avoid inconsistencies okay now to sixth one is views in previous uh also we discussed that views means to have different views for different end users let's say you have a table in there this table you have information about four students and uh the TA team in scalar code base the TA team is there ta team wants to access the data once you access those student wants to see those students who have not paid the fees yet so let's say there are two students so what you can do instead of giving the whole data to the TA team you can actually create View you can actually create View and give that two students data to the t80 okay so views of course it helps to get security instead of giving the whole data you can create views and you can just give the required information to the person and access control now one problem arises it Access Control now ta team has the complete access of this View now there are information there are information about students there right let's say they are one student named one row head the phone number of the student so ta team can actually manipulate and change your data because we have given excess control so ta team can actually change your data so there is another feature that is role based Access Control that is some that is called our back role-based Access Control means you can actually give Protections in that like uh you can only give right protection right protection or you can only give read protection okay so you are giving this data this data to the tat but you are giving it with read protection so the t18 can only be able to read the data if not able to make changes in the data so these are some of the features some of the additional features that dedicated dbms provide so they are actually used nowadays okay in Real Worlds nowadays dedicated dbms are used okay so some of the features are quickly revised backup so whenever if you lose the data you can again able to regain that confidence very useful multiple users to access the same data at the same time security encryption and all 10 efficient access and storage because data is stored in an organized in a structured manner so it's easier for us to access the data to store the data Integrity Integrity constraints helps to avoid inconsistencies in the data then use we'll actually see how views are created this is the example but we'll actually create views in our own tables okay so just wait for that till now basically views means to give the certain uncertain security access to the person like let's say you are giving there are four students you only want the person the other person certain thing to view only certain part of your data okay so you have created views on that and another thing is there is role-based access control that helps to give additional security right protection read protection okay