hello everyone and welcome back continuing with the previous video introduction to dbms let us see in this video the characteristics of dbms as i mentioned in the previous video before dbms we were using the file system approach in traditional file systems data was stored in files now for example if i have one user say the accounts department who keeps track of the student fees and their dues this user just needs the student role number student name the fees paid by the students as well as any dues and if i have another user say the exam department who keeps track of the grades received by the students that is it can have student role number student name course and the grades received by that student in a particular course here both the users are interested in data about students but they have to maintain different files because both have different interests the accounts department is only interested in the fee details whereas the exam department is only interested to know about the grades received by the student in each course so since both have different interests they cannot have a common file and hence have to maintain different files as we can see here the student details as the student role number and the student name is being repeated in both the files this leads to redundancy or duplication of data as well as wastage of storage space whereas in the dbms approach the entire data is stored in a single repository and multiple users can access the data based on their interests like for example data like student role number student name the fees paid fees due the grades they have received etc can be stored in the single repository and any number of users can access this repository and view whatever data they want hence there is no duplication of data so that is why we prefer dbms over the traditional file system approach hope you all have understood the difference between the file system approach and the dbms approach now we are going to discuss the main characteristics of dbms approach the first one is self-describing nature of a database system the second characteristic is insulation between programs and data and data abstraction the third characteristic of dbms approach is support of multiple views of the data and the last characteristic that we are going to discuss would be sharing of data and multi-user transaction processing let us look into each of these in detail the first one self-describing nature of a database system a database system not only consists of a database but it also contains the metadata we have already seen what a metadata is in the previous video so it is nothing but the database definition or a complete description of the database information like the data type and the constraints etc all these information is what we call as metadata and this information is stored in the dbms catalog and this catalog is used by the dbms software as well as it is used by the database users who wants to know what the structure of the database is let us just see an example of a catalog so that you understand better in the previous video we have taken this very simple example of a university database that stores student and course information so based on this very simple example let us see an example of a catalog so here we'll see an example of a database catalog where relations or table name along with the number of columns are mentioned in our example of university database we have three tables or three relations the first table that we have is the student table with four columns then we have the course table with three columns and then finally the grade report table with three columns and also in our catalog we can have another table which defines the columns present in each table or in each relation their data type and to which table or to which relation that column belongs to based on our example of university database the column student name has the data type character of size 30 and it belongs to the relation or belongs to student table similarly the column roll number is of integer data type and belongs to student relation or student table so this is an example of a database catalog where information about the database or a description of the database is stored now going back to the characteristic that we were discussing now the next point is dbms software must work equally well with any number of database applications we can have any number of database applications like for example a university database a library database or a banking database as long as the database definition or the metadata is stored in the catalog dbms software has to work efficiently or equally well with any number of database applications whereas in the traditional file processing data definition or what we call as metadata in dbms is part of the application programs itself so they work with only one specific database application because the structure is declared in the program itself unlike dbms they cannot work with more than one database application so we have seen the very first characteristic of dbms approach now moving on the next characteristic of dbms approach is insulation between programs and data and data abstraction in traditional file processing the structure of data files is embedded in the application programs itself that is the structure is within the program it is not separate so if there is any change to the structure of data files it is going to affect the programs we also need to change the application program whereas in the database approach the structure of data files is stored in the dbms catalog and it is separate from the access programs since the structure is stored separately from the programs so if there is any change brought to the structure of the data files it does not affect the programs and that is called as program data independence we have already seen an example of university database so in that database we had a student table or a student record so let us see an internal storage format for that student record here we have the data item name or the column name in that record or in that table the starting position and the length in characters in traditional file systems this structure is present within the programs itself now say if i want to add another piece of data say the date of birth since the structure is changed this program will not work and the program has to be changed whereas in the database approach if you want to add a new piece of data say the date of birth we can add it without affecting the programs since the structure is separate from the programs we don't have to change the programs we just have to add this new information in the catalog so next time a dbms program refers to the catalog the new structure will be referred and used so that is called as a program data independence now the characteristic that allows program data independence is called data abstraction dbms provides users with conceptual representation of data that is it hides the behind the scene details or the complicated details that are not of interest to the database user a data model is a type of data abstraction that provides conceptual representation to the database users in a way that most users can understand and the data model hides the storage and implementation details from the users so this is what is insulation between programs and data or what we call as program data independence and the characteristic that allows the program data independence is called as data abstraction the next characteristic of dbms is support of multiple views of the data a database has many users and each of those users will have different needs or they may require a different view or a different perspective of a database like for example one user will be only interested to know the grades received by the students while another user will be interested to only know the courses taken by each student so dbms will provide only that necessary data that is required for each user a view which is a subset of database that is it is derived from a main database table it contains virtual data or data that is not physically stored or that is not explicitly stored so that is support of multiple views of the data where dbms will provide as many views as required by each database user the next characteristic of dbms is sharing of data and multi-user transaction processing as the name suggests a multi-user dbms allows multiple users to access the database at the same time now for multiple users to access the database at the same time dbms has to provide or it must include concurrency control now what is concurrency control concurrency control is nothing but when multiple users are sharing the same database at the same time it should prevent two users from editing the same data at the same time like for example we have travel agents or reservation agents and if one of the agents is booking a bus ticket for a particular passenger and if he is assigning a seat for that passenger then that particular seat should get blocked and no other agents should be able to access or book that seat for any other passenger and that is what we call as concurrency control these kind of applications that require concurrency control are called as oltp or online transaction processing and it is a major part of database application dpms must enforce or must ensure several transaction properties and here transaction means program under execution so the two different transaction properties are isolation and atomicity now what is isolation like we already discussed in the previous example if one agent assigns a seat to a particular passenger then that seat is blocked or it is isolated from other agents so that is one of the transaction properties that dbms must enforce the next property is atomicity where dbms should ensure that the transaction is executed completely or none at all now when an agent is assigned a seat for a passenger and if the transaction is stuck midway or if it is incomplete then that seat has to be released for other agents to access so either the transaction should be executed completely or none at all so this is sharing of data and multi-user transaction processing with this we come to the end of this video hope you all have understood the main characteristics of dbms approach thank you you