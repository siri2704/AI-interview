Hello friends, Welcome to Gate Smashers The topic is indexing Indexing from GATE and UGC  point of view or from point of view other competitive exams is very much important but it is mostly important in interviews Whenever company is coming to take interview and they ask question from Database So indexing and indexing hashing topic are very favourite topic But here how indexing works and what it is and what's is use are later topics We from basic architecture I'm starting this topic from very basic that why the indexing is actually used? and before that We'll talk about architecture and on which scenario we're talking In this video I'll firstly clear the scenario that what is scenario in actual Where does indexing exist So we'll start the video here I've in architecture, general architecture in our laptop and computer and in our devices That we've CPU CPU which is a processor, we call it processor which has to process Query comes to CPU ad we talk in term of Database So in Database we call query, means a question is coming that select star from the table this find the name of the student whose age is this Find the detail of student whose roll number is this Like this way there are many different queries So those queries are handle and processed by CPU Now if a query is coming A simple query select * from student table where Roll number is equal to 1, I've written a basic query select * from the student where Roll no is 1 Mean from student table find out the detail of Roll number 1 means its name, mother name , father name, age, gender, marks anything whatever in database its line and record take out the whole record Now this query is execute by CPU Is data of the student table is with CPU? No,data is saved in memory and there are many types of memory but in general architecture we consider to use 2 memories first one is RAM and second is secondary memory RAM volatile means RAM directly work with CPU because CPU speed is generally in MIPS ( Million instruction per second ) and Hard disk is very slow as compare to CPU Because CPU speed and Hard disk speed is not compatible with each other So the data is in hard disk,why ? because we want to store data permanently We don't to temporary store data If whole student table is on RAM If you shut down the system Table is lost data is lost so where to keep the data we always save the data permanent in hard disk so data is here CPU is here so when CPU will execute this query So will CPU interact with hard disk No it will not because CPU speed is in MIPS and hard disk speed is very slow this is million instruction per second and that is 10-10 instruction per second and if we see generally its speed is we generally count in milliseconds and CPU speed is works in nanosecond or picoseconds so its speed is not compatible with each other so the data that we've here In this way Like Roll number 1, father name and something Age gender male In this way we've lot of data and records and how generally we keep the records, first you see that hard disk In hard disk whatever memory we're using we divide hard disk in blocks Logical blocks Not in physical blocks In you laptop also C drive, D drive, E drive F drive are made, these all are logical drives So you can manage data but at back end Storage manager whole operating system whole hard drive in fixed size blocks divide and then insert the data Records in this way will get insert Now here you've to understand that data is here and CPU is here CPU don't interact directly CPU will tell RAM that I need data RAM will call the data from secondary memory from secondary memory Here blocks and you can say pages also made In operating system term we instead of blocks called it pages That we've divided secondary memory in pages We are considering general architecture so you can call it block or page Block means a fixed size box or boxes, and collection of boxes is called Hard Disk and in that blocks there is records If we see a general example If I've 10,000 numbers of record 10,000 numbers of record Means in a student table there is record of 10,000 entries Data of 10,000 students and if size of 1 block I've means 1 block can store 100 records if it is given 10,000 blocks are there and every block has size of 100 record means 1 block can store 100 records so how many blocks are required Number of blocks required How you'll calculate 10,000 divide by 100 so this is 100 means you need 100 blocks Means you need 100 blocks to store all this data and here we've CPU, RAM and hard disk Now see how it works If CPU found student detail from student table found roll number 1 Now data can be inserted in 2 ways sorted or unsorted, it can ordered or unordered So how to call data if I think that data is non ordered non ordered means there is no order Like roll number 1 10, 20, 100 200 300 5,6 in such way data is there So when we call this data, how it works Firstly one block Whole block Comes to a RAM means this whole block will go to RAM there will be searching if you got the answer then it is good and if don't then it is a miss means hit or miss and we'll send that block back and then call for another block and return and again for 3rd block and return then 4 rd block and return like this way blocks are called in RAM searched, if you get that it is hit and if don't then miss and returned back so here indexing is used We're not reducing this searching time means time taken by 1 block time taken to search in a block indexing don't reduce it In actual indexing tha number of blocks you're calling We call it input and output  I/O cost obviously I/O cost you're transferring the data Transferring data from hard disk to RAM Now obviously there will be some cost of transfer There we've propagation and transmission time you're calling data we call this I/O cost So more number of blocks you call I/o cost will be more I/o cost will be more So time will keep on increasing so what we've to bring in actual we've to bring such method that I've call lesser number of blocks this is the main motive I'll give example of a book I've a DBMS books lets say Navathe if there is 1000 pages in that book and you've to search a topic let's say you've to search indexing how you'll do if there is not index there You'll scroll single page and search so how many pages you've to serach in worst case may you've to search all 1000 pages and in best case may be you get data on first page only means on a average you can say 500, because if I consider average case you've to check 500 pages but if you use index if you use index Your number of pages you are shuffling will get reduce because index is only of 5-6 pages fisrt you see topic in Index from that topic you can go to that page and from that page you can search data directly so in this video I only want to tell you this and what indexing do in actual Indexing number of blocks we are calling it reduce them So I/o cost is reduced I/o cost is reduced by indexing this is the advantage of of indexing, so how it works and what it is that we'll see in further video Here I've only told you about basic introduction of indexing thank you