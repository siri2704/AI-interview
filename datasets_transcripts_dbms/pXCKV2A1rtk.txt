welcome again in this video we are going to map this ER model that means the ER diagram that we created in the last video to relational model that means tables table schema to be more precise we we are converting the diagram into table schemas so let's look into uh again this is something you don't have to do in your project report uh this is not mandatory but if you want to make it better you can do it like this otherwise you can just write down your final tables like this okay so I have extracted this part of the ER diagram here so that it is easy to understand for you so regarding department and program this is one to many relationship so department is simple this part here is getting converted to this department ID name and hod this is very simple and for program again for program from here to here is simple nothing uh nothing serious here and here in this part we have added Department ID so that we know this program belongs to which department and I have mentioned FK here FK means foreign key this means forign key and this is one two many relationship so I have added one for in key here like this okay this is simple so next step is checking for lecturer so this is lectur entity and its attributes uh obviously you have to add all these but there is also a relationship between lecturer and department and that is many to many relationship because a lecturer uh could be working on more than one departments and obviously one Department have multiple leers so this is a many to many relationship in menu to manyu relationship you have to create a separate table so here is the lecture table this uh looks like two tables but this is one single table due to lack of space I have just continued it to the next line here so this is a single table for lecturer and this is for lecturer and Department which lecturer belongs to or which lecturer teaches in which department and both are foreign Keys here and these together are forming a composite primary key or composite key here and also this is multivalued attribute here contact number uh because of that because of that I have not included contact number here in this table because this violates the first normal form as we know so for contact number I have created created another table lecturer ID and contact number just like we do in the normalization process and now comes a student one of the core entity and this has many to sorry one uh many to one relationship from uh student to program so many to this should be okay this should many to one relationship between student and program and we we'll have to use program ID as a foreign key instrument table so this is done here normal student table okay this shouldn't be here this is my mistake uh instent ID the primary key and program ID the for in key from program entity and again for contact number we are adding a separate table like this just like for the lecture and for subject subject has relationship with program and lecturer so we'll have to create uh multiple tables accordingly so first will be subject subject uh all the attributes related to subject and which lecturer teaches which subject lecturer subject both foreign keys and then we have which subject is related to which program okay program has many subjects and that subject could be taught in many programs so this is also many to many relationship both of these are many to many relationships that's why we have created two Separate Tables here uh so I hope you understand it uh this is this part here the final schemas it just copy of the schemas above um without this uh description and ER diagram so these are the copies of these are the final schemas so I hope you understand uh till now and in the next video we'll be doing um the most exciting part that is using SQL we'll be using MySQL to create all these tables thank you for watching