good evening everyone this is rishali in previous session we discuss about part 1 that is serial and non-serial schedule in part 2 we discuss about serializability and conflict serializability with examples I have mentioned complete database management system playlist Link in below description box now in this session we will discuss about the next type that is view serializability with examples so let's start the session in this channel you will get a complete pointwise easy explanation practical demo and question Bank of following subjects please like and share these videos with your friends and subscribe the channel so you will get a notification regarding new part of this video now the first thing is types of schedules in DPMS mainly there are two types of schedule serial and non-serial that we discussed in part one next non-serial schedule can be divided into the two parts serializable and non-serializable serializable schedule can be divided into the two parts conflict and not view serializable so we discussed serializable and conflict serializable in part two right in this session we will discuss view serializable so for learning view serializable purpose you must know serial schedule non-serial schedule and conflict serializable schedule then only you can solve the examples of view serializable so I will suggest that first you should watch these videos then you can move to view serializable schedule clear next now first thing is why exactly view serializability see uh these things we already discussed in previous part we saw some examples of conflict serializable and where this kind of Precedence graph have generated right so this precedence graph created no any Loops or cycle that's why it is called as conflict serializable schedule and which is is in consistent state but there are some problems in Conflict serializable which create a Loops or Cycles in this way so this kind of problem has solved by view serializability right see there are serial schedule and non-serial schedule perform the transaction one after another that's why which is in consistent state or consistent database but non-serial schedule perform all the transactions parallely that's why which is not in consistent State that's why you need to convert non-serial schedule into the serial format by using config flick and view serializability but there are some problems that will be not solved by conflict serializability right when there are Loops or cycle present this kind of problem so this problem have solved by a view serializability clear next now what exactly views serialized ability see all the conflicts religable schedule is said to be view serializable schedule because which is all is in inconsistent state but all view serializable schedule which is might or might not be conflict serializable so for this purpose there are total three condition in view serializability let's see the first condition see here now let's take first example here with condition C this is a schedule one and this is a schedule two there is a T1 and T2 T1 and T2 transaction so the first condition of view serializability is initial readers should be similar for entire data items see here in schedule 1 T1 first read the data and in schedule 2 also T1 read the data so this is a first condition means suppose to even start the read operation so in schedule 2 also T1 start the read operation on the same data item okay data item is a b in this way this is the first condition second condition is Right rate sequence is there see here everywhere read write this kind of conflict and non-conflict pairs have there this is the second condition and third condition is final writers on volt data items should be same see here now in this third example in schedule 1 final write a done by T3 and in schedule 2 final write a is done by T3 right so this is called as view equivalent schedule so this is a view equivalent schedule and this is also a view equivalent schedule but now focus on this second example here P1 first write perform the operation on a then T to write a and then T3 write a read a in schedule so in schedule 1 T3 read the data which is written by T2 right but in schedule 2 T3 read the data which is written by write a by the T1 right so this is not a equivalent schedule only these two are the equivalent schedule right so what was the condition first initially read the same data item in same transaction second condition is read write operations and third condition is final write operations performed by the same transaction so these three conditions you need to apply on The View serializability example so let's solve the example now see here this is the view serializability example now just focused on see here this is a given schedule s which is non-conflict serializable schedule which is not in consistent State because while drawing precedence graph it create a cycle right so you need to convert this particular schedule into the schedule as Dash means you need to create same view of that schedule but is in the view format okay how I will tell you first just understand the problem statement your problem statement is you need to create this precedence graph in this format which there is a no cycle or no Loop is there that's why it is is in the consistent state right so how see here first there is a T1 T2 t33 transaction so in s Dash also 3 transaction T1 T2 and T3 clear this is the first thing second thing as per the condition T1 read operation have performed first so in s Dash also T1 first read operations have performed this is the first condition second condition is all the operations have performed on read write mode and same data items see here read write is there and same data item a so in s Dash also same read write operation and all the operations have performed on same data item a now the third condition is a T3 in schedule as T3 at the end write the date operation have performed so similarly in s Dash they also write operation performed by the T3 clear so these three conditions you need to apply first while creating this view as Dash schedule right for creating this purpose now remaining is this between two operations having their right a right a so on that between operation you need to perform swap operation is there how see here this right a operation goes to downward Direction and this right a operation goes to Upward Direction perform the swapping see here in this way here is the right a and here is the right a right means these two are the same schedules just view having different clear now perform the operation see suppose a is equal to 100 this is a given value so what was the problem statement the final result will be same at the end of the operation in both the schedule so see here a is equal to 100 is given so first T1 read a a is equal to 100 after that T2 write a operation have performed means they update the value right means update the value that is a is equal to a minus 40 so 100 minus 40 60. now a is equal to 60 now T1 again perform right a operation a is equal to a minus 40 so they take this thing same value that is 60 60 minus 40 20. now T3 perform write a operation they take this value as a 20 20 minus 20 equal to 0 so it generate a final result 0. now same operation same thing have performed on this s Dash schedule see here first read of a equal to 100 they read same data item after that write of a is equal to a minus 40 so same operation is there a minus 40 so 100 minus 40 equal to 60. now same here right of a is equal to a minus 40. so same right of a a is equal to a minus 40 and 60 minus 40 is equal to twenty and at the end a is equal to a minus 20 this right operation have performed by T3 and 20 minus 20 equal to 0 now see here there is also final result 0 and there is also a final result 0 so this is called as view equivalent schedule means S and S Dash is equal right means for uh for viewing purpose they are different but for performing operation purpose they are equal right now second condition now you need to identify whether it is view serializable schedule or not okay when they perform a equal operation which is called as view equivalent now you need to identify view serializable schedule or not miss which is is in consistent state or not see here now for that purpose just draw the Precedence graph see first read of a which is the conflict pair of read of a right of a so right of a present in T2 write of a present in T3 so draw the h t 1 to T2 and T1 to T3 means read of a to write of a and read of a to write of a in T3 clear now next is right of a which was the conflict pair of right of a right of a conflict pair is right of a right so right of a present in T2 and right of a present in T3 so same T1 to T2 and T1 to T3 same line is there now in T2 that is right of a which was the conflict pair of right of a that is right of a so right of a present in T3 right to T2 to T3 so draw the line in between this now see here there is any Loop or cycle is present in this way no so this is called as view serializable schedule means your database is in inconsistent state in this way you can convert this non-serial schedule into the serial schedule format see here there is a parallel transaction have performed that is non-serial schedule but here transactions have performed serially first even after that T2 after that T3 means this is is in consistent state or accurate information has stored clear this is called as view equivalent schedule so let's try to solve this examples this example is important in your University exam as well as get exam thanks keep learning