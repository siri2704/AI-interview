[Music] this video is on eer model before you press forward with the E model explanation if you haven't seen the ER model explanation go ahead and check that video out in my description below ER is the building block for the eer model eer or enhanced entity relationship model is an extension of the ER model and simply adds three new data modeling Concepts which are specialization categorization and aggregation so specialization is simply breaking down entity types into its sub classes for example artist entity type can be broken down into musician entity type and painter entity type and this process can be considered is a breakdown since painter and musician is an artist but the opposite doesn't really apply since not all artist is a singer or a painter let's look at the diagram as shown first we have vehicle entity type it has the attribute types color type and an engine and you could see that is it is broken down into three different entity types scooter car and truck those three entity types will inherit the attribute types of the super class the bottom three is considered subclasses because scooter car and truck belong to a vehicle entity type attribute types that are specific to subclasses can be attached to the entity type but if there's a tribute type that all shares then it can go to the Super class entity type since subass will inherit it the reverse process of specialization is called generalization so going from singer to an artist entity type simply think of specialization as topown approach and generalization as a downup approach this is shown in the eer model with the circle and curved line pointing towards the subclasses from the super class the specialization can be further qualified by disjointness and completeness constraints where disjointness specifies what subclasses an entity of the super class can belong to while completeness constraint indicates whether all entities of the super class should belong to one of the subclasses or not once again the entity at the very top is the super class anything that falls under it will be subass now let's get into disjointness disjointness can be either disjoint or overlap and it is marked inside the circle as either D or o and it is what defin subclasses the super class can belong to this joint means the superclass entity can be member of at most one of the super class this joint means the superclass entity can be a member of at most one of the subclasses and no more while overlap means it can be multiple for example if artist super class entity type can only be either singer or an actor it is disjoint while if it can be both it is considered overlap now let's talk about the completeness constraint which goes under the super class as either t or P total and partial partial allows entity to only belong to the the super class and doesn't have to belong to any of the subass and total means every entity in the super class must be a member of some subass that's shown in the model for example total will state that artist must be either singer or an actor entity type if those two are the only subass entity types that is shown in the model if it says partial and there's same two entity types it is saying that it doesn't need to be either the singer or an actor and can belong to just super class artist entity type as there may be other entity type that hasn't been written out yet like the painter entity type this will give you four combinations to utilize this joint and total this joint and partial overlap and total and overlap and partial all right let's take a look at this diagram one more time we have the vehicle super class at the top and at the bottom we have three sub classes entity types scooter car and truck so we have P for partial now this is a completeness constraint it's going to either be t or P partial allows entity to only belong to the super class and to none of the subclasses vehicle can belong to scooter car or truck but it doesn't need to this is why there's p on there if it was t for total specialization every entity in the super class must be member of some subass so any entities within vehicle has to be scooter car or truck then we have the circle that has the D this is the disjointness constraint it could be either D or o once again disjoint Point means entity can be a member of at most one of the subclasses overlap or o means it could be multiple so the entity in a vehicle can belong to either scooter car or a truck if it was overlap which should be it means it could be multiple entities of the sub classes so vehicle can technically be a car and a truck so instead of putting D this should have been an O Let's talk about the second concept that's added in eer which is categorization all categorization is repres presented in this circle with U for Union categorization is basically subass with multiple super classes instead of super class having multiple subclasses like specialization categorization is the opposite that allows subclasses to belong to multiple super classes once again subass will inherit the attributes and relationships of super class that it belongs to categorization can be either partial or total where entities of super classes can either not belong to the sub class or all entities of the super classes can belong to the sub classes poral means not all entities belong to the subass while total means all super classes belong to the subass the curved line is denoted below the union Circle and faces towards the subass to denote this let's take a look at this example we have person entity superclass and Company entity superclass types below it we have the subass account holder account holder can belong to both the super class person and the company and you can see see it being denoted using the circle with the U lastly we have the aggregation concept where particular relationship types are combined into a higher entity type ER isn't able to represent relationship between entities and a relationship properly so at times aggregation is utilized to represent relationships at higher level entity sets for example an employee that works on a project is an entity that has been aggregated because they have their own relationship with Machinery not all employees needs relationship with the machinery