what's the difference between a SQL and no SQL database let's talk about it before diving into discussing SQL or no SQL let's first clarify what exactly is a database to really understand databases it's important to know the fundamental differences between data and databases data refers to individual pieces of information for example images videos text or any form of information and this information can be either processed or stored by a computer program database is the organized collection of information it's set up in a way that makes it easy to store find and manage data efficiently so the two main databases SQL and non-sql so what do those words stand for SQL stand for structured query language and the word query is a request for specific information from a database and though SQL this this stands for not only SQL but some call it non-sql this is saying nosql databases aren't just about using traditional way of SQL so for the first main difference data model a data model defines the structure and relationships of the data stored in the database so for SQL databases it uses a relational data model where data is organized into a structured tables with rows and columns what makes it relational is that you can connect or relate information from one table to another the data is consistent by enforcing rules here is what a SQL database looks like the data is organized into tables and in this example it uses a bookstore the data is divided into three different tables the first table contains information about the books including the book ID and title and the second table holds the author's information including their ID and name the Third table is for genres containing the genre ID and the genre name you can see the connections between the tables you can now see why they call it relational because the tables are related and I got this example from chat gbt but just quickly typing in how does a SQL relational table database looks like nosql databases use various data models such as key values documents or graphs they allow flexible data storage and do not follow the strict rules of organizing data into tables making them non-relational here's a variation of a graph and nosql database I know it might seem a bit overwhelming at first glance but in this graph there's arrows pointing in multiple directions towards employees and departments indicating who reports to whom and which department employees belong to as you can see it's not as structured as a SQL database with fixed tables instead it sour data in a flexible format making it nonrelational but this offers a straightforward Solution that's really fast second difference is scalability This Means A System's ability to handle increasing amounts of data users or tasks without slowing down or crashing for SQL databases it's traditionally designed for vertical scalability meaning you can increase the capacity of a single server by adding more resources or storage however the there's a limit to how much you can improve the performance of a single server through vertical scaling let's take a look at this image here in vertical scaling a single server upgrades up by adding Hardware like adding more memory to handle more task and data but it can hit a point where you can't upgrade the server anymore and it might struggle to handle a lot of work leading to slow downs or crashes for no SQL databases is designed for horizontal scill ability this can handle lots of data and users by adding more servers which spreads out the workload across multiple machines this makes them great for big applications that need to handle a ton of traffic here's an image of how no SQL database scale horizontally you can see how it has multiple servers and this is to keep the system fast and flexible as it grows and has no limits like vertical scaling how however needing more servers can increase the cost and coordinating the data between them can be tricky and lead to network problems and consistency and transactions in databases consistency ensures the data is always correct while transactions ensure that changes to the data happen rapidly and completely for SQL databases they use something called asset transactions which basically means they make sure changes to the data are done carefully asset stands for automacy consistency isolation and durability these transactions ensure that when you change something it's either all done properly or not done at all so you can trust the data no SQL databases focus on being fast and being able to handle a lot of data even if it means they might not always keep everything instantly consistent instead they aim for eventual consistency which means eventually all all the data would be the same across the system but there might be a small delay before that happens now that you know three main differences between SQL and non-sql we'll use the example of an app so for SQL databases let's take a to-do list app for an example in this app you can create tasks set due dates and Mark task as completed these tasks are stored neatly in a structured way within the apps database making it easy to find and manage them when whenever you need an example for no SQL databases imagine a social media app like Instagram in this app you have users who post photos write comments and like posts now instead of neatly organizing all this information into a spread table like traditional databases a nosql database might sort everything together in a more flexible way kind of like a big digital filing cabinet I hope those examples give you a better understanding of the different between a SQL database and a nosql database thanks for watching the video don't forget to like comment and subscribe to my channel see you next time