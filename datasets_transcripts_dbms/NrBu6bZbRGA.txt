can handle concurrent access it can handle your uh data duplicacy means it it can help us to reduce the redundancy so a database management system is a complete package it is a software in which we create the databases so databases database means it is a collection of related data which has some implicit properties and database management system again it is a software which facilitate us to design create okay databases so the overall idea is that we are collecting the data and the sole purpose to collect the data because we want to use this data in the future or we want to present a view of that data to our users okay so when we are dealing with the data means when we are dealing with the database management system it is not possible that each and every person is a technocrat who is dealing with it for example if you go to uh your banking institution for just just depositing some amount of color clinical stuff where he's sitting there this is this is the amount one leg i want to deposit in my account so uh that person is not a techno great person okay that person is uh you can say that he is a naive person so he does not know what is the complexity behind that system he knows only user interface there i will insert some uh account number the name of the account holder and other uh identification information like that and the amount and i will click on the submit button and it will be updated in the database okay so it means whenever we work with the database that is it is it is you can say that it is implicit that uh your system should hide certain details of how and the data are stored and maintained okay and the second important why we are saying that hiding the certain details of how the data are stored in the maintain because we have a different categories of the users okay even we have the different categories of the users so one of those we can uh term him as a database administrator who is who has the central control over on the database so he is authorized to perform some modifications in the databases but every user is not allowed every user is not allowed to perform that even when we are talking about the external users who are interacting with the databases we can define the rules we can say okay you can view only this part of the database you even you can't edit in that you can allow some users to insert the data in the databases so we need to hide the details at some levels okay that they are this is the data abstraction this is the data extraction so when we talk about the view of the data in the database so we say that okay there are two important concepts one is the data abstraction and second one is the instance and schema so data abstraction means hiding the level of implementation now i'm a missionary i think yeah this is the abstract way i'm just giving you uh i'm telling you this is the input and you will get the output but the inner detail how it is going to be converted or you are implemented implementing or you are getting output from the input this detail is written this is a black box simply okay how to interact by using the user interface but after inner part is a processing pattern you are not revealing that okay in which table it is going in which table you are storing the data was the name of that table how many golems are there so you are hiding such information from the end user okay so we say that okay this is a database uh data abstraction okay so uh now a term comes in the scenario that is a data model means when we are talking about the data abstraction so how we will achieve this abstraction how we will achieve this abstraction so the to achieve this abstraction there is a way that is a data model that is a data model so data model is basically a collection of concepts data model is a collection of concepts that can be used to describe the structure of the database that can be used to describe the structure of the database now this is very important point of structure current so what do we mean by this structure omnega structure of the database so what do we mean by this structure of the database structure of the database means we are talking about the data types we are talking about the relationship between the data we are talking about the constraints that are applied on the data okay so it collectively we are calling it as a structure collectively we are calling it as a structure so how will you describe the data types relationships and the constraints by using a model by using some set of rules by using a collection of concepts okay so by using a data model you will be achieved the abstraction concept is it clear so these models include basic operations for specifying retrieval and updates on the databases so we will go through we have the different types of the model er model relational model these two models are our prime focus in this syllabus and other than these models we have object oriented model we have object relational models even unstructured we uh we we have a model to store the unstructured data but for this label for this subject we are focusing on the er model and the relational model we will go through each and every one okay so data abstraction again it can be done at three levels the first one is the physical level this is the then the logical level and this is the view level okay so what do we mean by the physical logical and the view level try to understand a user is setting here let's suppose there are end users okay there are n users now you don't want to give the complete access for the database you want to show only the part of the database or you want to create a view of uh view of a certain part of the database so that they cannot interact with the whole database because we are restricting so what we can do here so some somewhat view is also providing the security here so what we are doing here we are just creating the views for the individual users okay i am saying that for example uh for example i'm saying that okay for user one day is view one for user two there is view to similarly for user and there are view and okay so user one can interact with only this view okay he can view the data of this portion only he won't be able to see the data portion of youtube to you and because we are not allowing to interact with these views so i think you have understand the view means what data you want to show to the user i'm just putting a reverse engineering when you will go through some textbooks you will start from the physical view then the logical view then the view level okay i'm just putting a reverse engineering to understand this concept that you are a user and you want to interact with the database it might it may possible that you are able to interact with only a portion of the database not all the whole database so that portion which i am creating for you that is a view that is a view of database so you are interacting with it so this view is solely what we are saying that what data we i want to show the data only what data is there okay so we are saying okay what data is there but how this data was stored what data was stored that is here you are talking about only display i can concrete it and here you are talking about the what data and how data is the story at the logical level but when you will move one more level down it means what still you are uh you are aware about uh you have the display of the data you know what data is there how the data was stored but you are not aware about the structure of the database basically the actual tables you are not working with the actual table you are not allowed to work with the tables you cannot model modify that means you cannot add a column you cannot drop a column you cannot uh create a new database you cannot drop a database because you are not at a physical level you are at only logical level you are working with the data you are not actually working with the database so there are three portions or there are three labels uh sorry above bottom to top okay i'm talking about the structure of the data it means i am talking about the i'm talking about the physical level i'm talking about the physical level so the lowest level abstraction describe how the data are actually stored the physical level describe complex level data structures in the details okay then coming to the logical level what data are stored in the database and what relationship exists among those data okay and the view level is what view level is the highest level of the extraction that describes only part of the entire database okay so it will simply fire your interaction with the system okay you can create number of the views for the same database why we are doing this because we know that many of the users of the database system do not need all variety of information stored in the large database they need to access only a part of the database so that is your view level so again coming to this point yes physical level means we are just talking about the structure of the database itself means how we are storing the data what tables are there how many columns are there okay you are dealing with the structure of the database itself but at the upper layer you are dealing with the data only you are not dealing with the structure of the database we are dealing with the data only is that what data is stored in the database what are the relationships between the database data and at the view level only a portion of the database is visible to you that is available to you for the interaction purpose so these are the three levels of the abstractions so jessica view level you are working at a view level it means you don't know what data is there what is the relationship between the data you don't know what are the tables are there how the data is being going to inserted in that but when you are at the logical level there is only one level of expression you know okay what views are there you know okay what type of the deed what data you are going to store okay and what is the relationship between the data but when you are at the physical level means at the lowest level of this abstraction it means you have complete detail of your database okay you know how many views you know what data you know what is the structure of the database so these are the three levels of the abstractions okay coming to the instances and the schema these are two important terms please please uh memorize instance if at a point of time i'm asking okay what is the data is in the database so that complete snapshot of that database is called as an instance at a particular instance of a type so for example i am asking right now so this is okay this is the instance of the database but if i'm asking after one hour instance may change because the point of the time has changed so the database change or time as information is inserted and deleted so the collection of information is stored in the database at a particular moment is called the instance of the database a particular type of database available simply now coming to the schema is schema mclaughlin the overall design of the database this is the technical schema if i'm saying that schema it means i'm talking about the overall design of the database is that clear okay so overall design of the database is called schema okay and this does not change frequently it changes infrequently our project database banara you have created some tables according to the requirement of your client you have designed everything okay there are very less chances means after a long time it may possible that your client is putting some new requirements there and you are changing the design of your database so it is infrequent so overall design of the database is called the database schema is a color but you have to clear three levels of instructions physical logical view physical methyl camera how the data is stored means you are talking about the structure logical matlab what data is stored and what is the relationship between that and you comma club yoga you are only giving or you are only providing a portion of the database not a whole information to a particular user so that is a view you can create number of views okay so indirectly it is providing the security capability also then two terms are there instances schema what is instance instance kyogre whenever i will use the word schema it means i am talking about the design of the database okay now according to abstractions according to abstractions now i can say okay i have three types of the schemas okay according to the level of the abstractions physical schema logical schema and sub schemas or viewer schemas so physical schemas describes database design at physical level database design at physical level then coming to the logical schema logical schema describes database design at logical level design at logical level design at physical level so physical schema cover design at physical level logical schema design at logical level and at view level we can have several schema because we can have several views so if we have three views so it means i have three view schemas okay so we call it as a sub schemas physical schema structure database so again this is a design which you are presenting to the user so every time you are talking about the design at each and every level of the abstraction that's why we are calling it as a physical schema logically um world use internal level internal level logical level and the view level so don't get confused if you want if you find somewhere these type of the words but the concept is same there are only three levels of the abstractions is it killer now coming to the data models as i told you that data model is used to describe the structure structure means data type constraint so we can describe the structure and we can achieve the abstraction by using the data models entity relational model er model relational model object oriented model object relational modelling structure data model but we will draw some er diagram for the given problems we will learn how to draw it how to design our er diagram it is based on the perception i am saying that the registration id of the arjuna is for example 2 0 9 1 0 3 okay so this is the registration id now i say okay what is the name of the student i say okay it is arjun but this is an entity in terms of entity relationship diagram this is an entity because it is a real world object we are talking about so we are percepting it so it is an entity which has three attributes now try to understand it is an entity which has three attributes registration number name and the marks okay and the data type of the registration number is integer the data type of the name is character and the data type of the marks is integer have you understood this point now what am i doing here i am saying okay i have one more student his name is akshita and his registration number is 209 103 and marx is 40. okay again this is the entity again this is the entity 209 103 this is a registration number this is the name of akshita and this is the marks 40. so it is again an entity which has three attributes registration number name and the marks now what is the similarity between this entity one if i call it entity one if i call it entity two what is the similarity between these two one the both entities have same number of attributes three okay same number and same type registration number name and marks this entity two has again registration number name and marks and data type are same for the registration here it is integer for the registration here it is integer for the name it is character for the name it is again character for the marks that is integer for the marks it is integer so it means i can collect it both i can collect both entities and i can create a set so this is a mathematics symphony this is a simple mathematics ktk these are the similar of types so i will collect those and i will create a set i will create a set so i can say okay i have a set that is the name of the set as a student and it has three attributes registration number name and marks fine is that kill here so this entity set has two entities now the first one is the registration number two zero nine one zero three let me first change this registration number and two zero nine one zero four is it clear so i can collect the entity set at individual entry entities okay now there are some relationship between those entities it may possible there is a relationship between these two entity sets there is a relationship between these two entities okay so in er model we talk about the entities and we are we talk about the relationship between the entities okay so we will uh cover this topic in detail so don't worry about this but this is the simple idea of that er model that it is a model which is used to percept the real world objects in the form of the entities and the relationships now coming to the relational model so relational model is what in mathematics uh a table is called as a relation okay why we call it as a relation because entity said on the student okay this is the pictorial representation of that diagram this is the registration number i'm not writing any primary key and etc here i'm not including this one we will cover that part in detail in er diagram topic so this is a marks okay so this is a pictorial representation simply now i want to actually implement this one so what i will do i will create a table here i will create a table here i will write okay this is registration number this is first column the second column is name of the student and the third column is marks [Music] registration number name and marks i think now it is readable so man is simply here i created a table which has three columns related to this registration number name and the marks i know this registration number is unique for each and every student and if they if you are a student then you must have a registration number so i can treat it as a key for my searching and the insertion so this is my registration which is i'm using for the searching and insertion i know there is a relationship between the name and the registration there is a relationship between the marks and the registration number if a registration number is given you can identify or you can fetch the name you can fetch the marks so in mathematics we call it as so first you will draw or design your database by using the er model try to understand first you will design your database by using the dr model there is the marker this one okay so first we will design it by using the er model then you will convert it into the relational model so now i think you have understood what is relational model relational model is basically the collection of tables it is collection of tables it is a collection of tables to represent both data and the relationship among those data okay each table has multiple columns and each column has a unique name fine so first you will design your database by using the er model then you will convert it into the relational model again there are some rules and the regulations or the concepts which you will follow or the constraints will you will fulfill to convert it into a relational model because set of rules according to that you can convert er model into a relational model it was a very simple example we had only one entity set and there was a unique uh there was a column which has the feature unique and not null so it just created a table or we just mapped it on a table that has three columns okay but there are some rules when you will create some relationship between the uh entity sets is it clear now object-oriented data model uh the object-oriented model can be seen as extending the er model with the notions of encapsulations methods and the object identity these are the uh these are the uh properties which are uh always associated with your object-oriented concept what is the meaning of the encapsulation what is the meaning of the inheritance methods and the object identity the next one is the object relational data models it combines features of the object oriented data model and relational data model so when you will combine it you will get a new model that that is a object relational data model then the semi-structured data models so again you are uh here to store your data but in the form of semi-structured your relational model is a structured data model your relational model is a structured data model okay because it is strictly uh structured but there is a way to store the data in a semi-structured way and for that purpose you use xml so xml is used to define our own text we can define our own text to to store the data if data file map is cool generally so those who have done or those who have worked with the xml they are familiar with this part that how they can use xml to show or to display the data on the web page okay and how how they code it how they can create the text but that is a way to create or or store the data in a semi-structured way in a semi-structured way so we call it as a semi-structured data models now coming to the database languages so when we talk about the database languages so we can broadly classify it into two parts ddl and dml okay data definition language and data manipulation language so i think you have understood with the name if you are talking about the design the definition of the data means creation of the table okay or let's suppose you are just simply alter your table you are adding a column i think someone mic is on okay coming to back so database language so we can broadly classify it into two part database definition language and database manipulation language gmail can be again classified or categorized into two again part one is the procedural and second one is your declarative okay let me write it in a short form procedural and the second category is your declarative okay so if you are talking about procedural it means you are talking about the algebra relational algebra and declarative it means we are talking about the relational calculus okay first we will cover algebra and the calculus then we will move on the sql okay so two broad categories ddr and the dml so ddl is used to specify the database schema schema means design if you are if you are writing a code which is related with the design of the database it means this is this code is related to the data definition language for example you are writing a query to create a table for example you have written a create table account where two columns are there account number and the balance what is the type of the account number that's that is the character what is the data type of the balance that is the integer what is the length of this account number is 10 means 10 length account number what is the name of the table that is account so what you are doing here you are dealing with the design of your database so this is you this is your ddl statement create is a ddl statement then what is data manipulation language means once you have created a table what you can do you can retrieve the data from the table you can insert the data in the table you can delete the data from the table you can modify the data which is stored in the table okay so just database means we are talking about the table here in the relational model so retrieval insertion deletion and modification so the queries which are related to these operations are included in the data manipulation okay then [Music] calculus if i talk about the procedural dml if i talk about the procedural dml okay so i know why i'm writing a particular query because i want to get the data okay so procedural matlab cap what data are needed i know kantos are basically or but how to get those data it will be also described it will be also specified there if in your query what data is required and how that data will be fast both are explained or described or given then you will say okay this is procedural dml so in algebra you write both means what data and how you will get that uh get that data okay declarative dml this is non-procedural dml so declarative what data is required you will not specify how that data will be required procedure process that data for example this is the table t1 this is the table t2 ticket for example you need output which will be fast from t1 and t2 both with the combination of t1 and t2 you will get your final output so you know what data is required but if you are specifying okay this table take this table and they this table and perform this particular operation there are a number of the operations for combination of the tables we will go through each and every one when we will talk about the algebra calculus and sql okay so abhi humidity then it means i'm talking about the procedural dml but if i'm talking about only the output okay i need this output from table t1 and t2 whatever the process you want to apply this is up to you you want to join the table you want to apply the union you want to apply the intersection whatever so that is your declarative data non-procedural deal okay now coming to uh database users and the administrators so as we talked about the users jason manning here better he does not know about the application program even he does not about does not know about the queries you only know about what okay there is a user interface there is a form he knows only one thing okay guys there is a form okay again text box there's amount there's again a text box and there is a button that is as a unsophisticated user names user those who are not technically sound okay then coming to the computer professionals those who can write the application program so naves users are interacting with the database by using application programs okay so definitely there are some technocrats those who can write these application program for these names users okay but these application programs are again using some tools to develop user interfaces okay interfaces so they are not interacting with the database simply just just sending a query database query language they are not using that they are not writing as well they are not working with the nosql okay they have created application program by using some tools they have created an interface with the database okay so they are you can say that okay they are simply a front-end developers now the people who actually uh can write the queries okay means they can interact with the database without writing the program they know how to write a query they know how to write a sql query so they submit each query to a query processor okay so that query processor breaks down dml statement into the instructions and it transfers it to the storage manager simply query to just a program that will be compiled and it will be given to the execution engine that execution engine will check the syntax and it will execute that is it clear so three categories names users application programmers and the sophisticated users those who know how to deal with the how to write the queries administrator is one who is the sophisticated who knows how to write the queries who know how to design the database but there is only one person who has such control over the system that person will be called as a database administrator that person will be called as a database administrator what responsibilities of the database administrator are he will uh be solely responsible for the design of the database that's why i have written your schema definition so he will be solely responsible for that he will be responsible for storage structure and access method definitions he will be responsible for scheme and physical organization modifications he will be responsible for granting of authorization for the data access so your database administrator will decide the rules of each and every actor who is in that particular system so the rules will be means the authorization will be granted by the database administrator and the routine maintenance of the database as the responsibility of the database administrator so he is the backend engineer simply okay who is dealing with the database he's the backend engineer so the success of that particular software or the website which is using the databases totally on the shoulder of this database administrator just think about the amazon which has a very large database so just think about this one the front end is not very much important here the data is important so so the success of this whole website is on the shoulder of the database administrator administrators who are working on this database those who are solely responsible for the maintenance of that database ticket so this is already 10 30 so now you have understood what types of the database users administrators okay okay so this is database system structure i would like to cover it in the next lecture so actually when we talk about the database system structure you can see that so how they will interact with this one how they will interact with this database okay so there are two intermediate layers in between that or you can say they are two between modules or the components of the database system structure one is the query processor and second one is the storage manager so we will go through the query processor and the storage manager in the next lecture okay we have covered the types of the users we know how what is the database we know the data dictionary indices now in the next lecture we will cover what is query processor what is the responsibility of this query processor what is the storage manager again there are four modules in the storage manager so uh what what are the responsibilities of these four models then we will start er model okay so find uh