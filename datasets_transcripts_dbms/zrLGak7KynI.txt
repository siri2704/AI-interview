hello everyone in the previous video we have seen the difference between the database management system and the file management system in this video we will discuss about the database architecture and what are the three database architectures so database architecture or you can say that structure of a database it's a simple representation of the dbms design so database like dbms architecture is a representation of a dbms design so what it will help it will help in designing developing and implementing the database when we have the design of the database then we can implement the database using that design how many columns what are the columns different columns that we can include in the database all these things we can Define at this stage database architecture so database architecture allows us dividing the database system into different individual components that we can independently change modify replace altered and Define so the design depends on the architecture of the dbml and dbms architecture depends on the users that how the users are connected to the database to get their request done so that is something a dbms architecture now there are three dbms architecture that is wanted dbms architecture two type and the three Tire one tire is the simplest one so let's discuss all the three dbms architecture one by one so let's discussed first the one tire architecture one tile architecture so this is the simplest architecture among all the three in this architecture the user with dialectic contact with the database there will be a user that will directly contact with the database so any changes he will perform in the database will be permanent it can change the data in the database permanently so any changes done by the user will directly be done on the database so this kind of architecture in which user is directly communicating with the database directly accessing the database is used for development of the local application where programmers can directly access the database and then they will quickly changes the data in the database when they are building any application so that is a one tire architecture so in Wonder architecture database is directly available to the user now let's discuss about the two tie architecture so the two architecture is somewhat similar to a client server architecture if you have seen the client server architecture so there will be a application that will run on the client side okay so there will be a application here is the client he is communicating with the application application can be a mobile application a user interface a web user interface websites anything it can be and client is using that interface that application to communicate with the database that is present on the server side server and in server there is a database so database is present at the server side and this is the client side this is the client side and this is the server side so client is accessing the database through the application so here there is added security then the one-time architecture because database is not directly exposed to the client there is something in between them that is the application and that application will communicate with the database present in the server side and that will execute whatever the queries for the accessing and transaction management whatever the data is present in the database after the query they will fetch and then they will pass it to the client and the data will be presented on the application or the user interface so for this kind of inter like for this kind of interaction to communicate with the dbms client-side application first establishes a connection with the server side and this can happen with the odvc or jdbc like apis so that is the two-time architecture now let's see the three tie architecture I will first write some points for the tutor architecture similar to the client server architecture application on client side communicates with the database that is present at the server side for communication application first establish a connection with the server foreign architecture here if you compare with the two dollar architecture we have only a application that is running on the client side so that can be a UI through which the client will communicate with the database so application is something that is directly communicating with the database but here in the three tar architecture we have also like put a new layer that is application server so application on the client side will not directly communicate with the database but there is another layer in between the database and the application client that is the application server so this layer will prevent the application that is running on the client side to directly communicate with the database so application on the client side will communicate with the application on the server side and this application on the server side will communicate with the database directly and the database all the things all the data will manage by the application server here in this architecture end user will have no idea about the existence of the database and information about the database beyond the application server and here the database also does like do not have any information do not have any idea about any other user beyond the application that is running on the client side so this is a three tier architecture nowadays it is basically used in the large web applications to heal if you talk about some important points then this contains another layer between client and server client here will be the user and server will be the database there is another layer and the layer will be of the application on the server side and application on the client side thank you client can't directly communicate with the database or you can say that server here in this architecture only the application server is responsible for everything happening in the database so it is application server will only directly contact with the database communicating with the database directly these are some important points about the three-time architecture now I hope all the three architectures you understood so there are one architecture in which user is directly communicating with the database means database is directly available to the user in the two-time architecture we have created a single layer that is of the application present on the client side now it is like similar to the client server architecture here client will be the user server will be the database so here in the application the application present on the client side will directly communicate with the database but the three tile architecture that is the best one here we have created another layer of the application on both the sites on the client side also on the server side also so that will combinedly create a layer between the user and the database and now client can't directly communicate with the database there will be only the application server who is responsible for the communication with the database and end user the user does not have any idea about the database and the database and the database like also has no idea about the users beyond the application layer so that's all for this video in the next video we will see the schema what are the schemas for the database thank you