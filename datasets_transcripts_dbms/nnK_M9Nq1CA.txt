hi everyone today we are going to study data modeling in system analysis and design so basically data modeling is a technique for organizing and and documenting systems data now we have so much of data uh about this system and we need some way for organizing and documenting that data so data modeling is that technique which helps in organizing and documenting your systems data data modeling is also sometimes called database modeling because a data model is eventually implemented as a database it is also sometimes called information modeling so basically we can call it by three names data modeling datab base modeling and information modeling now what is the tool that is used for data modeling so the tool that is used for data modeling or database modeling or information modeling is the entity relationship diagram or the ER diagram The Entity relationship diagram we also must uh have studied in dat in the database management system dbms so what is an ER diagram basically uh we are doing data modeling with the help of er diagrams so then what is an ER diagram an ER diagram basically depicts data in terms of entity and relationship described by the data so basically uh what is this ER diagram or the entity relationship diagram doing it is depicting your systems data in terms of entity and then relationship among those entities which are described by the data now what are some important uh notations for the elements of the entity relationship diag and what are those elements of the entity relationship diagram let's have a look at them the first and primary important uh the first and most primary element of an entity relationship diagram is your entities now entity is something about which the business needs to store data so entity is that particular uh real world object of course it has to be a real world object and it is related to that organization or that business for which we are doing data modeling so that means it is something about which the business needs to store data for example if you have an organizational an educational institute so entity for an educational institute would be the students the faculties about which The Institute would want to store data so anything about which the organization or business needs to store data is an entity so basically if I go into the definition of an entity entity is a class of persons places objects events or concepts about which we need to capture and store data so basically it could be any real world object ranging from people or persons or places or objects or events or concepts basically about which the business needs to capture and and store data it is a class of such collection of objects like a class of all the students is a student entity the class of all the faculties is the faculty entity so basically it is a class of any such Real World objects about which the business wants to capture and store data now you know what is an entity what is an entity instance an entity instance is a single occurrence of an entity say for example the collection of all the students in an Institute comprises the student entity set then any one student from that entire entity set is the uh entity instance for example your class has a collection of 40 students so the collection of all those 40 students makes the uh student entity set and out of all those 40 students one student information about that one student say for example name of that one student is Kat so Kat is an entity instance is an instance from the student entity what is the notation for an entity the notation for an entity is like this a rectangular box so if it there is a student entity or a class of students then the notation for that particular student entity is is within the rectangular is like this rectangular box and here you can see that student is the name of an entity then the second important element of an ER diagram is the attribute an attribute is a descriptive property or characteristic of an entity so basically a descriptive property or characteristics that means that particular thing which is describing The Entity the other names or synonyms for attributes are element property and field so attributes are also known by the name of element property or field so basically attribute is anything that is describing the entity for example if I consider the student entity then what are the attributes of a student entity the attributes of a student entity would be the student name student role number student ID course enrolled student contact number student address these are all the attributes of the student entity then uh there is a category of attribute also like the compound attribute so an attribute is called a compound attribute with uh such attributes consist of other attributes So within an attribute if you have collection of other attributes then such an attribute is called a compound attribute a compound attribute is also known as a composite attribute for example I can say that the student name is a compound attribute because it consists of other attributes like the first name the middle name and the last name so basically in a simple language if you can divide an attribute into further into more attributes such an attribute is known as a compound attribute another example of compound attribute is the student address the student address can be divided into other attributes like City area Street Country so for that reason student address is also a compound attribute then coming on to relationships what are relationships in an entity relationship diagram as I told you an entity relationship diagram depicts the data in the form of entities and the relationship among them through the data so then what is relationship a relationship is a natural Business Association that exists between one or more entities so any such Business Association that is existing between one or more entities is called a relationship it is basically representing an event that is linking the entities so how are entities associated with each other or how are entities linked with each other through relationships so if uh I'll give you an example of a relationship say for example I have two entities the driver is an entity in a system and car is also an entity in a system now there are two entities of an of a system driver and car if these two entities coexist in a system or are a part of the same system that means they must be associated with each other through some relationship so what is the relationship between a driver and a car the relationship between a driver and a car is that a driver drives a car so this particular Association or link between the two entities is known as the relation ship and it is usually represented by this diamond symbol right so this is what you called a relationship then there are some important terms related to ER diagrams what are these terms let's have a look at these terms also the first term is cardinality now what is the cardinality cardinality in ER diagrams defines uh your ma ma minimum and maximum number of occurrences of one entity that may be related to a single occurrence of other entity because all relationships are bir directional that means relationships can be in both the directions between two entities so for that reason cardinality must be defined in both relation in both d directions for every relationship so basically what is cardinality cardinality is a very important piece of information about any two entities right so important piece of information about the relationship of any two entities it can be defined as the in a simple language if I explain cardinality it means that the number of times an entity of an entity set an entity instance of an entity set participates in a relationship set so cardinality shows how the entities are connected to each other cardinalities basically help us to identify the uniqueness of data in the database columns for example uh now there are several kinds of cardinalities if I'm talking about the instances of an entity set participating in a relationship so B based upon that I can divide cardinality into these categories your one to one cardinality then is your one to many cardinality then is your many to one cardinality and then is is your many to many cardinality so basically these are the four categories in which you can divide cardinality based of on which you can identify how many instances of one entity set are participating in a relationship so in one to one cardinality when I talk of one to one cardinality then exactly uh say for example I have an entity set a and I have an entity set B so in a one to one cardinality an entity in a set a relates to exactly one occurrence of another entity in set B for example if there are uh if there is a uh entity set student and if there is a entity state ID number right so exactly one student will have one ID number one student cannot have more than one ID numbers and one ID number cannot be associated with more than one students so this is one to one cardinality that exactly one instance from this entity set is participating with exactly one instance of this part uh entity set in the relationship so this is one to one cardinality talking of many to many cardinality in me um uh in sorry talking of one to many cardinality in one to many cardinality an entity in a set a relates to many occurrences of another entity in the set B if I give you an example if I have an entity set department and then I have an entity set employee so you know one Department can have more than one employees so exactly one instance of this entity set will participate in the relationship with many instances of this entity set because in Department you will have various departments like HR finance and all so the one HR department can have many employees One Finance Department can have many employees so the association is 1 is to many then comes your many to one cardinality talking of many to one cardinality there are multiple occurrences of one entity set that can relate to or that can participate in a relationship with exactly one occurrence of another entity set for example if I consider an entity set employee if I consider an entity set employee and an entity set Department that means I reverse the both both these two entities here in this case so that means you know many employees out of the employee entity set can be in one department so many instances of this entity set can participate in the relationship with exactly one instance of this entity set so this is many to one relationship or many to one cardinality then comes the last category that is many to many cardinality in many to many cardinality multiple occurrences of one entity set can participate in the relationship with multiple um occurrences of another entity set for example if I take two entity sets student and course so obviously there is a relationship between student and course entity set because a student enrolls in a course now one student can enroll in multiple courses and multiple student students can take the take up the same course so that means many instances of the student entity set can participate with many instances of the course entity set so for that reason this is known as many to many cardinality so I hope the concept of cardinality is clear now the another important term or related to your ER diagrams is your degree now what is degree of a relationship both cardinality and degree are associated with relationship so degree of a relationship is basically the number of entities that participate in a relationship how many entities are participating in a relationship is known as your degree of relation ship so what is degree of a relationship let's understand in detail basically the degree of a relationship uh as I said is the how many number of entities are participating in a particular relationship now relationship can be between one entity two entity three entity so that means how many entities are participating in that relation relationship is known as the degree of that particular relationship so uh Bas in a simple language if I tell you how many entities are involved in a particular relationship so for example uh you have different entities like employees departments and projects within a database now if you want to understand the database design then understanding the relationship among these entities is very important for the database design so there are four type of degrees of relationship based upon the entities as I said how many entities are participating in a relationship is the degree of the relationship so how many uh degrees can you have in general one is the unary relationship unary relationship name is suggesting only one entity is in involved in the relationship that means there is one and only one there is a single entity set and the association is between a single entity so basically the degree here is one in case of unity relationship the degree is one because only one entity set is participating in the relationship for example an example of unity uh degree or a relationship with degree one is uh if you consider a College pres presidential elections a president is chosen among the students now that President leads the entire commun community and looks after the student Centric activities even though he is the president but he is a student so we can say that there is only one entity that is student then moving on to the binary relationship in the binary relationship the how many entities are participating two entities are participating so the degree is two so one only one entity is participating in a relationship in a un relationship in a binary relationship two entities are participating in a relationship right so there are two entities that are participating in the relationship hence the degree of the relationship is two and this is the most common type of relationship that you will find in an ER diagram for example if example of a uh uh relationship with degree 2 if I consider like citizen entity set and adhar card if I take adhar Card as an entity and citizen as an entity then every citizen has AAR card so here two entities are participating in the relationship so the degree is two over here then is the Third Kind of relation uh degree of relationship that is your tary relationship inary relationship there are the degree is three because there are three entities that are participating in the relationship so the degree of relationship for that reason is three the number of entities have increased from 2 to three here so it is a difficult to convert into a Rel relation table but we will not go into those details let's look at the example of a Turner relationship so for example there is a student entity right you have a student entity in a school so that means I can say there are two entities one is your student entity and another is your school entity right and the same student is also taking some coaching classes so I can say that coaching classes is also one entity so there are three entities student entity School entity and coaching classes entity right so uh there is a student who studies in a school and the same student is taking the coaching classes as well so the coaching class is also an entity so there is a Turner relationship here because student studies in school student studies in in school at the same time student studies in the coaching classes also so this is a Turner relationship now last degree of relationship is your eny en relationship in the ener relationship it is a generalized form of relationship when n number n could be any number 3 4 5 so Beyond three and could be any number for a single entity participating in a relationship we call it Unity relationship for two entities participating in a relationship we call it binary relationship and for three entities participating in a relationship we call it a tary uh relationship and anything beyond three is then generalized as n it could be 4 5 6 7 anything right so a generalized form of relationship when n number of total ENT entities are participating in a relationship is called an En relationship since there are many entities involved it is hard to convert them in into a relational table but that that is a different thing all to uh aspect altoe as an example we will consider a university now University is a big business organization and it can have many entities like your students now student is one entity of a university then it has teachers so teacher can teachers can be another entity of the University then it has courses so uh university offers many courses so courses can be one entity of the uh University then under the university you have a college so College can be one entity of the university and where is that particular College located so location can be another entity of that University so there are many entities which are associated with the university so for that reason student like student is related to teacher student is studying under a particular teacher then courses are taught by teacher then college has many teachers and students and the location of the college where all the students are teachers are taking courses under the particular college so this is an example of an En relationship after en relationship let's look at another kind of unique sorry after en degree or the uh un binary turn and en degree of a relationship let's look at an another unique kind of relationship that that is your recursive relationship so basically what is a recursive relationship a recursive relationship exists between different instances of the same entity and such a relationship is called a recursive relationship right so that means different it could be two three two or three instances of the same entity set so in real life it is defined a problem or or an object in terms of itself which means usually we see the relationship between two instances of the uh in uh in terms of a recursive relationship we can see the relationship between two instances of the same entity set right so uh in in a ER diagram the recursive relationships shows basically uh you know the entities are represented through rectangles and the attributes of the entities are defined in circles so say for example you have a entity which is described not uh the notation for which is in the uh uh a rectangle now the attributes like say for example the student name or student ID these are the attributes of the student so the they will be represented in these circles and you know the relationship between entities are described in the rbus so this is the symbol for the relationships this is the symbol for the entity set and this is the symbol for the attributes of the entity set right so the relationships usually as you know are present between two entities defining the relationship between those two entities and then connecting those two entities but when we are talking of a recursive relation and we are saying that different instances of the same entity are related to each other so the entity has a relationship with itself The Entity instead of having a relationship with some other entity has a relationship with itself in case of a recursive relationship meaning the entity will be connected to the relationship two times so this is an entity and this is the relationship so this is how it will be connected to the relationship two times The Entity will be in relationship with itself only so entity will be connected to the relationship two times like this example if I consider of an recursive relationship so consider a situation where in an organization there are many employees and one employee if I consider the employee entity set right no one employee can have many roles he can be a developer he can be a manager he can be a CEO Etc so all the developers who are employees are managed by who they are managed by the manager who is also an employee if the employee is a manager and all the employees are managed by the manager then the manager is also an employee means an employee manages another employees so basically if a manager is employing other employees in other words I can say that an employee is managing another employees so that means I can say that there is a recursive relationship in dbms between the employee entity because the employee is managing the employees so such kind of a relationship is known as a recursive relationship