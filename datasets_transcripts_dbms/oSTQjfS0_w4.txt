hello everyone welcome to Imperium this is the first dbms lecture it is the start of the database management course I will teach you the SQL and psql language also the theory of dbms so what is dbms well the full form is database management system and it allows you to store retrieve and manipulate the data which is in the database so it is mainly used for data storing and in the back end so now there are two options or two ways on which you can do the coding so the first is terminal and the second is a workbench so I prefer the workbench because it has more features than the terminal and it is also very beginner friendly so I'll show you how to download the MySQL workbench just go on your browser type my MySQL workbench download so now as you can see the the link has we can see the link so download myl workbench we it will take you to this interface Windows x86 64bit MSI installer make sure it is the myql workbench Community download we'll select download now uh here we can we just select no thanks just start my download as you can see the download is started and we'll go in the folder and just double tap it the setup B has opened we next this is the location where the web workbench will be downloaded if you want to change it you you can next we will select the complete options because it will install all the all the required features for the coding install so now we will we will ground the access so the visard has the download has been completed so in the bottom left corner as you can see the launch myc workbench now you have to selected and then we have to do finish now as you can see download the workbench has opened so these are like these the these are the connections I already had so I will show how how to create it just select the ad then you have to type connection name then you have to keep the connection method as the default only then you can change the host name if you don't change it it's not problem you have to change the port name because if if it's not your first time so as you can see I have my one connections name is 3306 and another one is 3308 so if I use 3306 it will connect to this uh connection only and it will not create another connection so you can just S as 3307 and then you you can change your username it's not necessary and store a password in the vault after that just leave the schema blank and just press okay now because I already have connection I won't like create a new one and just cancel it then I'll show you later it will ask you for your password so just so just save it somewhere so now this is the query tab where you can actually do the coding if you want to like create more query tabs you can just select this the SQL plus you can see the create new SQL tab for executing queries you can just use it to create as much tabs you want you have the uh script file option you can create it so you can save it anywhere in the laptop or the your PC there are many options such as view the query tab so like execute all selection or the execute current statements different options this is the database so the connect database manage connections Etc we have the server options the tools scripting and help so this is one advantage of workbench uh compared to terminal so this is how you just how you create or use workbench I will show you how to code it in the later videos because we also have the theory part of the dbms so this is we will stop here only thank you hello everyone welcome back to Imperium so this is the second lecture of the dbms course so last time we saw how to download the myql workbench today I will show you some Theory and then we will learn the query language of creating database deleting database and then creating table deleting table and how to retrieve the information that you have inserted in the table so first we will see the theory so note that I'm using my personal notes if you want these you can take a screenshot and if you want to write it that's your choice so we saw that what is dbms it stands for database management system so it's a software that manages and organizes the data in a structured manner so what is a database a database is an organized collection of structured information or data typically stored in a computer system so it's collection of data and we uh you we can create different different databases with different names and use them as as we please so these are the features of dbms so this is the backup alen recovery it's one of the features of dbms now dbms is classified in two types that is rdbms and nosql so rdbms has like stand stands for relational database management system so in this we have tables columns rows and then we have different types of keys and constants now we saw what is database and next so now database langu languages so we have ddl DML DCL and TCL so these two uh DCL and TCL are for the later part so we have transactions and functions in the DCL and TCL languages so first we are going to learn ddl and D DML so that is data definition language and data manipulation language so in ddl there are uh like syntaxes or keyword such as create alter drop trunet comment rename and Etc so these fall under data definition language and in under data data manipulation language we have insert update and etc those are those Falls fall under data manipulation language so now the see select insert update and delete these fall under data manipulation language so these two I won't take them for now we will take a look at them later and now dql this is the subgroup or subset of data manipulation language which has common command is such as select now these are the characteristics of dbms so it uses a digital repository established on a server to store and manage the information so and the one of the important is uh the asset properties so it contains asset properties which maintain data healthy state in case of failure uh the asset property is the concept in dbms which is necessary for maintaining data consistency integrity and reliability while performing transactions so the transactions fall under the TCL that is the transaction control language in which the asset properties mean the these are the this is the acronym so acid is the acronym for automac City consistency isolation and durability so a it stands for that we will look into that when we learn TCL let's go to next page these are the advantages and disadvantages of dbms so please take screenshots on notes because this is important now we will look in data models so relational data model so this is this type of model design that data in the form of rows and columns within a table so this is widely used and we will like the create and the create table query alter table which it's used in this only we so as you see we have table we have student ID student name student age and student class and student section so we create this table by using the create table query I will show you the Practical also in workbench first we'll do the theory so now this is second is the entity relationship data model this shows the relationship of between two entities so let's say we put here student then it is taught by teacher or we can put student goes to college so the the Diamond box shows the relationship between the two entities and the attributes mean the student ID and student name like we have written in the above table those are the attributes for the entity then we have object based data model this is basically the extension of er model which has uh functions and objects it has notations for that and the objects are nothing but the data carrying its properties then the last is semi-structured data model this type of data model is different from the other other three models because the data semi structured data model allows the data specification at places where the individual data items of the same type may have different attributes so in simpler terms a semi-structured data model means that not all data items are of the same type so and they do not have to follow a strict structure for example uh if you have record of a several records of people so in that some people might have their phone number included in that record and some may not some may have their emails included so this is the basic like idea of the semi-structured data model so each record can have different details or attributes if you may say and that's okay in this model so next so these are now the types of the type of entity that is a weak entity and entity that depends on another entity is called as weak entity so let's say this is the example so loan so installment is dependent on loan if you don't take a loan of something you like don't need to pay installments so that is how the example is this is the box of representation then we have attributes so the attribute is used to describe the property of an entity like I said we have here these are the attributes so these give the like in detail information we can say like breakdown of a entity so we can say it's an attribute so if you take student so what is the information breakdown of student his ID name age Etc so this is the ER representation of how we write the entity and the attributes we have ER model so we have entity attributes and relations so we'll go in entity and entity maybe any object class person or place so in the ER diagram an entity can be represented represented as rectangles so these are simple rectangles which represent an entity so employee this is an entity works for department or a company so that's another entity so uh what is the ER diagram ER model stands for entity relationship model so this is the like basic representation we saw it before and next we'll go for the component ER diagram so that is this so those like what has happened is maybe the pages have gotten jumbled up so that's why we have like uh the pages have become front and back so we can work with it no it's no problem so now we already saw weak entity and attributes we'll see the this is the attributes so first key attribute the key attribute is used to represent the main characteristics of an entity so the key attribute is represented by an ellipse with the text underline so as in idea ID so what is a key attribute we can like say ID is uh like a key attribute it's it is different for every student but so is the phone number but uh ID is like more important because we can uh like recognize someone with the ID we don't learn the phone number so often so in college just we have IDs for that so that we have we don't jumble up students so ID is the key attribute in this ER model then we have composite attribute the attribute that composed of many other attributes is known as a composite attribute so for example we have name in name you have first name middle name and last name so this is a composite attribute other example can be the date of birth which will have the day the month and the year so date of birth can also be a composite attribute then we have multivalued attribute an attribute can have more than one value the double OV is used to to represent multivalued attribute so as as the phone number so one person can have multiple phone numbers because they can own multiple SIM cards so that this phone number falls under multivalued attribute then derived attribute an attribute that can be derived from other attribute is known as derived attribute it can be represented by a dashed Eclipse so for example a person age changes over time and can be derived from another attribute like the date of birth so the age can be derived from the birth date so basically AG is dependent on the birth date similar to the weak entity in which uh an entity is dependent on a another entity so now relationship a relationship is used to describe the relation between entities so diamond or rhombus is used to represent the relationship so this is the uh drawing you can say which which is used to represent a relationship first we have teacher it's an entity student it's another entity and this is the relation so what is the relation between teacher and student teacher teaches student so this shows the relationship of the ER diagram or the relationship between two entities now types of relationships are as follows so we have four types that is one to one one to many many to one and many to many so first we'll see one to one relationship so when only one instance of an entity is associated with the relationship then it is known as one to one relationship for example a female can marry to one male and a male can marry to one female so and other example we can take is a child can only have one father and a child can have only one mother so we can take that as also an example so how we will put it in the ER model it's female married to male that's one to one relationship now one to many relationship when only one instance of an entity on the left and is like connected or attached to more more than one instance of another entity on the right then this is known as one to many relationship for example scientist can invent many inventions but the invention is done by only specific scientist so this is the ER representation we write one to show its one to M that is one to many so this is the uh scientist invents invention one to many relationship now many to one relationship when more than one instance of the entity on the left side is connected to only one instance of an entity on the right side so it is called as many to one relationship the student enrolls for only one course but a course can have many students students or we can say a student uh goes to one college but a college has multiple student so this is student that is many to one because student can be multiple which choose a single course for example a student chooses computer science so multiple choose multiple students can choose single course that is computer science now many to many relationship where when more than one instance of the entity on the left side and more than one instance of an entity on the right side is associated with each other it is known as many to many relationship for example employee can assign many assign to many projects and a project project can have many employees for many employees Associated to it so employee is assigned a project so many employees can be assigned the same project and the same employee can be assigned to multiple projects so which makes it a many to many relationship so this was the uh fourth type of relationship we will stop this lecture here only in the next lecture we will look into SQL and I will show you the Practical of creating table uh updating it creating database Etc if you have any doubts in today's lecture please comment we will try and solve it as soon as possible thank you welcome back to emperium so last time we saw the introductory part we saw what is an ER model then we saw the like elements that are present in the ER model it's entity attribute and relation we saw the types so we entity and types of attributes types of relations so today we will learn SQL language is the query language which is used to manipulate data inside the database so now there there are two types of dbms that's relational database management system and non- relational database management system so in like relational database management system the like uh data is stored in a table format so you can see the role number name class this is the relational database management system and in non- relational database management system the data is stored in key value pair so we will learn this later so now what does SQL St stands for it's structured query language so SQL is used for update delete insert data in the table which is for the relational database management system now this these are the commands I'll just show you directly instead of like going one by one page by page so first we will learn the how to create a database so the command for that is uh create database now I have already created a database named Imperium so I will name it Imperium 1 then you select this and select this option the execute statement under under the keyboard cursor so you can see action output in the action output it's take that means the database is created now if you like select this one more time and run it again you'll see that it has denied it because it also says that can't create database because it already exists so this is the creation Now if you let's say you did a spelling mistake or something else how would you delete the database so the Syntax for that is drop database the database name so now it is giving an error because we haven't given semicolon here we just go semicolon now we'll select it and then execute you can see the database has been dropped and because we didn't insert anything zero rows are affected so now once again so this was creating and drop next is after creating the database how will you connect to the database so you will use the syntax as use and database name so the first database I created was Imperial so this is see this database you can see use Imperium it has accepted it so now we are working in the Imperium database so if we create any uh tables and insert the data in it we'll find it in the database Imperium so if you have created many databases so in here you can see it like directly but if someone is using a terminal so how will you uh see like how many databases are there what name of the database is there so for that the query is show database this is the query it will databases now we select D so here you can see all the databases so show databases is one of the most useful commands because if you have created multiple databases like I have you can like get to see what what is the name of the database and you can use them later on so there is it's not much useful in MySQL workbench but the people who has use MySQL shell or The Terminal directly so this this command is very useful next we'll see the creation of table so we'll go create table and then table name so I'll take table name as student and then open close circular bracket semicolon now in the circular brackets we will insert the like information that we want for example here we wanted the role number name and class like that I will write rooll underscore number uh note that the spaces are not allowed so as if you write role and number the space is not allowed for the element name so you have to go like uh you can just type it like together only that's RO number or you can give it a underscore to separate the words so now role number then data type so for role number we can take data type as integer so the in comma Now second one was name so name and in C or C++ we use uh character and by character we use string so in Java we directly use string function MySQL doesn't have string it has v so V that means variable character and we have to Define number in it so we can give the like a limit so how many number of elements are you limiting that user can input so I'll just give 30 remember that it will like stop at 30 it won't go forther 30 but if you type less than 30 like let's say a name is aush so aush only has five letters so like the it won't like sayy it's only five letters I want all 30 spaces to be filled it will allow the less than and equal to 30 elements or characters in the back app also you can uh use the text that is the text data type in this you don't have to give a limit or anything you can just type text name text and then we had classes ear we had so here so that is in which you are studying and for here again we will use barer or text so I'll give back here and then see like the table execute now I can see the create table query has been executed now to insert data into the table we'll go the Syntax for inserting is insert into table name that is student and values again brackets will give so now in this order first role number then name and then the year in this order we have to insert the data so for example I'll give Ro oh sorry I'll give role number as let's say 10 remember for text and V cat that is for characters you have to give double inverted commas and you have to write in between them so name I'll give let's take aush only and for E will give s so after this we can select it and execute we can see the insert uh query has been executed you can like do this again like copy it then paste then change the values down or you can just give a comma here it's comma and in the same order just copy this paste it you can paste it multiple times just separate it by commas and then change the values here will give R will give thiro 13 go with post 14o let's say let's keep R in second so now we'll select this and then execute so you can see the new data has been inserted now we'll select that is retrieve the data how to uh get the data again so we'll go select star from table name so remember the star here means all of the elements and all of the data so when you say select star from student the star indicates that all the entities that are present in the data that is the role number the name the year I want all of that to show we'll go select start from student execute you can see because we first inserted like iush with in a single layer and then we took it again uh it has taken iush two times so there is a key for that which you can give it's called primary key so when you use primary key it allows only one entry of like it cannot it doesn't allow a duplicate so let's say if I took like if I gave the role number a primary key so it wouldn't have taken two entries of the RO number 10 it would have it would have just declined it because we we would have given the primary key so I'll show you that also I'll show you that in the next table I'll show you how to drop the table so this was retrieving and now how deleting the table get drop table and table name let's drop table student you can select and execute as you can see the table has table has been dropped and all the entries are also gone with it now we'll create another table in that I'll show you like the use of primary key so for example let's take this table only so just I'll just give or add primary key to the role number remember you should add the primary key to the entities or the attributes that are uh like that that won't repeat like you cannot give primary key to the names because many people have the name aush but to role numbers in student like in student management system or in college you can give the primary key to the role number you can also give the primary key to the phone number so that is the use so the entities or attributes which are going to be singular and you know that that won't that don't need to be duplicated so you should give primary key to them so now I have given primary key to the role number we'll insert the same values ex oh sorry we haven't created my bad now this so we can see create table and table now we select from the student so remember the these are the inputs for now and let's add another input let insert into student values so now we'll add the next same so I'll take the same role number that is let's say I take 11 and you know what even if I take a different name for here I took ARA for the RO number 11 even if I take a comma Au work and then let take F5 only so see that I have changed the name the year but that won't matter because of the role number the query won't execute see it's says duplicate entry 11 for key student primary so this means that there is already an entry for the role number 11 and because of the primary key the database is not allowing us to make another input of the same role number that is a duplicate in uh input according to it uh it doesn't uh check the name name or the year that we have given because we haven't given any condition for it just because the role number is similar it is repeated the database does not allow the entry so now let's just change the entry after changing the role number as you can see it allows the insertion operation so here auur is added also the order that you like insert the values in it will remain in that order only it won't like go go alphabetically alphabetically or the number wise it doesn't check that it just goes it's first in first show it's like that so this at last we'll just drop the table again so the these were the database operations and the table operations will we have more operations such as update and we have many operations in the retrieving data format because here we are just using star that means we want all the data that is present in the database or the table let's say the table but when there is a wear Clause it's wh e r it it can with that you can give uh multiple conditions and you can retrieve the data for a specific uh thing that like a specific uh name or a specific year or let's say if you have added the percentage you want all the uh students that have gotten above 80% so you can also give that condition and it will show you the students name only for those who have uh great equal to or greater than 80% so we'll see those uh Clauses and more operations in the next lecture thank you and if you have any doubt you can like put it in the comment section and we'll try to solve it as soon as possible thank you hello everyone welcome back to emperium so last time we learned the creation and deletion of the database we also learned the creation of of table we learn the insertion of data we learn retrieving the data and delet deltion of the table today we will learn the alter table statement and and the constraints of the uh database which are commonly used so first alter table first I'll use the database Imperium after this we will create a table let's say student will create his ID int his name we take marks contact number note that I have used the numeric for contact number because if we take in it only allows you to insert eight integers or eight numbers that's why I have used the numeric data type and now we'll create this table so if we want to see the output we'll just now we can see the table has been created now we will insert some values in it so let's say or before inserting let's let's say that we want to add another column so like you have two options either drop the table create a new table with the column that you have forgotten now or use the alter table query which will add the new column at the very end of the table that you have currently created or are using so what is uh alter table statement or alter alter table query so it allows you to add delete or modify columns in an existing table so we have created the table student now what I have to do is add a column so what is the query for adding the column so it is alter table then table name which is stud for student then add column then add column name so that is it will be add column name so here we want to add address let's so we want address of the student and and if you just run this query it won't work because when you add a column you also need to give the data type of that column so I'll just give the data type as text now I can see there is no errors displaying on the screen we'll run it and the query has been executed successfully so now if we select from the student table we can see that the address column has been added we will insert some values in it insert into stud values uh note that you can use this format to insert any values that is you can write the data in this circular brackets or there is another way or another syntax in which you add the column names before inserting the value so it is like insert into student then you add the column names that is S ID s name SM Mark uh remember that when uh inserting the column name you don't add the data types in the insert query so you just give the column names so this last contact number and address so after this you can just close the circular bracket then add your values in this or add the data in this we'll go first RO number 10 I'll take name as ABC after this you can see the we have marks contacts and address for marks I just put 80.5 because we have taken the data type as float the contact number numeric will go and then for the last is address we just type in pun now you can run this query the values will be inserted and if you want to insert multiple values in a single line you can just copy this much the data between the two circular brackets paste it like you can you have to separate it with a comma paste it and change the inputs As You [Music] Wish number as 46 and if you run this you can see the query has been executed after selecting you will see two rows so this is one form to insert your data if you remove this there's no problem see if you remove this values student values and if you enter this data so let I change the numbers so it won't be same you can see it doesn't matter if you use this syntax on this syntax so there is this is used for the users understanding so he doesn't forget uh which column name is first or which column is first so if role number is first or the ID is first or the name is first so for that that purposes this syntax is used and there is no specifics to it so if you drop it it is no problem now you can see there are four rows here now if we have to delete a column from the table so we saw the adding of the column now it's the deletion of a column or dropping of column for that you have to type the alter table query for dropping column the syntaxes alter table table name then we have drop column you can see that while adding we didn't write add column we just wrote add and column name but while dropping we have to add the word column so it's alter table student drop column then column name so it is address you can see that while adding we had to give the data type but while dropping we don't need to specify the data type after just giving the column name you can drop the column now if we check the table you can see the col column address has been dropped so it has also Al updated the entries that were inserted into the table next is modifying a column let's say that you just wanted to keep the marks in integer what would you do so you have inserted four values this is easier because it's only four values but in Industry there are thousands of uh values inserted if you delete the table all of the data will be gone then you will have to do all that work over again which will waste a lot of time so for that there is Alter table modify column query so the syntax is Alter table table name and modify column and column name you will take SM marks and the data type which you have to change so like now it is float but I have to make it integer so I'll type int you can see the marks I had inputed was 80.5 and 78.5 but they have been changed because the integer doesn't take the decimal points of the decimal numbers after the point that's why we can see the change of the updated version of the student marks so this is how the modify column query works with the with using alter table now we will look at constants so there are uh many conents in the SQL but commonly used there are uh seven constants that are commonly used in the SQL we will now look at them so now we have Nal that's the first constant so it ensures that a column cannot have a null value so basically if you go in this table so if we put not null in front of this while creating the table not null in front of this student ID what will happen is so the table will not allow the user to keep the student ID blank or you can say that it is mandatory to fill in that column that is the student ID column or it will not accept the insertion operation only that is how the Nal constant Works second is unique so what unique does is it let's say you put unique so what it does is it doesn't allow the same entries or the same data to be inserted if I put if I insert 45 as the student ID again it will not take that data or it will not insert that data because the 45 student ID already exist in the table if it's a duplicate ID that we are inserting in the table unique will not allow the in operation in the table next we have the primary key so primary key is easy to understand because it is the combination of notal and unique constraint so basically when using primary key the column or the element which let's say we use primary key so now now student ID cannot have a blank space which is it is mandatory to have some data and the data that is inserted in the student ID could not be duplicated or repeated in another insertion operation or in another data insertion let's say we have given the 20 ID for the name EBC and if we try to give the 20 ID again for the name MN that is the second student we are assuming if we do this it will not allow the insertion operation because the table already has an entry with the student ID 20 and the not notal part does is if we just leave it blank let's say we just left it blank like this it won't allow it because it needs some data in that column next we have foreign key so the foreign key is used to join two tables so you can use the table or the element of one table into another for example we have a parent table as a person let's say create table person we'll add person ID and we'll add person name text we'll create the table okay sorry note that the the foreign key works only with the elements which are given the constants unique or primary key so which means there shouldn't be duplicated data in the table in that particular column so that's why foreign key only works with unique or primary key so I'll give primary key to person ID now I will select this run the the command so now we have created the table person ID and now we are creating another table which is the child table so person is the parent table and let's say order is the child table person table order we go AO ID in and go aut date date and then let's say we have to take the person IDE or use the person ID in this order table person ID int now there are two ways to use this first you can just go is references table name that is person table and then what element are we referencing the person ID this is one way to use the foreign key or there is another way which is the preferred one that is you just give person ID in you separate it with the comma then you type foreign key in bracket which key is the foreign key that is the person ID so we have given foreign key to the person ID element and now references to the table and the column now we'll run this as you can see the query has been accepted this is how you use the foreign key now we will see the check constant so what is a check constant it ensures that the values in common satisfy specific condition so let's say we will take the table person only first I will drop the table have a drop it see this is another example you cannot drop the table person because we have given foreign key to the orders table so first we have to drop the orders table and then we have to drop the person table for this there is another query it's called as on delete and on update casat I'll show you first I will drop the ERS table dro the table and then when here you can give on delete and on update cascad that is on so what this does is so I just add key person ID person so this is uh the on delete cascad this is the query so this on delete and on cascad means that if you delete any data or the entry of a particular ID let's assume ID number three if you delete that ID3 from the person table the other data that is in inserted into orders table including the person ID 3 will also be deleted that is the meaning of on delete cascad and on update cascad means if you make changes in the person ID 3 all those changes will be reflected in the orders table related to that person ID 3 now we will see the check constant so here we have person AG int and now we can insert the constant check we will the syntax is we have to separate it with a comma we go check then circular brackets and we will add a condition to the particular column that we want to uh put a then we will add a condition to a particular column so let's take age we'll take person age and we will put the condition of the portion a should be above 18 so this will be greater than 18 so this becomes a use of check constant we can also take it as uh less than 18 not equal to 18 so this just change in the operator it's less than greater than greater than equal to less than equal to there is not equal to well note that not equal to can be written in both forms this is the first way to write not equal to the other is this two angular brackets this is this also means not equal to in my so basically this is the use of check constant the next is default constants so default sets a specific value for a column so let's say we have given a column uh address and we are we are a company that is that resides in India and we haven't been International so when taking application forms we can just set the default value as India in the address or location as you can see so if we go here if you create create table info we will add ID we will add name and we will add the country here text now we can set default as India as because it is text I will write it in inverted comma India close so now if someone while entering the information doesn't add the country the default will be India that is the country we have said will automatically be inputed in that table so if you we'll create the table run so now you can see that the table has been created what happens is it doesn't work for the text data type it only works for the Vare data type that is the default constraint that is it for this lecture thank you and if you have any doubts please add your comments we will try to solve it as soon as possible thank you hello everyone welcome back to emperium this is the fifth lecture of the dbms course in the last lecture we learned the alter table statement and the most used constants in this lecture I will be teaching you the update statement and the most common functions that are used in SQL so we'll start by first you we have to select the database so use Imperium then we'll create a table let's take table customer in which we will add customer ID so we give C ID I will give primary key to the ID then we'll have customer name we take contact number I'll give the contact numbers data type as numeric then we'll take address or rather we'll take City we'll have postal code then we'll take Country Now we will create this table after creating the table we will now insert some values in it so we'll give insert into the table name that is customer we'll add the columns as customer ID customer name contact number we have City postal code and Country then values and now we will insert our data so first we'll take custom ideas 1 0 1 then we'll take name as let's take ABC then we have contact number so we'll give a random contact number after this we'll add a city so let's take burlin and then we have postal code so we'll take a random poster code and now we will add the country so if we execute this query now we will only get one input so let's just just keep adding more inputs in the same format we'll take the second entry we'll take contact number as let's say 456 789 03 [Applause] now we will take the city as Mexico ETF postal code as random and now the country Mexico we'll add one more input and then we'll see this is the third input 103 to that contact number so I give 678 905 and then we'll take the city London after this we have poal code let's give 15 2 three and Country United Kingdom now I'll execute this query and then we'll see how to make changes in the inserted data using the update statement it is showing error somewhere here in Germany we haven't given the Co in Comm so now the quer is executed we will just select start from Custom so as you can see there are three rows with the entries and now we will see like how to select select rather change the inputs in the data so we in the previous lecture we made changes in the table in this lecture we will make Chang in the data using the update statement so let's use update customer that is the table name and then set contact number equals we give random contact number 2 comma City where customer or C ID equals 101 so now this will update the data that is the contact number and the city where the C ID is 101 after running is so it was showing error because we exceeded the number numeric numeric only allows 10 integers or 10 numbers so we exceeded that that's why it give error so now after this running now it has executed the query now again we will select from the table that is retrieve the data now you can see the contact number and the city has been changed first it was Berlin and the contact number was this 1 1919 now it is 7654 and then city is Frankford so this was uh in in the MySQL you can like even arrange uh the table in order if you just click on the uh columns that is C ID the C name the contact number the city the postal code it will give ascending and descending both so now you can see it is in it is in ascending order the C ID after I click it again it will be descending mod this is one of the features of the my so moving on we we can even change multiple records using update like we did now if you want to change one thing you can just do that so like I can also do update customer set postal code equals where let's take country country equals Mexico note that when you are using the numeric or the integer you don't need to give the uh inverted comma even if you do it will work so that's the plus point it has it has executed so now it has been executed so now we will select it from the custom table and we will see if the changes have been made as you can see the postal code has changed because it is an in value it is only showing the zero if I had given 1 0 0 then it would have shown the four four number postal code this was the update query or the update statement now we will learn about the most common or most used functions so before the functions now we will learn about the Del statement so yesterday we saw that with alter table we could delete columns from the today with the delete statement we will delete the data Row from the inserted values so now it has syntax as delete from table name that is customer where and condition so I want to let's say I want to delete the 102 entry that is the ID of 102 so I can write delete from customer where C ID equals 1 02 after selecting this you can see the query has been executed then I run this you can see the query or the data that was inserted with the ID 102 has been deleted the whole row has been deleted so it's not like we can just delete the postal code or the ID for that we have the public query here for delete it deletes the whole row in itself this is the basic delete query you can also give different conditions that depends upon you like where the postal code is XYZ or if you have taken the table students or sales so let's say you have taken the table sales and you give a condition delete from customer or delete from the sales orders where the price is less than 1 lakh or 1.5 lakh such conditions you can give different conditions now we will look into the most used or the most common functions or CL first is limit Clause so what limit Clause does is if now that we have two entries in a table I will add more to entries so I can explain it to you in a better way so I'll just make changes here for so now after running it select the table as you can see they have now multiple inputs so now I can show you the limit CLA so limit boxes it gives you or you can set a limit of inputs or of limit of data lines or data rows you want to view so basically it works like you select or and column name names so that can be uh so so use it so the Syntax for this so the Syntax for this is Select star or you can give different is Select C ID or select C name star is for every column so select star from customer that is the table name and you'll add limit let's give four so now just look at the output as you can see it is giving or displaying the first four table rows so this is the basic use of limit you can also use like select star from customer give a where condition so let's add where country equals J and limit four now because we have only one input or two inputs of Germany it will give both the inputs as you can see it both the inputs but let's assume if we had five inputs of Germany it will show you the first four inputs only that is how the limit Clause Works uh a similar Clause that is used with limit is offset that ISF and what offset does it it skips the number of elements from the like starting order so if I put offset two and limit is three so now what will happen is this query will skip the first two uh data rows and then show the next three data rows as you can see the first two rows that is 101 and one2 was skipped because of the offset clause and limit 3 is given 103 105 107 data that is the remaining or the next three rows after the 101 and 102 data rows this is the use of limit and offset next we have minimum and maximum so by the name itself you can guess minimum is used to take the minimum or the smallest value from a column and the maximum is used to take the biggest value or the largest value so the syntax is Select minimum then we can give column name such as uh we haven't given here much but we can give ID so we'll give minimum C ID that is because is an integer as you you can give as smallest number or as smallest integer you don't need to give it it's not mandatory just select minimum C from customer after executing this we will get the minimum C is the exact opposite with maximum you will get the largest number it's Max C from Custom here you can see it is given the maximum C of 1 now we will take the sum count and average functions so what count does is it counts the number of elements or number of datas that have been inserted for a given condition so for example you can get select count then postal ID poster code from customer as you can see it is giving the count five because we have five inputs in the table and it is giving the postal codes for the those five uh those five data rows now if we add the where Clause where country equals Germany you can see the count is two because there are only two inputs with the country Germany next we have the average so it's easy select AG of c i take because we haven't taken price as a such so C from so the average is 103.6 we can also add where close here so we'll take where C ID is greater than we'll take 102 so that becomes 103 105 and 107 so now we see the average of those numbers as you can see now the average has changed the average is 105 next we have the sum example for the sum Clause next we have sum Clause we have select some have post code from customers so question so now you can see the sum of the postal CES of all the five if we had a condition where let's say the country equals Mexico the S changes so you can see this is the sum for the poal core of the country Mexico only so we have one Mexico here and that's the exact number because it's the only entry for the some Clause example now we have like operator well like operator and the Wild Card operators like go hand in hand so I will take them in the next lecture in that I will give you a preview so what like operator does is you can search numbers or select numbers which are starting from a particular letter letter sorry a particular number or you can search variables or names starting from particular letter ending from a letter or you want Words which have o between them or you have as s in between the words you want those words all that can be possible with the like operator and the extension of like like operator is the wild cards so I will take them in the next lecture thank you if you have any queries or any doubts please type them in the comments we will try to solve them as soon as possible thank you hello everyone welcome back to emperium so this is the sixth lecture of the dbms course so today we will learn the we Clause the and or and not those are The Logical operators in the we clause and the order by statement with the we Clause so till these five lectures most of you will have the basic idea of what is where so it's like when we put a condition while we retrieve data from the group so let's I will show you the example so first step always you have to select a data base to use so let's use Imperium then here we can see the tables that are in the Imperium so I can see the customers table is there so I will will use this table only so first I will select star from customer so as we know this star indicates that we will retrieve all the information that is present in the table so we have customer ID customer name contact number City poster code and Country so now in this the where Clause can be used as Select Staff from where now let's take C name that is customer name c name equals because the C name is in string as you can see here near the cursor we have given the format text or back so basically it is a string we have to give inverted Comm now where C name is let's say YYC semicolon then we run the query and now you can see it is showing the information on the customer YC now this is using the stock condition we can also write select country from customer where C name equals when when we have was KBC so as you can see the country that the customer ABC is from is Germany so you cannot like give anything instead of the it's like the for example the main headings or the titles that we gave to the table that is customer ID customer name contact number City basically the attributes of the table is only like usable in this form so we can write select C ID select City or select postal code Etc now this is like we use C name we can also use select let's say select City from customer where country equals German now you can see because there are two customers that are from the country Germany we have two cities so if we just take remove the city and a St that is the entire information we can see the information of the customers from Germany this is the basic use of we condition so like the where statement is basically adding conditions while ring the data from a table so now we will see the and or and not logic operators so as we know that there are two uh inputs with the country Germany so if we check that is this so now you can see that there are in countries bracket there are two entries means two customers that are from the country Germany what if I had to pick the country Germany and I had to pick the city or the post code so the quy could be select star from customer where country equals Germany so if I stop my at this point it will give both the outputs so like C one01 and 102 because they both from Germany but if I had and City equals bur so now you can see it's showing the output where the country is Germany but it had also added another condition that is the city which is Berlin so it will give the output where the city is Berlin and the country is Germany so and is used to add the conditions in the basic is what we can say now we will see the or condition or the or logic so we will write select star from customer where we'll take country equals Germany or we will take yeah it's okay Germany or country equals Mexico now you can see it it has given me the output for the countries with Germany and Mexico so what the and condition does it like both the conditions should be true so we will get the output in The Logical language or the digital language there is zeros and one where one is true and zero is false so what and does is if both conditions are true then only it is true otherwise it is false so this means if my first condition is correct and the second condition also satisfies the first condition like the statement so it will give the output means when I run this we are getting this country or the output where the country is Germany as well as the city's Berlin so both conditions need to be true so it will give me the output whereas in or when I run it you can see either of the conditions can be true and it will run so if there there is only Germany it will show the Germany country if there is a entry with the country Mexico it will show the that entry also if I put a random country let's say if I put uh XYZ which is like not a country we have not inputed such as country so it will only show Germany so it's not throwing an error because we have used or it is saying that the provided things in the condition from those I have the Germany country in my database so I will show them I don't have the X so I would like just drop it I will not show them because of the or condition if I put and condition then it will throw error because it will search for that entry and it will say even if I have the country Germany I also want the country XYZ so the and and the or has that difference now we have the not logic so select star from customer where is where not country and Germany means we can say s start from customer where not and condition we will run it and you can see the countries that had Germany in it are not visible it is showing the countries that are not Germany or the entries that are not from the country Germany that is the basic use of the not logic like remember that you can and like use the and and or operator multiple times like I can and add one more condition in add I can add one more condition in or like I can add multiple conditions so like I can write where country equals Germany or country equals this or cm equals this or I can do it multiple times so there is no limit to the use of the word and or the word or when using in the like retrieving condition in the we Clause so it's not limited to only two users or three users you can use it multiple times so that is the basic and or and not logic now we will look at the order by uh statement which is used for the retribution data only but in the like you can select it in ascending order or descending order we will select select star from customer and we will add condition that is order by you can give column name such as C ID or C name or contact number I will give C ID and then you will give the ascending or descending so for ascending it is ASC so as you can see the CID is in the ascending order 101 one2 103 for the same for descending you will just say d EC now it is in descending orders 107 105 you can also do it for uh text or strings also it is not limited to integers and Float only so if I give C name and in descending order it will also run as you can see it has given in the descending order as why is the like the lastest like element or the letter in the alphabet it has given y first and as the a is the first so a is at the bottom because it is in descending order if you do it ascending it will be reversed so this is the basic where statement the logic of and or and not and the order by statement additional point is if you are not using the not logic you can just remove the not logic instead of that you can make changes in The Operators that is equal to greater than less than so I told you last time that we have not operator for as this or we can also write not operator as exclamation and equal to so if you're not using the not logic or if you forget how to use the not logic or the syntax of the not logic you can just change the operator from equal to to not equal to it will give you the same output we will check it one time and as you can see it is giving the same output as the not Logics so this is this was the plus point it's an alternative that is it for the today's lecture if you have any queries please comment comment them we will try to Sol all them as soon as possible and thank you hello everyone welcome back to Imperium this is the seventh lecture of the dbms course in today's lecture we will be learning the like and wild card operators the in and between statement and the lisis statement so firstly we will learn the like operator for that I have taken a sample table and have inserted some values in it first I will select the database it is executed and I have run this ex execution of the table and insertion already so I will directly show you the table this is the table we have the agent code agent name working area commission and phone number as the attributes of the table we have 12 entries now we will see what is like operator so firstly like is an operator which is used in wear Clause to search for a specified pattern in a column so for example if I wanted the names of the agent starting with the letter s I can use the like operator in the we condition to get the table for that specifically for that so that is the use of the like operator in it we have multiple options I will go through them one by one so for the first option is to get an answer or to get a data from the table starting with a specific letter so the Syntax for that is Select sta from then table name so we have agents as a table then we have the WHERE Clause so where we will use the agent name because it has variation agent name and then we will use the like operator so we the keyword is like then we will give the condition or the syntax of the light operator like operate like operator it is inverted comma and then we have the use of person sign so which is this sign so this is called the wild card I will get to that later now in like operator we want the names of the agent starting with the letter s so I will write s star or I will write s percentage without with which we will get the required data so as you can see we have the agents which have the letter S as the starting of the name similarly we can also use it as a we will get the data of the agents which have names starting from the letter A which is Alex Anderson Alfred next we have the operation in which we want the agent names which are ending with a specific letter for that is similar it is Select Staff from table name that is Agents where Clause then agent name like and the difference here would be instead of writing the letter before percent we will write it after the percentage sign so we'll write like percent a first we wrote a person now we have person a for the names of the agent which are start ending with the letter a so now we get lucila which is an agent with who has the name ending with an A so this is the second operation of the like operator then the third is it is the operation where we can search for an element which is in the name in between and it can have any position so like select star from agents where agent name like and let's take we want C in the middle of the name and at any position so we will write per before c and after C so we will sandwich it and then we will execute the query as you can see the which have the letter C in between their name so you can see the mech the C is on the second position and in Luci the C is in third position so the position doesn't matter it just detects that if the C is in between the name then it will select the select the data and retri it for us now we have the fourth condition the fourth way in which we can use the like operator is we can select the second letter of the the name so basically we can select the second letter of an agent name should be a or should be C or should be I so we can we want those agents so we can use this syntax that is Select star from Agents then where Clause agent name like operator and then we have underscore the letter and then person so underscore means the first position of that word or the name of the agent or anything so it will skip the first letter then we want to search the second letter I want the second letter to be B and then I will give Star this means I want the names of the agents who have the letter B in the name in the second position after that I will execute the quy and because no agent has the letter B in this second position it will it won't show anything so let's try another letter I'll take you and you can see we have three entries in which agent names have you in the second position of the name so this is how you can find the name of anything with the letter in the second position similarly we have the same thing for the second last position so that is like in instead of last position which is star a we have it for second last position we can go select sta from Agents where agent name like then star U or let's take a and then underscore so which means is the second last position we want a in the name so now I select and run this query so you can see we have this Suba Ivan ramund and other two that is Santa Kumar and Ravi Kumar or santum so we have a in the second last position so this was the way to get the second last position second last position letter or the select the name names of the people with a particular letter in the second last position the next statement has the query which will select all agent names with a starting letter that is given by the user that or the admin and has three characters in length or n characters in length so which can be specified by you only so first we will take for three characters that is Select star from agents where agent name like we have the starting letter I want to take s then I will give underscore underscore which means there are the first position of the letter should be S then the next two positions Define that there should at least be three characters in length of that name and now I will add the wild card and execute the query as you can see we have the agents who have at least three characters in length that is that means three or more so we have the characters so we have the agent names subar and santkumar and the next is we can select the name from the agent names or another like example customer names starting with a specified letter and ending with a specified letter so which has the query or the syntax as select sta from Agents where agent name like and then we have the starting letter as let's take L and then we will give the first operator and then we'll give I as the ending letter or let's give a so after executing this we can see that there is only one agent who has the starting letter L and ending letter A so this is these are the use of like operator now we will look at the wild cards so what are wild cards wild cards are basically these two symbols that is the person symbol and the underscore symbol wild cards are these two symbols which are used in the like operations only so the theory for white cars is similar as the like operator only the difference is in like operator we don't we don't tell what is the percent and the uncore sign so that is basically the while cards coming up next is the in statement so that is inst statement means the it is a short hand for multiple or conditions so when in the last lecture I told you that you can use or Logic for multiple times that is Select star from customer name let's say where customer name equals a or customer name equals b or customer name equals c so in that we had to write it multiple times in this in operator is basically a shorthand matter of that or logic so we can write select staff from Agents where then we will give the column name so that is we will take uh working area for example working area and then we will instead of giving equal to and then specifying the area names we will just go in which is the key keyword and then we will put random value so now you can see there is sanjo I'll will write this and then semicolon and I'll run the query as you can see from sanos there is only one agent now what is the like what is the meaning of the short hand of or so let's say I want to take London and New York also so when I write London and New York I don't have to write it two other times like in the all logic I can just make it comma and I can insert London another comma and I can take New York so now you can see that there are like data or the which is retrieved from the datase with the working area London that is in two agents and New York and San J's so this is the use of the in statement which can use which is the short hand of the or logic there is another way to use it it is the not in statement so it's the opposite of the inst statement in which we just add not in front of the in operator so we have Select Staff from St from Agents where working area it not in and I will insert the same inputs so you can clearly see the difference so now you see that leaving these countries or the areas only the other inputs are displaying so we don't have the sanos in this we don't have New York or London in the following table so this is basically the in and not in operations which are the shorthand methods of the or logic now next is the between operator the between operator selects values within a given range so basically we can select the values which are between a range that we can decide so let's take the example of selecting values which are between some range for the commission of the agent so if we select the range as 0.10 and then 0.13 we will get the answers as Mukesh and then other agents if they have the Commission in between that range so we'll give Select Staff from Agents where Commission and then we have the keyword between we will give value one that is 010 we have the and logic and then another value 0.13 so now all the agents having commission between these values will be displayed on the table as you can see commissions 0.11 0.13 0.12 these are all in the range of 0.10 and 0.13 note that the end values that is the 0.10 and 0.13 are not excluded so they also appear that is 0.13 is not excluded so it also takes the values that are on the end points of the given statement value this was the between operator use it is not that complex next we have ales so alysis are used to give a table or a column in a table a temporary name so in in this we can just like create a new name for a column in the given table when we are retrieving the data so instead of agent name I can change the name to name for a particular time when I'm retrieving the data so the query goes for this is Select I have to change the name of the agent name to name so I will give select agent name then as which is used for the aliis syntax and then Alias name so like the other name we want to change it to so I will give name from table that is Agents as you can see the agent name the attribute agent name which we put in here that is Agent name was changed to name because of the alysis statement this is the basic use of the aliis statement so you can see we have changed the name here these were the topics that we have covered today so if you have any doubts write it in the comment we will try to solve it as soon as possible and thank you hello everyone welcome back to Imperium this is the eighth lecture of the dbms course and in today's lecture we will be learning joints types of joints and Union firstly we will select database to use and in that database we will create some tables so I have created the tables customer and orders and in those I have given three entries each so first we'll see what the orders table look like and now we can see there are three entries and there are five attributes in the table orders similarly for customer there are six attributes and three entries in the customer table so now first what is a join so join is used to connect tables whether it be one table with another table or one table with itself so there are five types of joints those are inner joint left joint right joint cross joint and self joint so we'll see what is an inner joint so as you can see an inner joint returns records that have matching values in both tables so these are the V diagram representation of the inner joint so we have table one we have table two and the common part that is between the tables is represented in the inner joint we will see how it shows the output this is the query for inner joint so in this query we are selecting or retrieving order ID from ORD table customer name from customer table and we have in ajoint orders and customers where orders customer ID and customers customer ID should be equal so after running it we can see that there is only one entry that is equal in both so so it's only showing the first or the singular entry that is common in both the tables now next we have left joint as you can see left join is the table or is the join in which the entries of the table one and the common entries from table one and table two both are represented or retrieved from the database so left joint returns all records from the left table and the match records from the right table we will see this query now we have all the names from the left table as well as the common name from the left table and the right table see that you cannot see the order ID for the first and the third entry because they are not in the orders table so they don't have an ID specifically but the second entry that is common from the order table as well as the customer table has both customer name and Order ID next is Right join well right join is the opposite of the left join where we take all the entries from table two and the common entries between table one and table two so it returns all records from the right table and the match records from the left table now as you can see there are no names for the first and second entry because the order ID that is the entries from the order table are only present in the order table and not in the customer table so the first two entries does not exist in the customer table but the third entry which is the common part in both customer table and orderers table has both customer name and Order ID now we have cross join cross join is something that like gives every entry that is present in both the tables so we have entries from table one we have entries from table two and we also have the common entries from both the tables so we will see we have this query now you can you can see it has given the same name multiple times because we have the entries from the left table those are three entries we have entries from the right table ERS we have three entries and the entries that are common we have those entries so that's why the names have been repeated or the entries have been repeated now next we have self join so here self join is not given because self join acts on a single table only so we are connecting customer table with customer table it's self that is how the self join Works in this we have just given another name for the customers table attribute that is a do customer name as customer name one which is aling we learned that in the last lecture and next is b. customer name as customer name to again then a. city is just the output we want so you can see in this table we have the customer name that is we have given a point customer and B Point Customer name and we have given a point City so it's the same table but we are writing it two times in different ways so now we will run this query and here we have used the order by clause which basically shows the order we also have learned that so now you can see we have the customer One customer name two and then City why these are showing because we have written that we want the cities from a city and b. City to be same so the similar cities data should be presented or outputed from the table now for Union I have created another the table supplier I have inserted three values in it or three entries now we will see Union so what does Union do so basically Union is used to represent the values of multiple tables together so we have the customer table and suppliers table and we have ordered by the city now we will see the output and you can see there are five outputs or five cities that are in mixed with customers and suppliers which means both table cities we have taken here and you can see that there are only five cities but in the customers table there are three entries in the suppliers table there are three entries it is giving five entries because in the customers table there are two entries with the city Mexico df so because of that the what the union operator does is it only gives the default values it does not duplicate the it does not give the values that are duplicated or are present two times in the table for that we can use Union all instead of Union so you will see the difference is that now we have six cities so you can see that Mexico df was there two times in the customers table but because we used Union it was only showing us one time and because of Union all we can see all the repeat cities also now we have Union with wear Clause so now we can select the cities giving a condition that the cities should be from Germany as you can see we only have Berlin from Germany so that is the union with we Clause that is it for today's lecture if you have any doubts you can and comment them we will try to solve them as soon as possible and thank you hello everyone welcome back to Imperium this is the ninth lecture of the dbms course and in this lecture we will be studying the group by statement the having statement the exist statement which is used with where clause and the any all statement which is also used with the wear Clause so firstly I have created a database it's named practice just run it so remember that every time you open the workbench you have to run this specific database that you are performing the queries in so if I just went in this SQL file number seven I I would have to run this database because because these tables that I have created are in the database G with whereas these tables are created in the database practice so remember to do that to mitigate any errors now there is group by so what is Group by and why is it used so Group by is a statement that groups rows that have the same values into summary rows like let's say find the number of customers in each country so if you can see that there is this Germany this Mexico Sweden if there are multiple customers if there are multiple inputs of the same country it will just put them together and show their count so like let's say if I print count and Country it will show count as the number of times the country has been like used in the insert and it will just tell which country and how many counts it has been repeated for different uh customers or let's say orders Etc so this is the table this is customers table I have put Auto increment that's why there is no numbers here the first should be like 1 2 3 or like uh anything you want because I have put Auto increment there is not that input of the integers showing there now I'll just uh run this code this is Group by country so we have select count of customer ID that is count the customer ID and comma country from customers to where Group by country so it will Group by the country if you put Group by customer it can also do that let's it is used in orders table like orders and supplier table where uh supplier is common for multiple other people so like let's say if we take zato so zato is a supplier and we the users are different different like people who are ordering food from the same supplier so it can also use that like supplier count or it can use how many times a same supplier has been used by different users so it's not just for countries group byy is used for many different tasks so now if we run this code we can see that the custom account for Germany it is only one so there is only one customer from Germany for making Mexico there is two UK is one and Sweden is one as you can see here Mexico has come once and here it is come again and for other three inputs it is only once so that's why there are one one and Mexico is two so now here it's the same query just I have ordered it like order by count of customer ID and DC stands for descending so so we should get this output so you can see descending by count that's why count to descending means highest to lowest so that's why two then 1 one one if you put ascending there it would be it's the same like Mexico should come at the last and the three inputs would go up so like if I just put ASC here that is ASC if I run this you can see that Mexico is the bottom because of the count of the customers so that is lowest from lowest to highest next is the having clause or the having statement so what Hamming does is having Clause was added to SQL because the we keyword cannot be used with aggregate functions so what are aggregate functions we have done it it's the average sum etc those we have done it in the previous lectures the aggregate functions and one like very important notice or note for having Clauses that having cannot be used without group so if you are not using the group by statement you cannot use the having statement as well it will throw an error so for that we always require the group by Clause while using the ham statement so if I run this query so it has like I'll read the query that is Select count customer ID comma country so we are like displaying the customer count and Country from customers table and group by country same as this and having count customer ID is greater than five so we want an ID that is greater than five it will only show for the customers ID that are greater than five so less than here we only have one and two so I guess it should not show any country as you can see it is not showing any country only if I like add values in it let's just add let's say we add the Mexico's value twice I just copy this I'll go this paste and then so now I have inserted three values or three inputs in the same table with the country Mexico I will do it once again because it is only five times and we are asking for greater than five so I'll run it again so now we'll just see how many inputs are there in the table for that we will write Select Staff from customers to now we'll see the number of inputs as you can see see this is the auto increment that I'm talking about so 1 2 3 till 11 so there are 11 inputs and if you count that Mexico is come a lot of times so now if we check it should show us Mexico Mexico's input because it is the count is greater than five so let's run this query if I run it you can see that country is Mexico and the count has come eight times that means the country Mexico has been repeating eight times that only if we just do it less than five it should show us the Germany Sweden and UK so because they're less than five it is showing that count that is how the having Works similar to it is similar like wear Clause just that having is used with Group by and where is not that compatible with the group by statement so that's fine now I have just added the order by clause in this so this won't like work this time if we have to let it work because we have only one country that is exceeding the limit five so it will only show this I guess let's add let's make changes we'll do just Germany for each one first it was only one time now if I run this again now the Germany Germany country has been repeated four times if I run it again so 4 + 3 again seven times to check that I can run this so we can see the country Germany has has been added and if I check now now we can see that Germany is there 10 times and Mexico is 8 times think it lagged for a bit that is like did not like see the input it did not calculate it that's why it show error first but now you can see that the German is there 10 times and Mexico is eight times this is how the descending and if we put ASC in ascending so Mexico would be top and then Germany would be below Mexico so this was grouped by and having with order by so now we will go to the next that is the any all any clause or all clause and then exists Clause so I have like as I said when you change the file you have to rerun the database so that you don't don't mix up the customers or the tables that have you have created cuz if I run this table that if I run the create table products and if I select query here so it won't work because in the practice table practice database there is no like products stable like the one with the these inputs so this product table has a different input and the tables product table present in this one this product table is different that's why you have to change your database when you select a new file now I have run this database and then next is any and all so any and all are the like small tags you can say what they do is the n all operator allows you to perform a comparison between a single column and a range of like a single column value and a range of other values so like like you can see that here in this query you are comparing the product ID from the table products with with multiple product IDs from the table or the details so what this query is like saying is we are like displaying the product name from the tables product where the product ID of the products table is equal to the any operator and what the any operator does is it Compares like in the any operator this is the subquery now this so that select product ID from the orders detail like order details where quantity is 10 so there is like multiple conditions here firstly the condition is the quantity Where We Are selecting the product ID from should should be equal to 10 and then the second condition is this like the any operator this is the second condition where product ID should be equal to any product ID that is from the table orders order details where quantity is equal to 10 so we should get an output which has the same product ID which is equal to the which is equal to the product ID from the order details so let's say that this product ID I'll just cut it let's say it's ID is three the three is the value so this value should be equal to this value so like there are multiple condition in this statement so you should like actually Focus here because these type of queries really can and make like you know hectic for people who are going for back end and these database queries so what it means is firstly these IDs should match okay what I'll just break it down for you let's say this is a separate query so that is Select product ID from this so what this query does is it selects all the product IDs that have the quantity 10 okay that we got to the side so what it says is this one says that all the product IDs that have the quantity equals to 10 this is what this query does and then what this query will do is it will take all the all these product IDs the IDS that are coming from this table or the this query and it will check with this product ID so that let's say if this product ID's value is five so let's in in bracket I'll say that it is five okay the value of this ID is five so in all the IDS that these have given if I just run it it won't R it's because it is a cut down query yep so let's assume that the answer we will get would be ID number one or four then five 8 and 10 so these are the ID numbers that we will receive from the product ID this query from the order details so these all IDs have the quantity 10 now we know that the product ID the value of the product ID from the product table is five so we will compare that is 5 equal to 1 so we have the equal to sign and any we Compares so is 5 equal to 1 no so it is gone that is not correct is 5 equal to 4 no is 5 equal to 5 yes then it will print that single value that this ID is equal to 5 this side is also equal to five so now I will print it that is how the any and the all operator also works they're very similar so now I will just run this query okay it is showing error because I think the tables yes it is showing error because of this this is like not the correct syntax I was just telling you that let's assume the value I'll just remove this and now if we run we get the answer so these are the product IDs that or product names we have got I will again tell you because it is quite uh complicated and people do like miss it and Mi mismatch it is better word for it so the answer is getting any seed syrup we can see this is the syrup and we can check what is the first product ID so we'll take product ID it is three that is from the table products and Order table in the order table product ID is here you can see the product ID is three product ID is three and the quantity is 10 that's why we are getting the an syrup also here we are getting Chef she Chef Anton's seasoning and there is the product ID four and if you go down sorry uh it's the fifth one the chef anon's gumbo mix so it's the id5 and if you go down we can see we have product ID five you can check it here first second third third is the the product ID and fourth is quantity so if you see third is product ID that is five which also matches the product ID from the tables products and the quantity is 10 so because both the conditions are true we are getting these outputs so this types of these are called nested queries you can use nested queries with where itself like select star from students table where marks equal to then select star from select marks from uh teachers table where subject equals to then select subject from subject table etc etc so nested queries are the one of the complicated part of the dbms then this was the any query then all is the same any and all operators both are similar like if I run this it will show the same output so any and all are similar next we have exists so this is one table that's suppliers table have some values that have inserted and now this is easy to understand because we are like displaying the supplier name from supplier table where exists means where it is present that select product name from products this is the products table we are taking product name from products where now this means now the first letter is the products this means the table dot supplier ID means the column name so note this is the table name dot this is the column name similarly this is the table name and after the period or dot this is the column name so what we are basically checking is we want the product name from products where the supplier ID from the products table is equal to the supplier ID from the suppliers table and so we have given an additional condition condition that is the price should be less than 20 so now I will run this query we can see you have only one uh supplier that is like it's not because like only one supplier has price less than 20 but it is the only supplier which has the same ID in both the tables like it has the same ID in products table and the suppliers table so that is why it was it and you you can say like where is the supplier ID in this table it's because I have used auto increment for the supplier ID that's why you cannot see it basically it means that exotic liquid is one New Orleans is two grandma is three so that like that it's number wise so that's why similarly this is the query we have just changed this part instead of the less than operator we have used equal to and if you run you can see new orens is the similar because it has quantity equal to two and the ID match in both the table this was the exist clause or the exist statement I hope uh you have understood this like I have tried my best to uh tell you or to explain you the query itself not the operators like any operator they they are easier to understand but the queries they are used in are mostly like on the difficult side because many people struggle with nested queries these nested queries like using select and where like condition in condition in condition that type of people uh are struggling with that's why I tried my best I took like I think I took six to 7 minutes to explain this single query only but I thought it was important because leaving it just like that I did not feel it right so that was it for today so if you have any doubt regarding to the previous lectures or this lectures you can just comment and we will reply as soon as possible if you have any inputs or if you have any suggestions you can also type that in comments we will give them a look and if we actually like like them or we think that yes we can improve this we will also Implement them so thank you and this was it for today's lecture hello everyone welcome back to Imperium this is the 10th lecture of the dbms course and in today's lecture we will be learning the insert select query the case function the null functions and the procedure so first I have this database practice is I will now select the database I will run this query to create the table customers then I will insert these values in the table now we have another table suppliers I will run this also and I will insert the values in the table suppliers so now firstly we we have the insert into select function or the insert into select query so what this does is this statement or this function copies the data from one table into another table so another existing table in this is my SQL in the SQL there is the select into function what select into function is does that it cop is the data from a table to a new table so it creates a new table but in MySQL there is no select into function that's why there is directly insert into select function so you can see the query that insert into customers then the standard what are the elements of the column names of the table we have customer name City and Country then select supplier name City Country from suppliers so we are taking these three entities or these three columns from the supplier table and inserting them into the customer's table so you can see that the supplier name will go into the customer names column the city name will go into the city names column and the country name in the country names column so first if you like check the select start from customer that is the entries that are available in the customer table there are only five entries you can see them that there is Alfred then Anna then Antonio Etc now if I run this query these entries from the supplier table should go into the customer table and only these three elements should go in there that is the name City and Country the ETC the address or the contact name or the postal code that won't be copied so if I run this and then again I run the select query and you can see we have exotic liquids from here we have New Orleans we have Grandma Kelly's Homestead so you can see that only the customer name the city and the country has been updated in this customers table with this help with the help of this query you can you will say like what about the customer ID it is auto increment so you can see that in the customer table the customer ID I have kept it auto increment so it doesn't matter you don't have to insert it like you don't have to write it while typing the insert into query so you can see that we only mentioned these three columns so that's why the contact name address and postal code are showing null similarly we have then now we have the same query but we have included all the columns that is customer name contact name address City postal code content now if you just select it run and then again select country we can see now there are new these are the from the 13 these are the new inputs that is the Exotic liquid we have contact name then address then City then postal code then country first we had only the three inputs because we stated that in the query you stated here like select when you say select it means you have you only select these columns that are stated here so we only selected three columns in this we selected all the columns that is it if you wonder if like this part of the code like does any effects or does it affect the code in any way it does not it just shows like what are the column names are in the table's customer that is it it's nothing uh like it does not affect it in any way if you remove it it won't affect the code then this has a condition this last query for insert into select query as condition that we are again taking the three columns only the supplier name City and Country from suppliers where the country is USA so we have added a condition here that we don't want all the inputs we only want the ones that have the country USA so after running it and then checking the customers table again we can see only the USA ones have been added those are the two US USA parts that is New Orleans and Grandma home student now next is case the case function or the case query you can say that it is used like a switch case like you can relate it to the the C C++ other languages we have switch case in that so in C what we do is we just like take an firstly we we derive a variable let's say like we take character CH and then we give like input Sprint this or enter enter this scan if all that and then we go switch brackets circular brackets CH and then curly brackets to start it and then we just type case one case 2 case 3 case 4 all that so whatever the cases are this is like we do in C language but in this database or MySQL it has another syntax basically what it does is it has multiple conditions so like it's like an or statement multiple or statement so when you select select star from customers where this this or this this or this this instead of typing the or again and again you can just use the case function so what it does is it goes I have taken this table then this database again now we have all details table and I have multiple inputs in it so here you can see the query is Select order I quantity then case so what case function does is it is like a efficient way of using the or operator so it will first check if quantity the when means if quantity is greater than 30 then you should print this output if quantity is equal to 30 then you should print this output so you can write this query similarly like select all ID quantity then where quantity is greater than 30 or quantity is equal to 30 or quantity is less than 30 so instead of writing the or or or operator it just like elongates the query and it makes it confusing so if you have any error in between it is hard to find but in the case function you have in single single line each query has a single line so we can just use the case function and then the end as is important like it is the part of the syntax so end as what end has does is this function when we write then and give any output we have to give a column name to it because it will create a new column for that like answer that you have stated here or fixed here for a particular outcome to be entered in so for that we are creating a call quantity text as a new column in the orders table only so if I do select order ID quantity case so first case is when quantity is greater than 30 you should give the quantity is greater than 30 if it is equal to 30 then quantity is 30 else the else statement is the quantity is under 30 so like if these don't if these two conditions don't work or they are not applicable that means if the quantity is not greater than 30 or equal to 30 the two conditions have been null and void and else is like the default function from the switch again in the C language there is this case 1 case2 and then at the last there is default function in default you can just write uh not a valid answer not a valid option or Etc like that in this we have the else you can also write other questions like it's not only used for the greater than less than functions it is also used for another things so like let's say if I consider like select star from this I use the like operator and I printed like a star so I want from I want a name starting from a or ending from a and then I put conditions here like when like Star a print this the name starts from a if a star name starts ends with a or starts with a like that case function has many uses now I just run this and you can see for each order ID and quantity these two tables there is another new column that is created like we created it here in the end as so quantity text we get the answer like these answers for the each entry so if it's less than 20 the quantity on this 30 if it greater than 30 the quantity is greater than 30 and if it's 30 then the quantity is equal to 30 so that was the case operator of the case function now we have the null function so what is a null function like null functions are those like when I showed you here prior here so you can see these are the null inputs it is used for like these types of inputs the null function is used for these types of inputs so now if I go here just run the database query then now I have already created these tables so now I can just do the there are four functions first you can see if null colx isnull and nvl so these are the functions I have taken all of the functions like these consist of SQL functions also because in the MySQL functions there is only ifnull and colx so for MySQL there are only these two functions these two are additional ones for the SQL prompt so now if I and they work very similarly so what we have done is I have taken a table I have inserted three values I have put one unit so null in it and what this query says is it wants product name and unit price into stock that is unit stock and if if the units order is null then what it will do is it will select units order that is the Value Plus 0 so comma means plus it will take plus Z so when it is not null what the answer would be product name unit unit price into unit stock that is let's say for this entry we have first unit prices 10.45 or 10.45 it will be multiplied by the addition of units in stock and units on order so that is 10.45 into 31 that will be the output but when we go here it cannot do that because it is there is no entry in this box you the null means there is no entry so what it will do is that is unit price is 32.5 6 will multiply with the addition of units in stock and units on order so 23+ null is not a thing it cannot solve that operation because it is not a integer number or it is not a mathematical number that's why we is if null the units on order will be turned into zero so instead of the null in in the operation when the like database or the terminal is doing the operation it will count the null as zero so what the equation would become is 32.5 6 multiplied 23 plus 0 instead of null it will become zero if you run the query you can see that there is the output of the multiplication of what we have given here that unit price into the addition of unit in stocks and units on model that is the output similar is the Coles is null and N they will all give the same output they will all give the same output if you just see similar output see in this okay so you can see that the is null and nvl are not working because they are a part of SQL functions and not the my SQL functions so you can just add a note here that they are part of SQL functions and not MyQ functions now we have the stored procedure so like what is the use of stored procedure and why was it made like why does it have so much gravitas in the dbms language so like what a stored procedure is like it is a prepared SQL code that means we have a code like this code if we have create or insert or let's say select code we can create a procedure and we can use that code again and again you mean like you can say we can also use this code again we just have to select and run it that is true but this is for the MySQL workbench the people who do codes in terminals they have it hectic they can like go up and they can re rerun the code but stor procedure makes it easy because if you just check here this is my database this is the stored procedure tag now these are already created if I just go here on the wrench icon I can see the procedure so this query that I have created like it's a single line query but what I can do is when I go here I have to just write this like call and the procedure function name so I just have to call and then get mered student I can run it again and again I just have to call this function so it is like a fun procedure is like a function in another languages that is the like most useful part of the dvms so if we have to like if you have to create a new process procedure in SQL what you have to do is go in the database you are using just right click on the stored procedure then create stored procedure here you will see that there is a difference in the definer or etc those are the limits Del limits they put it automatically what you have to do is just let's say I just take the same code I'll copy it print it here I just have to give a name this a new procedure you can give another name so instead of this I will just give uh example and then I can just apply you can see the button apply I just click on apply now we will see that PR use practice that means it is using the database practice then there is drop procedure if exist means if there is a procedure that is named example it will drop that and rewrite it and create this procedure that is new procedure then we have the D limiter we are again using the database practice that means calling it then we create the procedure begin this is the code we have given this code then end and the D limiter also ends and we just give apply it will finish the process and now we have a new procedure example if it doesn't come right away you can just go here and just type refresh all then it will refresh and show the new created procedure and as you can as you know if you type on the rench you can see here this is the use of procedure I highly recommend using procedures in most of your codes like even if for insert query you can use procedure even for create table you can use procedure and mainly procedures are used in like the more like the vast data set let's say we have to enter a whole database of the employees so we have the insert query we have select query we have uh conditions where we want like these Department people should be listed under this thing etc etc the pro procedure is one of the most important topics in SQL so just remember that and note that so I highly recommend practicing typing or practicing your procedure function so you just take as many as example codes and just try to connect them with procedure with yourself so that was it for today's lecture if you have any query you can type that in the comment section we will reply to them as soon as possible and if you have any suggestions we will also go through them if we find them helpful we will make those changes as well thank you hello everyone welcome back to Imperium so in today's lecture we will be going through a project which is the student management system so in the previous lectures we have covered various Clauses query statements and the important statements such as database create database that is use database so I have this small project and I have divided it into sections so it would be much easier to understand in the first section we are creating the database and also using the database so first we have the query create database student management which will create a database named student management and the Ed query means that we are currently using or storing the data or the queries that we are performing in that specific database so use student management means all these queries will be stored in the student management database second is section two that is create table so in that we have created three tables that is the student table the courses table and the enrollments table now in student table there is ID that is student ID there is name email and date of birth first ID we have given the data type int and we have given Auto increment which means that it will give numbers in the incremental order that is natural numbers in in the incremental order as we insert the data into the students table so we won't have to insert the IDS manually and the primary key as we all know it is a combination of unique key and notal key what primary key does is it does not allow same interest in a table so if you put same it IDs it won't allow this second entry because it would be a copied id id or the ID would already be existing in the table because we are using the auto increment there won't be a chance of that error next is name I have used Ware but there are also options you can use text that is text text data type or the C data type there is not null that means name cannot be nothing like you cannot leave the name just blank so that is the Nal now there is unique and Nal now you may ask that primary key is the combination of unique key and Nal key so why have we not just written primary key here also so the thing is in a table there can only be one primary key that is the important point that you can only assign primary key to one variable only that is the we have assigned it to the ID variable so we cannot assign it to anything else CU it won't be valid it does not allow that so that's why we have used unique and not null separately so that emails are also unique and they are not like null means nothing null doesn't means zero null means nothing so if you leave the email blank it will not allow it same with date date of birth date is the data type for any date that is in the format of year month and day next is the course table in that we have courses ID same Auto increment primary key again we have the course name we have description so you can see the text data type can be used Vare can be used here as well now there is enrollments now that is ID that is enrollment ID so number of enrollment that is first enrollment second third like that in that we'll have the student ID we'll have course ID we'll have grade again you can see the third type that I mentioned that is the character type foreign key we are giving student ID foreign key because we have already an ID student ID and you can see that the naming or the huh the naming is not same like here we are writing student ID here we have just given ID so it doesn't like give an error it allows it so that we are just taking the ID variable from the student table and we are stating it as student ID in the enrollments we couldn't use ID for both because it would Clash at both the elements would have the same name then so that's why we have deferred them with student ID and course ID we have given on delete cascad we can also give on update cascad it's a good practice so what on delete cascad does is it it when you have a parent and child table and if you try to delete something from the parent table it does not delete or update that specific query or statement because the reference is given into the child table so first you have to delete delete the child table and then you have to delete the entry from the parent table which is just hectic and it just increases your work so if let's say you entered your name wrong while inserting and you wanted to delete that but your name is again or your ID is used in the enrollments table you would have to delete the entire enrollment stable and then you would have to delete the students table make a entry that is the entry from the students table so that is just extra work so that's why we we use on delete cascad and on update Cas cascad now the third section is insert sample data now we all know insert into then table name and then if you don't write this it does it doesn't matter it's like considered a good practice if you don't write this it doesn't matter it's just for the understanding of the programmer that's it then we have the insert for courses and insert for enrollments so this is the now you can see that there are only two entries because for this the ID enrollment ID is auto incremented so it will give one one for here two three here so and these IDs are for the this is the student ID for the first enrollment course ID for the first enrollment likely I student ID for the second enrollment and course ID for the second one just like that now the crude operations now you you might say that what are crude operations there was no mention of crude operations in the previous lectures so crude is just a acronym for create read update and delete so worry not you already know these operations c means create R means read for read it is the select star from so don't get confused there there is U that is update and D that is delete so now we have select start from that is read then we will take s this is name as this is aliasing so s do name is s we are giving student name as s do name so that is just aliasing nothing else the s. name means that the this is is the table you can say and this is the variable and we are giving s. name as student name same with c. name as course name now this is the table enrollments e student s on this is the query we know the joints there are also four types of joints if you recall you can also type them in the comment section so you can prove that you have seen the lectures and it would make me happy next is adding a new student that is giving a new entry this is insert into student now this is student grade updation so that is for different courses you can update students grade and this is the where Clause that is where the student ID is specific ID and course ID specific ID you you know this all the queries and clauses so I believe it would be really easy for you to understand still I'm just going step by step so I'll just clear if you have any doubt it would just clear you and at the end there is the delete statement which will delete delete from student that is delete an entry from student where ID that is the student ID is some specific number so I'll just run the code first we'll go create database it is giving error because the database is already created then we'll go use the use statement you have to use use always like if you just close the comp like if you close the app that is the MySQL workbench and you open it again the database would be there so you won't need to use this query again that is the create database but the use use and the database name that query you have to use because it needs to render and it needs you to specify which database you are choosing now or using now because I can use the database GD or I can use the customer demo database so it wants or it requires you you to use the statement always so I'll run it now it is now the compiler knows that we are using the student database student management database I just create these tables okay so now again you can see error because the tables are already created if you want to check your tables s procedures functions you can know that there are the tables in this you can also see the columns columns in say what are the main inputs that is the ID name email etc etc that is this is for the course that is ID name description index indexes means what are the keys used so primary keys used there is foreign key have you used any triggers no foreign Keys No foreign Keys it will show you for the enrollment table so in this you can see there would be foreign Keys you can see there are for foreign Keys just like that so create table is already run now I believe that insert are Al also done so I'll just go here and select this query that is Select I'll run it so yes the inserts were also there and this is only showing two elements because I guess there is this delete from students that why I'll just run the insert query again it will input like extra characters nothing else this one now after this let's say insert into this after the select query huh now it is showing duplicate because you already have it like if you do this and select it there is already the email Alis example.com in use that's why it is showing error like uh you can I'll just drop the database and run it again as it is giving errors so now after doing this just use this and now we can like it will work smoothly now because there were already entries it was giving a bit you know problems so now you can see all the queries are uh running smoothly so I'll again create the tables so these are the three tables we have created students courses enrollments now the insert query is so these are there are two examples in the insert that is John and Jane so in the students these are the two students again there is mathematics and science as the courses and there are three entries in the enrollments table so that is three entries for let's say different subject or like now onto the excuse me now on to the crude operations we have the select query and now you can see there are three inputs these are the three inputs that the James Smith has chosen mathematics as the course and grade for the grade he got is a and for John do in mathematics he has gotten a and in science he has gotten B now we will add new student so we added a new student again if we run this now it is not showing it here in this table because we have added it into the students table so if we just give Select Staff from student there should be three entries so you can see John do Janes Smith and Alice Johnson this is the new entry that has been added into the students table now we can update the grades so I want to set the grade A+ instead of a so the student ID one which is for John do and Co 2 so in Co 2 that means science John do had b as you can see here he had the Grade B and I want to change it to A+ that is is why I would use this query after this if I again check this query it should show a A+ yes you can see in science he has gotten A+ so that is the update query and now deleting a student record that is let's say some student has passed out of the college so just to like clear the memory we can just delete the students records so I want to delete the student from id2 we'll just see who is from who is on id2 that is in this table so on id2 that is Jane Smith and if we delete this record and run this select query again we would only get the results of John do as you can see we only have his results because we just deleted the Jan Smith inputs so this is the small student management system this is just the back end with this integration of fronted is optional like for student project you can just do this like similar type of projects there is hotel management then there is Hospital management system like the bed working or the patient name appointments that comes under Hospital in hotel management it's the menu reservations Etc one other good uh system system would be Railway management system there are reservation for tickets the seats number of number of seats passengers all that so there are many Management Systems you can do project on any of them and if you are capable you can also add the front end so most common ways to use MySQL that is back end with front end is the language PHP and Java so for Java there is jdbc that is the Java database connection so you can use those two language to integrate the back end and also make a front end for the project so that was it for this video if you have any doubts you can ask ask them in the comments and thank you for watching