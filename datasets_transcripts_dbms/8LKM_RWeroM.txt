Hello friends, Welcome to Gate Smashers Let check the schedule is conflict serializable or not I've uploaded last video In which I've told that how to check that given schedule is conflict serializable or not So please you check the video once and link of that video I've added in a description box so you can check it from there So here I've a schedule Let's call schedule by name 'S' and in this schedule there are 3 transaction T1, T2, T3 and obviously we're talking about parallel transaction and in parallel transaction I've to check that is this schedule is conflict serializable or not what we do for that we check by making precedence graphs If I make precedence graph of this Than T1, T2, and T3 We took three transaction 3 transactions are they it means there are 3 vertex in graphs Now what I've check is conflict pair Conflict pair means if I talk about Read(A) So who is the conflict of Read(A) is Write, means read has fight with write So read conflict is write so check write is there in T2 Yes, there is write in T2 So from T1 to T2 because we checking from T1 and found on T2 So 1 line from T1 to T2 so draw a directed line from T1 to T2 Same way check that does T3 has write Yes it is there in T3 also So from T1 to T3 also I got conflict So it means its work is over Write (A), second operation is W(A) Who is the conflict of write of A is read and write both But remember in the case of write Write (A) conflict is Read (A) and Write (A) both are So see Write(A) conflict here it is, we got it from T2 to T1 So from T2 to T1 I got it here Even it is from T2 to T3 From T2 to T3 but you don't need to draw further because if there is loop in your precedence graph or cylce came so you can say that it is not conflict serializable schedule So  here Conflict serializable method is saying that no it is a non conflict serializable this gave its output It has given its answer that it is non serializable means it is not serializable  because as I can see there is a loop T1 to T2 and from T2  to T1 So there is a loop because of this loop I can say that it is non conflict serializable according to this But if I've a graph, any graph there is no loop inside it means there is no loop or cycle if there is no loop or cycle then we say that yes this schedule is conflict serializable If there is no loop it means that it is conflict serializable and if it is conflict serializable so it's serial schedule must be existed Means we'll find sequence that T1, T2 and T3 or T1, T3 or T2 any schedule or sequence I've it will form any sequence because it'll from serial and if it is a serial so it means it is consistent also it is consistent also So acid property's consistence property it follows but when, when this hierarchy you have to follow when there is no loop in graph If there is loop in graph as it you can see here So loop in graph So we can call it non conflict serializable non conflict serializable means that it is non conflict serializable so isn't it serial means is this serializable or not ? So I can't answer this right now Conflict serializable says that if there is loop if loop is there Now I can't do anything and I can't answer this now that it is serializable or not but if there is no loop if loop is not there then yes it conflict serializable Yes it is serial and yes it is consistent But if there is a loop Then I don't have answer, Now I don't know that it is serializable or not So here We'll use second method View serializable method So this is a reason Why view serializable method is used If anywhere it is asked that that why we use view serialibity So this is the best example of this you can show this to them Now let's check okay if it is there is a loop in it so whether it is serializable or not because it is non conflict serializable So is it serializable, I don't know that as answer here is not coming Now we'll check this In this I'll bring little change in schedule There is no use of graph now I'm rearranging it a little How, let's see T1 T2 and T3 T1, T2, T2 we've taken same transaction Read(A) Write(A) This Write(A) I'm writing here Write(A) Write(A) see I've change the position of write(A) This write(A) I'v written above and this write (A) below Now see this graph is a serial schedule first T1 will finish then T2 and then T3 but we'll check that is this with each other means conflict serializable with each other or you can say that does it match with each other or not so see If I take value of A intially A value is 100, in database value of A is 100 Read(A) what read(A) will do, it will read the value of A as 100 read as 100 value so first what will come This write came and what we call this blind write means it is blind write that A=A-40 Let's say what this write perform A= A-40 So when it perform write(A) so what changed in this value A value is 60 This Write is saying that I'll do A=A-40 it is also saying that I'll also minus 40 value in A When this minus 40 value So this blind write which was 60, so from 60 40 is minus so output was 20 and after this came this write and this write says that I'll do A=A-20 you only need to remember these operations This is saying that A=A-40 A=A-40 A=A-20 So this is  A=A-20 so what is the value of A is 20 so 20-20 so final value of A is 0 Not this, we'll as it is apply here This write(A) I've kept above and this one below and this write(A) position is fix A value intially is 100 It reads 100 This write(A) this one and this write(A) is  A=A-40 So what it does with the value it make it 60, it minus 40 So this write(A) now came here this write(A) came here and it write  A=A-40 so this also does 60-40 so value that is left is 20 This write(A) and write(A) is same and on the same place so this write(A) is  A=A-20 So this write also A=A-20 So value of 20 is finally equals to 0 So in this what was final value of A was 0 and in this also output was finally 0 So both might not look equivalent but borth are equvilent Both are equvivalent Both are not equal,it is not same as you can see but both are equivelent But is this conflict equvilent ? No It is view equivilent this is view equivilent So in both, final output is generated by this Write if you do this write and this write up and down then there will be no problem So I did the same but finally write was done by this one  and here also final write is done by T3 here also T3 and here also T3 I only kept T1 and T2 write up and down so it won't affect much and now if you see properly if you again make graph of this so T1 T2 and T3 T1, T2 and T3 Read(A) conflict Write, where it is here T1 to T2 T1 to T3 graph will draw a line Write(A) Write(A) conflict write(A) T2 to T3 ALready means you don't even need to make graph of this also you can check it by seeing only because firstly T1 will exceute then T2 and then T3 Means this graph which was saying conflcit serializable Conflict serializable was saying that this schedule is not serializalbe But view said I'll also check  This is serializable so that's why whenever this questions comes and you check conflict serializable conflict serializable is a easy method to check do that but if doesn't have loop means it will give output if there is loop in it So this is non answerable then who'll give answers who will View serializable will answer This thing you've to keep in your mind So you can check view serializable directly Either first conflict and then view How view work on that I'll make further video but here I only want to tell What is the introduction of view or why we need view serializable So on this schedule conflict serializable method failed But view serializable says that it is serializalbe I'll check, I'll give the answer So this is how we check the view serializable But what are conditions and rules are in it that we'll discuss in further video