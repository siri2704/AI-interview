hello everyone today in this video I'll be discussing the second model of DBMS and in this module we have the following topics and I'll be telling which topics are the important and how do you remember the queries and everything in this and if you watch this video till the end easil you can score more than 80% marks so don't miss any of these concepts watch till the end and if you have any doubt you can bring me on Instagram here okay so without wasting my time let's get started before starting please do like and subscribe it helps make more videos like this so the first topic is relational model concepts okay so we'll understand what is relational model concepts okay so relational model represent the database as a collection of relations okay relation means what something related okay two things are there it is related in some manner like father and son father and son there is a relation between them so a collection of such relations is called as the relational model okay we'll be seeing what is a relational model each relation resembles a table value so all the relations we store in a table okay and table consist of rows and columns and each of these cells will have a value now in the terminology of DBMS we will be representing the rows as double column as attribute and the table as relation okay now the values inserted in each cell can be chosen from a domain of values domain of values means what a group of values a domain of fruits or a domain of vegetables domain of phone numbers so from there we'll choose those values and we'll be storing in these cells okay now domains attributes tpples and relations a domain is a set of atomic values okay indivisible values means that values cannot be divided into two apple there is one apple only okay apple Apple cannot be divided to AP and PL okay it is indivisible it is a single thing like that okay some of the example of the domains are like USS phone number data set local phone number data set social security number data set names data set anything which consist of group of values is called as a domain okay and what is a relational schema relational schema gives us the information about which are the column names okay column names is also called as the attributes what are the attributes present in the particular table or a relation that is called as a relation schema okay and what is degree or aity of the relation it is a number of attributes how many attributes are there that is the degree okay listen again how many attributes are there that is what that is the degree okay in the exam they can ask you the question for the definition of a next in the table if there exist no value we'll be storing it as null so in this example you can see tpples of a relation student like there is a student one student two student three till student five and they all have the values of the SS and home phone number address and office phone age and GPI as you can observe there's in office phone there is null present here because they are students and student do not have office phones right so they will be having null here but there are some students who is having office phone also so how you can consider this is these are the students who are working individuals right so they have office phone as well so whichever does not have office phone will be storing it with null okay now what are the characteristics of relation there are four characteristics the first one is ordering of tpples in a relation ordering is not required okay ordering means in which order it should be stored that is irrelevant because I want the information which is present here these are the facts present here okay so ordering is irrelevant next ordering of values within a tle tpple is also irrelevant whether I give name first or address first then I give the SSN or if I give the name after that and home phone number at the at the end I will give address I will take at the last whatever I do in whichever order I give the values I am giving the values and that's all I'm concerned about okay so this does not does not matter the values within the ordering of the values within the tel next is values and null in the tuple as I explained null means if the value is not applicable we'll be storing there as null and interpretation of the meaning of relation means relation is giving us the value of a tuple as an assertion assertion means a fact okay whatever the particular row is there we'll get facts about that particular row right whether the student where the student is from what the student is studying what is the phone number of student what is the email of student what is the sex of student all those things okay we'll be getting those information so these are the four characteristics of a relation next relational model notation how do we denote a relational model so the attributes are denoted by a1 till a n and the uppercase letter denotes the relation names and smaller case denotes the relation states and tuv r denotes the tpples whichever the tpples are there okay and whichever the relation is there they will be having some attributes and if you want to access that particular attribute for example if I want to access student name so I'll be writing student name dot operator is used to access that particular attribute from the table okay and tpples are also present we can do the operations on table which we'll be discussing in the upcoming topics okay now relational model constraints and relational database schema first relational model constraint means there are some constraints or restrictions we cannot insert whatever we want there are some restrictions what you can insert what is acceptable what is not acceptable so basically there are three types of constraints the first one is implicit constraints these are inherent in the data model okay means the data how it is defined according to that it is present that restriction that is inherent or implicit next is the explicit which means we define what restriction should be there third is the semantic or the application based for example student age cannot be greater than 150 in a student database okay that is a application based because humans don't usually live for 150 years okay so that is a constraint next a few more constraints are like domain constraint domain constraint means if there is a value insertion for the fruits and I insert a bringol there so it is a domain constraint because bringol does not belong to a fruit domain next is key constraint and constraint on null values okay key constraint means the main key like for example in student database the main key can be the student ID because it will be unique this student ID cannot be duplicate means two students cannot have the same role number and it cannot be null also none of the student has a null ID okay that is an invalid student then so these two are the constraints here okay and super key is the main key which we use like for example student ID and key is just a general attribute like SS and every attribute or uh the column is called as a key okay and candidate key is the key which is eligible to become the super key okay for example phone number and email id cannot can also become the candidate key why because this will be unique two people and two people cannot have the same phone number or same email ID so whichever is unique and it cannot have null values that is a candidate key okay and null values are not permitted in super key listen again null values are not permitted in super key because super key is used to identify the rows okay if you put null value how can we identify that row we cannot identify that row right so it should not be there next is relational database and relational database schemas okay relational database has constraints okay and whenever there is a constraint and the database does not obey that constraint it is an invalid state okay so schema for employee database is given here so this is an employee table with attributes here this is a department table this is a department location and so on and all these tables form a database listen again all these tables form a database got it and what are the underlying things right these are the key values okay super key values based on these super key values we'll be identifying the whole tpple okay for example if I ask you select an employee whose SSN is 734 so 734 SSN will be selected okay so it will be unique okay so this is an example of a schema this is how schema looks like they'll be showing you the table name as well as the attribute names next is the entity integrity referential integrity and foreign keys okay entity integrity means what entity integrity constraint states that no primary key can be null that's it referential integrity means what see suppose that two tables are referring to a single value for example here we have um D number department number okay this department number is referred by this table also D number and here also we'll be referring this one right d number so this is a foreign key because one key is connecting two tables okay that is called as a foreign key and whenever we have foreign key we have a referial integrity because we cannot delete this table unless and until we have deleted this D number why because if we delete this table and D number is present where is this pointing to is this pointing to air no it does not point to air okay so it should be present there should be a link okay that's why if the link is broken that is a referential integrity constraint error okay and foreign key just now I mentioned a same key in two tables okay listen again same key in two tables is called as a foreign key now foreign key acts as a meeting link between two keys of different tables now suppose that an employee works in the department five and in that department five I have another thing where is the department five located at so department five is located at London so employee works in a uh department five and department five is located in the London so there is a link between these two via a attribute called as D number okay so this is called as a foreign key and all the types of foreign keys are given here like for example ESS and P number so uh employees working on some project so which project the employees working on what is the employes then both are the foreign keys okay this is how foreign keys work now there can be some constraints in that first is semantic constraint semantic means in a university data by student age cannot be negative or above 150 okay that is a common sense integrity constraint functional dependency constraints constraint that means employee ID if you have we can get the employee name okay so that is a constraint in which by knowing one thing we can derive the other thing state constraint means in a bank database customer's balance cannot be negative at any time that is a state constraint the state should be positive transition constraint means if you are changing from one state to another state it should be not decreasing or making any inconsistencies for example employee salary cannot decrease from one month to the next okay that is a transition constraint next is update transaction and dealing with constraint violations now three operations we'll discuss insert operation insert means there is a database and you inserting an row okay that is called as an insert operation now there can be four types of constraints okay very important first one is domain constraint domain can be violated if you take the value from some other domain which is not appropriate for the data type key constraint can be validated if key value in the new tuple already exist if you're inserting a student who already existing there can be a key constraint entity integrity constraint means if any primary key can be put as null then it will be an integrity constraint referential integrity means if you are violating the referential integrity if any foreign key does not exist in any other table but you're inserting that foreign key referring to that it exist but it does not exist actually so it will be a referential integrity constraints two examples are here we are inserting this record but it is a having a null value at a primary key okay so what happens it will throw an entity integrity constraint next one is this employee already exists so if you try to insert again this employee it will throw a key constraint okay next one we'll be discussing of the delete operation okay delete means what there is a row here when we'll be deleting this row means suppose student five I want to delete student five I'll be deleting from the table that is called as a delete operation but here also some things can happen see this is acceptable if you want to delete this one it will be deleted then but this cannot be deleted why because this SSN has a integrity constraint or the referential integrity constraint with the other table some value of this table is referred to in another table if you delete this one what will the other table have it will have nothing so that is an invalid state okay it should have something so you cannot delete this one unless the integrity is removed and then you can delete it okay that is the delete operation and it's integrity constraints next is the update operation okay update means you're updating some value basically if you want to update the employee with SSN of this to this one whatever this is the salary okay salary suppose it was 25,000 you want to update it to 28,000 whose salary you want to update the person with SSN this one you want to update the salary here so you can give this command it will be accepted so here also it will be accepted okay so this is the update operation next is a transaction concept okay basically what transaction concept says is that whenever you perform a transaction the database should be in the valid states okay it should not go into a invalid state like for example it started from here it did not reach the destination half data is here half data is not here this kind of thing should be avoided okay that is a transaction concept okay it should be an atomic unit means whatever is the true is there that should be true only okay if change is made as false it should be made as false it should not be in between half true half false okay like that things is not acceptable whenever you are doing some operation that should be ensured and the whichever the state the finally the database is in all the things should be valid there and it should not have any constraints okay so this is the transaction concept next is the relational algebra okay now we have discussed what is the relation a table is there and everything is there right we are performing the operations on it that is called as relational algebra okay so there are two types of operation that can be performed in relational algebra first one is the mathematical set theory operations like union intersection set difference cartition and cross product we'll be discussing each of these with example in the upcoming topic stay tuned and here we have another type of operations called as select project join and uh in this once we what we'll doing is the whole table will be there we'll be selecting a part of the table based on some uh conditions okay so this is for this we'll be using the select project and join operations now let's discuss the first which is unary relational operations unary means there is no two variables required only one operator is required that is called as a unary okay select and project and we'll be just requiring one table for this one okay now select means what there is a table here for example student table i want to select all the students who have an even role number means 2 4 6 8 9 10 for sorry 2 4 6 8 10 12 14 16 and so on okay i have to just select those ones okay so I'll be specifying a condition and I'll be selecting for example if you found us just select the employee with the uh department number four so we'll be selecting here as this is this is the sign okay symbol for the selecting a tuple the tpples I have to select whichever has the department number as four and here the salary whoever is greater than three 30,000 I have to select those employees okay so there is a condition defined here and this denotes the tpple which is getting selected means that rows will be selected which will be having either department number four employee working on and salary is equal to greater than uh 30,000 so those will be selected okay that is used for the selection select user select selects the rows okay I'll repeat select selects the rows which satisfy the following conditions now project means that you'll be selecting the columns okay there will be a table right in that table if I want to just select for example this is the table and you just want to select the lame fame and salary okay so what I'll be doing is I'll be giving a command like this pi I will be writing and I'll be writing fame and lame and salary and I'll be giving the table name employee so when I give this command what will happen i'll be getting this answer here okay because here what I have selected is f name l name and salary okay and any other condition also can apply salary should be greater than this or that so it will be selecting accordingly okay so basically that is how you do the project operation and tpple operation selection means select all the tpples with the D number five okay if I give D number five and I give employee here in this case what will be selected first row will be selected the whole row and sec third row will be selected the whole row okay so there will be two rows in the final result next is a sequence of operation and rename operations it's obvious that when we perform an operation there should be sequence if you don't follow sequence some rubbish will come okay so you don't want rubbish right so you'll be perh giving the sequence okay what sequence you have to follow first select the department five employees whosoever is working on department five select those and after that select the first name last name and salary of those employees that will be in the result okay this is the sequence first you cannot do this and then do this because if you try to do this first deps is undefined okay this will be a rubbish value for the computer because it's not defined so that's why define it first okay then use it fine then uh the next one is the rename operation rename means whatever the operation you're performing that can be renamed to a particular value else again you have to write the same thing in the final equation instead of that we are renaming it to temp and we using temp here okay next the relational operations from the set theory okay so here we'll be understanding three operations union intersection and minus operation okay so basically what is union union is the combination of two two things okay so if this values is given four values are here and two values are here if I do the union there will be six values but here as you can see it is just having five values why because one of the values is same okay 3 3 4 5 55 5 this is same values so it is just written once so combination of these two and just writing the common values once that is called as union operation okay and intersection means whichever is common in between these two can you tell me which is common in between these two yes only this is common so if you do the intersection this will be the result only the 3 33 3 4 55 will be the result if you do the subtraction okay subtraction or the minus operation okay in minus operation what happens from this uh table okay listen to me carefully from this table remove all the rows of this table okay from this table remove all the rows of this table in this table we have the third row and the eighth row eighth row is not here so we are not concerned about it third row is here it should be removed from here so when I do the minus operation between result one and result two I'll be getting the final result as 1 2 3 and here 6 and 4 53 okay got the point the differences between union intersection and set difference okay next this is the same example given here and the examples are given the table with respect to the table so if you just go through it quickly okay see what is the thing first they have given the table student and instructor okay then what they have given student union instructor so this is student this is instructor so if you do the union operation whichever is the values present here and here that all will be added up and the common values will be written just once okay that is a means what is this this is a union okay and intersection means the common values between these two are written here as you can see Susan and Romesh is here and here also right susan and Romesh right so Susan and Romesh will be intersected and it will be written here next is minus operation minus means student minus instructor means what from student remove all the instructors from student if you remove the instructors we'll be removing Susan and Romesh from here and this will be the result and uh the next one is instructor minus student from the instructor remove all students from the instructor how many students are there Susan and Romesh so if you remove it will be John Ricardo and Francis okay John Ricardo and Francis will be the final result here next is the cartisian product or the cross product okay let's take an example and understand here this is a table A with student ID and name okay so one is Alice and two is Bob and here is the course ID 101 is math and 102 is science now if you do the cross product what will happen is each row will be assigned with each course ID and course name so 1 Al is 101 maths one Alice 102 science next two Bob 101 maths two Bob 102 science okay so each of these row is getting assigned with these two this row is getting assigned with these two that is called as a cartisian product okay next is the binary relation operation here two tables will be required that is that is why it is called as binary in the previous one only one was required we were either selecting the rows or the columns okay here two are required so there are two operations in that join and division okay let's understand what is join okay with example you can understand now see there are two tables again the student and the courses table is here and uh these values are given here okay but there as you can observe there is a student ID here also and here also it is so when we do the join operation what will happen this student ID and the name will be joined with the corresponding course and the course name for example one is the student ID of the Alice and Alice student ID is corresponding to 101 and maths so the final row will be 1 Alice 101 maths second one is Bob and second one is related to 102 and science so if you write it together it will become two Bob 102 and science this is called as join operation joining the two tables okay equin is also a similar condition but we'll be having an equality symbol means only join those students which will be having the course as equal to the student ID okay natural join again is the same join which I just discussed okay now a complete set of relational logical operation we discussed many operations but the five main important ones are selecting the rows selecting the columns union minus and cartisian product intersection is a redundant one because you can use these symbols to calculate the intersection as well okay so this is the complete set of relation algebra operation if you ask in exam you have to write this one okay next is a division operation let's understand with an example okay this is a table given for the student courses and this is the courses given here now if you divide what happens division means math and science which student is studying both math and science that is my question which student is studying both maths and science this is R this is S r is related to student courses s is related to courses required so if I do R divided by S my final answer will include those students who are studying all the courses which is present here math and science so Alice is studying math alice is studying science i have selected Alice next Bob is studying maths bob is studying science i've selected Bob next Charlie is studying maths charlie is not studying science so my final answer will include Alice and Bob okay next what is operation is the notation for a query tree okay query tree is nothing but we'll be representing representing the algebraic operations in the form of a tree for example if I want to select the uh project and the department uh suppose there is a project P and there's a department D i want to select all those projects which are being executed in the department D so I'll be combining these both okay firstly I'll take the project location as staffold and department as the D number wherever the project's department number is equal to the department's department number that will be selected then I'll be selecting those employees who are working on the project and department so it will be coming here so finally we'll be having all the values of the employees who are working on a particular project in a particular department okay this is this type of representation is called as a notation for query trees and this is the summarization of whatever we have learned you can go through this a very important um like a diagram kind of diagram you can uh understand and here it is used for the reference okay you can for the revision purpose you can use this table okay next is the additional relational operations till now we discussed many operations like the selection operation join and the other ones also we have discussed so those operations are there apart from that there is additional operations also so the first one is generalized projection okay generalized projection means what was projection projection was selection of the attributes right if this is a table we're selecting the particular attribute values okay that is called as a projection but here we we have the generalized projection that means if I want to just select those values whose net salary is salary minus deducted whose bonus is 2 into years of service and tax is 0.5 into salary so basically we're doing some mathematical operations on the values and then we are selecting those values so in that we'll be calling it as a generalized selection okay generalized projection okay Next is the aggregate functions and grouping aggregate functions means what we have all the tables for example consider this table okay we have laptop phone tablet and we have the prices and the quantity is given now aggregate means what i can find out the uh sum of all the quantity how many total quantities are there 15 + 8 that is 23 right 23 quantity is there or what is the total price that is equal to sum like that we can calculate the sum average we can what is the average price of these three add these three divided by three okay so in SQL we can just give average and it will calculate as which attributes average you want price quantity like that okay next is the maximum which one is the maximum amount this 60,000 and which one is the minimum 20,000 and what is the count count means how many values are there there are three values laptop phone and tablet okay so those are the things we can find out from a table using aggregate functions okay so five aggregate functions are there the first one is the count second is the sum which I just discussed average minimum and maximum and group by also we can do for example if I want to group by sales okay sales means how many laptop have been sold how many phone have been sold and how many tablet have been sold so based on that I can group it according to the product and that will be the um grouping okay so this is a summary you can go through it okay these are the relational algebra operation this is syntax you need to write okay third one is the recursive closure operation okay this also I can understand using example suppose employee A reports to manager B and manager B reports to another manager C and manager C reports manager D so basically A reports to B C and D and B reports to C and D and C reports to D so there are six recursive closure operations because indirectly who is reporting to whom that also we can find out okay so indirectly A is reporting to B A is reporting to C A is reporting to D and B is reporting to C B is reporting to D and C is reporting to D okay so this is the final result which we'll get if you do the recursive closure operation and this is the formula can go through it okay next is the outer join or and outer union operation okay join we discussed joining the two tables now let's understand what is outer join okay so this is the table which is a student table and courses table is given okay now we have 1 2 3 here and 1 2 4 here as you can observe this third student does not have corresponding ID in the course okay so if you do the left outer join what happens left values will be kept okay listen again left values will be kept left values means 1 2 3 will be kept so Alice Bob and Carol will be selected alice Bob and Carol will be selected and after that in the place of Alice we have maths and Bob we have science why because Alice was one and one is related to maths bob was two and two is related to science carol was three but three is not there anywhere so for Carol we'll be putting it as null wherever we don't have that is the left autogen because left we selected S okay so left values will be kept here none of the null will be there if you select the right values that will be having the courses but English is not corresponding to any of the student because there is no student with the role number four so it will be having a null here if you keep it in the right it is called as a right outer join full outer joint means both you will be selecting here one n will be there here one n will be there okay now next is the outer union union means what you'll be combining these two okay for example 1 2 and three is there so 1 2 and three will be taken okay so see here one will be the Alice and the age of Alice is null why because here age is not given for the student ID1 student one there is no age so it will be null here okay and uh the third one the third there is no student here but there is a age for that student right so it is there is student not given here but some students age is given so we don't know which student it is but their age is 21 like that it is called as a union outer union okay so got the difference between the outer join and outer union very good now next is the queries in the relational algebra okay we'll discuss three queries okay so in the exam they can ask you retrieve the name and address okay what you have to retrieve name and address of all employees who work for the research department basically what we'll do we'll give research department here and you have to select all the rows where the department name is research and select from the table department then select all the employees which will be having those department numbers okay which will be the research department because they have asked the name of all the employees then also we'll be selecting the address of all the employees okay next is the for every project location located in staffford list the project number controlling department and the department's uh department manager's last name and address and date of birth so all those things which are given project number department name last name address and birth date we'll be keeping it at the end okay but before that we need to calculate uh we need to find out whichever the projects are in Stafford so in Stafford projects we'll be storing the rows which have the P location as staffold then we'll be finding out the departments using join operation whichever the projects have the same department as the department number and after that we'll be taking that value and assign taking the employees who are working on that projects and then finally we'll be uh selecting the uh rows which have the particular attribute given in the question with the uh tpple values okay so this is how you do the for the query two the query three is related to find the names of employees who work on all the project controlled by the department number five first is in department number five how many projects are there next in that project select the uh P number okay because we need the project number after you've got the project number find out which employees are working on that project number from the workound table so we have the employees who are working on that now based on the employees you have to divide it by five department five as I explained division what it does the employees who are working on all the department projects that one will be selected if you do the division operation so this will have all the employees who are working on the department five projects now we have to find out the names right they have given so name means l name and f name of what of this thing okay and x employee okay so we'll be getting the result all the employees are working on the projects of all the all the projects of department five okay the last topic is mapping conceptual design to logical design this is a show short question okay every time it has asked in the exam er relational mapping okay now this is the company schema so let's quickly go through it this is an employee and these are the attributes of the employee like the f name middle name and L name and the address and the birth date okay and employee is supervised by the supervisor okay and supervisor is also an employee so it is getting mapped to itself back okay and n employees are supervised by one supervisor okay and uh employee works for a department and department manages an employee okay so department will have its own attributes and department controls the projects okay and projects are worked on upon by the employees and employee has some dependence okay dependence the dependent name will be given like the family members okay so this is a company er schema now to map to uh the steps for the mapping what it means is this diagram has to be converted to a table okay basically so how do we make a schema out of the diagram so first is convert all the strong entity sets into relation strong entity means what the strong entity is this one employee whichever is in the rectangle okay only single rectangle so three strong employees are strong tables are there employee department and project this is a weak one because it is a double rectangle okay double rectangle is weak one so whichever is having all the strong entities take those attributes and put it here okay and department also will do the same and project also will do the same the SS means what is this this is the primary key will be underlined okay next is mapping of weak entity types in the example which you have taken above the weak entity type of the dependent and dependent depends upon the SSN of the employee okay based on SSN there is a connection made so if you see at the top there is a connection made via the SSN okay there is a SSN which is connecting connected to the employee employees main attribute is SSN and via SSN we can identify who it is dependent upon okay so we'll be adding another value SSN and that will be pointed to the employee so that there is a connection formed okay that is the second thing foreign key foreign key will be there from the dependent to the employee next is mapping one is to one relationships one is to one means what one employee can have one salary only it cannot have 10 salaries okay so like that one is to one means one employee is managed by one department 100 departments cannot manage one employee like that it is stupidity so one employee is managed by one department and that is one is to one relationship okay and one employee has one dependent like that okay so this is the one is to one relationship whichever has one is to one relationship we have to map it okay what do you mean mapping means what we'll be getting a connection between these two okay so employees here and department is here one employee is handled by one department so we'll be adding a value here for the SSN which SSN is working for the department okay like that then we'll be mapping one is to n relationships like for example in one department there can be n number of employees in one department there can be n number of projects for one employee there can be n number of dependents sometimes as well okay so one department n employees so how can we map 1 s to n okay so we'll be writing it all here and this one is here the assess is here and the employee is here and the d number will be added here so that will be pointing to whichever department it is working on okay means the employes working on next we'll be mapping m is to n relationships okay means m employees employees can work on n projects okay means five employees can work on three projects like that okay so SSN will be there for the employee connection and P number will be there for the project connection so which employees working for which project that will be there in one single table that is called as a mapping MS to end relationship types then we'll be mapping multialued attributes like location is multi value attribute there can be many locations where the projects are presented right also called as composite attribute and the name can be fame L M name and L name okay these are the uh not atomic values okay and the multialued attribute means that one attribute will be having multiple values like London New York and so on okay and uh this one the name is not a multi valued attribute because it is divided into three parts but a person cannot have multiple names got the point okay so whichever has the multival attribute what we'll be doing is the location is present here right so department location will be creating and location will be present here and department will be present here okay so there will be a mapping made between the department and the location okay last one is the mapping n array attributes okay n array means supply will be here and supplier does the supply and from the supply the project gets taken into consideration and from the supply the part is made okay so supply is related to supplier project and part so what we'll be doing is supplier will be making here with the main key value as the s name and the project with the main value is project name and part there there's the part number main thing and supply will be having the s name project name part number and quantity so all of these are interconnected okay the supply is interconnected with these three things so these three things main will be here okay and the quantity is associated with this so supply is associated with the project name parts part number and uh the supplier's s name okay and it itself has a quantity so the quantity will be given here so this whole thing can be represented in this form okay this is what all what you have to do in the ER mapping okay seven steps are there explain with this example whatever I told it should be sufficient for the full marks okay that's all for this video found this video helpful please like and subscribe it helps me make more like this and thank you so much for watching 19