[Music] hello everyone welcome back in this presentation let's see domain relational calculus example queries in the last presentation we have understood about the basics of the domain relational calculus in this presentation let's focus on solving some queries if you are directly watching this lecture I would request you to watch my previous lecture to gain better insights about the topic anyway I will just provide a brief introduction about this here this domain relational calculus is a second form of relational calculus the first form of relational calculus is the tle relational Calculus if we want to compare relational calculus and relational algebra we are sure that relational algebra is a procedural query language where we need to instruct what to do also we need to instruct how to do but relational calculus is a nonprocedural one meaning we need to specify what to do we need not specify how to do when we talk about tle relational calculus the output is taken from the entire Tuple whereas in domain relational calculus this operates on domain variables I mean to say the output of the query that we are going to supply will be taken from the domain attributes not from the tles I will explain more when we solve some queries but for now we will understand understand the basics talking about the domain relational calculus this is the theoretical basis for QBE the query by example query by example is the first graphical query language that uses visual tables also many graphical front-end tools that we use today uses the idea of QB and one more thing I wanted to emphasize here when we say domain relational calculus is a non-procedural query language because it's using the abstract approach where we are just going to specify what to do without specifying how to do there are some conventions that refer non-procedural query language as declarative language I also would request you to go through the rules which we have already discussed in the previous lecture in order to solve the queries this is the University database example we have already seen about this in the schema diagrams lecture of this chapter we need this University database schema in order to solve the queries I would request you to make a note of this so that we will be able to solve the queries accordingly at first let's dive into example query number one the first example is find ID name Department name salary for instructors whose salary is greater than $80,000 I request you to pause this video for a while navigate to the University database example and find out which table or relation has all these four attributes I hope you are done obviously all these four attributes are available in the instructor relation itself so let me bring in the instructor relation schema here for easy understanding here is the schema this instructor relation contains four attributes ID name Department name and salary and the query is we want to retrieve or find all the four attributes so this is going to be a straightforward query the answer for this is we are going to create four domain variables can you see domain relational calculus uses domain variables instead of tles so I'm going to create domain variable I for ID n for name d for Department name s for salary as we are going to retrieve all the attributes from the relation instructor it's just going to be a straightforward one all four variables I mean the domain variables are created I'm going to check if all these domain variables are belonging to the instructor relation if I'm going to retrieve the information about all the instructor we can stop up to this but the query is we want to retrieve ID name Department name and salary of instructors whose drawing salary greater than $80,000 now see what is the domain variable that we have created for salary s so the condition is s greater than 8 80,000 which is the question so all the domain variables that are belonging to this instructor also there is an and condition the condition is this domain variable salary should be greater than 80,000 I hope the first example is clear for you let's navigate to example number two the question is find the instructor ID for each instructor with a salary greater than 80,000 in the previous example we retriev all four attributes so we created all four domain variables and we displayed all four domain variables but now we want to retrieve or find the instructor ID for each instructor with a salary greater than $80,000 for this also we need the same instructor relation that has all four attributes ID name Department name and salary however we are just going to retrieve only instructor ID if we are going to retrieve all the attributes then we are not going to use their exist notation since in this example we are going to retrieve only one column or one variable so we are going to retrieve only one domain variable to be precise so we need to use their exist notation so there exist with the condition the condition is the domain variable that we create for salary should be greater than $80,000 because that is what mentioned in the question so what we are going to retrieve here is is the instructor ID so I'm just going to create variable domain variable for instructor ID which is I I means instructor ID and I'm going to use their exist the reason is we are going to retrieve one column or some columns from the relation so the other columns I'm just mentioning or other domain variables I'm mentioning with there exist so I'm going to retrieve instructor ID for which I have created a domain variable I such that there exist n for name D for Department name s for salary remember all these four domain variables must belong to the instructor relation if the question is to find the instructor ID of all the instructors this is enough but here we have a condition so all these domain variables should be belonging to the instructor relation also the domain variable s that we have created for salary should be greater than 880,000 and here is the answer for example number two if you compare example number one and example number two it seems similar to tle relational calculus isn't it but what's the difference when we write there exist X or there exist n belong to some relation in tle relational calculus we actually bind it to a relation but in domain relational calculus this is not a tuple these are domain variables so here domain variables are created and these domain variables are unconstrained until the sub formula that we create here I N DS belongs to instructor this is the sub formula it means this output constrains to domain variables I hope the things are clear to you let's move on to example number three the question is find the names of all instructors in the physics department together with the course ID of all courses the teach I request you to pause this video for a while and think about how many relations are requ wi here because at times we may see that our output may not be available in a single relation we need to deploy two or more relations to get an output in this case just pause this video for a while take this question and compare this with the university database schema and find out how many relations are required here in order to solve this question I will now display the university database schema here it is I hope you are done so it is very clear that we need to retrieve the output for that particular query from the instructor relation and from teachers relation because the domain variables whatever we need we can retrieve it from these two relations let me go back to the question here is the question now let me bring in the two schemas that are required instructor schema and the teacher schema instructor obviously it contains ID name Department name and salary teachers relation actually this is a relationship and the relationship also is basically a relation a table so it contains ID the ID of the instructor the course ID the instructor has taught section ID semester and year how to retrieve this here is the answer what we are going to retrieve find the names of all instructors so instructor names we need also we need the course ID of all the courses that particular instructor has dot isn't it so we are going to retrieve two domain variables output number one the names of all instructor number two the course ID so we need N N means the name of the instructor and C which is the course ID so I'm just using n the domain variable for name of the instructor and C for the course ID now when we are going to retrieve only selected columns or selected domain or selected domain variables then we need to use their exist and there exist I and a I'm going to retrieve instructor ID and the section ID I is for the instructor ID a is the section ID you may be thinking why I'm using a for Section ID instead of s the problem is if we are using S I'm going to reserve s for semester in order to avoid ambiguity I'm just using a different variable name which is a in this case so we we want to ensure uniqueness in the domain variables and that is why I'm not preferring s for Section ID I'm preferring a for Section ID domain so there exist I and a we are going to retrieve only partial information where I instructor ID C course ID a section ID s semester y here these five attributes are belonging to teachers relation and we have going on to retrieve D and S where D is the department name s is the salary you can omit s here however we want only Department mainly the reason is we are going to retrieve the names of all instructors in the physics department so definitely we need there exist D such that I N DS in ID name Department name and salary all these four attributes are belonging to instructor relation and the main condition Department name this domain variable D should be having the value physics so if you use this query we will be getting the names of all instructors along with the course ID where we retrieved it from both the relation instructor and teachers as I mentioned you may ignore this s because there is no role for S however even if you add it it's not going to cause any problem to this output as you are aware domain relational calculus is a not nonprocedural query language we can even create queries as per our own convenience I hope example number three is clear to you let me now move on to example number four the question is find the set of all courses taught in the fall 2009 semester the spring 2010 semester or both I hope the question is clear we are going to retrieve the set of all courses taught in Fall 2009 semester all spring 2010 semester or both I request you to pause this video for a while let me bring in the University database and find out which relation contains all the required information I hope you are done so all the required information are available in section teachers takes however I'm going to use section relation for a specific reason why because this has Max maimum information so I'm just preferring section let me bring in the section relation here which contains course ID section ID semester year building room number and time slot now one thing what we need to note here is we are not going to retrieve anything related to the instructor who taught the course rather we are going to find the set of all courses that were taught in Fall 2009 semester spring 2010 semester or both so section relation is sufficient in this case and the answer for this query is this so we are going to retrieve the set of all courses so we are going to focus on one column or one domain variable let me create the domain variable C here where C is the course ID so I'm assuming the question is finding the set of all course IDs all courses or course IDs should be sufficient so I'm just having a domain variable C such that this C is a part of section relation so we are going to retrieve only only one column or one domain variable so obviously we are going to use their exist s what is this s this is the semester right so C is for course ID A is for Section ID s is for semester Y is for year B is for building R is for room number T is for time slot ID all these domain variables are belonging to the section relation but the condition is this S I mean this semester should be fall 2009 right so whatever we retrieve for S should be fall at the same time we are taking the year y should be 2009 so fall 2009 this condition is satisfied and remember we also should retrieve for spring 2010 or both if it is and we would have used and here since it is or both we are using R now let's deal with the second condition spring 20 so here we have used s let me use U which is another domain variable where c a s y b RT all these things like the previous case that belongs to the section relation and here whatever we retrieved it for s or U it should be for spring 2010 so s should be spring or U should be spring so s should be spring at the same time why should be 2010 because whatever ever you get it for U it will be having the output that contains spring 2010 whatever we get for S will be fall 2009 whatever we get for you it will be spring 2010 and we are using R it means output will contain this output this output or both and those output are actually referred by this domain variable C so here is the answer for example number four I hope the session is informative and thank you for watching [Applause] [Music]