hello everyone welcome back to my channel today we are diving into one of the most important concept in database management system so my topic is decomposition in third normal form or 3NF if you are struggling with normalization or just want to understand 3NF deeply this is video for you let's get started so let's start with the basic database normalization is all about to reduce and prevent anomaly uh third normal form or CNF is a powerful way to achieve this by ensuring that every non-key attribute only dependent on the primary key so what exactly 3NF is a relation is in 3NF means a table in is in 3NF if it's already in second NF or 2NF and there are no transitive dependencies here uh now what does what do we mean by transitive dependencies when it's uh one key attribute depends on other non-key attributes like a determines b and b determines c so c is transitive dependence on a and here what we uh and here that's what we want to remove and the goal is we have to eliminate such dependencies by decompositions now transitive dependencies example here simple example imagine a table when we store student ID and a professor and professor phone now profess professor phone depends on professor and professor depends on student ID so professor phone is transitively depend on student ID a classic violence of 3NF now what is decomposition process so how do we fix this that's where decomposition comes in here the process first step firstly identify all functional dependencies second then find any transitive dependencies next break the table into a smaller one to remove this dependencies or create a new table to eliminate them now fourth make sure this decomposition is lossless meaning we don't lose any data and the final step is we make sure all original dependencies are still preserved before decomposition we have all the data student course professor and their phone in a single table this looks fine until you realize every time a professor is repeated their phone number is also repeated that's redundant and mey to update now let's decompose after we create two separate tables one for student and second for professors and another just for professor with their phone numbers now if a professor number changes we only update in it one place so here is no redundancies and we have successfully reached to 3nf now what is the benefits of 3nf by decomposing 3NF you eliminate returning data avoid update insert and delete improve consistencies and make your data easier to maintain and scalable now what what are the real world applications you will see 3NF in action in places like banking system where customer account and transaction details need to stay separate e-commerce where separating users product and order infos are present third are management of systems in which we can keeping books authors and borrowers organized without overlap and the con conclusion is so to wrap it up uh decomposition in 3NF is one of the best tool to make your database clean efficient and pure sufficient it's all about structuring your data in a way that reduce repetition and improve accuracy thank you for watching if you are found this helpful don't forget to like share and subscribe