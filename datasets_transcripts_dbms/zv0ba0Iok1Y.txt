Hello friends! Welcome to Gate Smashers The topic is conflict serializability Means, we are given a schedule And we have to check the given schedule That is this conflict serializable schedule? Or it is not And this question is the most important question From point of view of Gate, UGC- Net Or even if talk about other competitive exams also Then inside transactions The first priority The first topic that they choose Is this only What is the question How to check Weather a schedule is conflict serializable or not So over here a schedule is given Schedule means Collection of transactions And this schedule is to be checked That it is conflict serializable or not? So for that what is the method? First of all you see the schedule Read of X Read of Y Read of X Read of Y Read Z W(Y) I have written schedule in this way So first you note this schedule And after that we have to check The method is very easy The method is very easy If it clear to you one time You try questions of Gate And definitely whole concept will be clear How do we check So first of all What we have to make over here? Precedence graph We have to make over here Precedence graph In a way we have to make graph only And what is in the graph with us? Edges are there and vertices are there Vertices means nodes And to join them we draw edges  So in graph how many vertices How many vertices we have to take That depends on how many number of transactions are there In this schedule So in this S schedule there are 3 transactions T1, T2 and T3 So how many nodes or vertices will be there? 3 So you can draw as you wish T1, T2 and T3 So we gave it some name T1, T2 and T3 Which is the name of the transactions Now we have to draw edges We have to draw edges To draw the edges We have to remember one line only That, check the conflict pairs in other transactions And draw the edges And draw the edges You have to check conflict pair So first of all always remember conflict pair Read-write write-read And write-write These 3 are conflict pairs If we talk about same variable x and x Y and y z and z It should not be that Read of X Write of Y No Read of X and write of Y, if variable is different That is working on X And I am working on Y So there is no conflict in both So read X Read-write Write-read Write-write What are these 3? they are conflict pairs So first of all we will start Which is the first operation? From these if this is increasing the time Like this This is a timeline So the first operation is read of X So you have to check carefully Read of X Which will be the conflict of read of X Write of X Who will be the conflict of read of X?  Write of X You have to check write of X In T2 is there any write of X Or in T3 is there any write of X So check T2 also It is not there In T3 It is not there So that means There is no problem You can cut in a way Because We have checked this Now we are talking read of Y Which is the next operation? Read of Y So conflict of read of Y Write of Y So first check write of Y So it is there here in T2 It is not there Is it there in T1? write of Y It is not there So that means There is no problem You cut this also Cut this means, we have checked this Read of X  Which is the 3rd operation Read of X Go on checking sequentially Read of X Conflict write of X Check write of X is there anywhere? It is not there Write of X is there anywhere? here is write of X Where are you standing? Over here And where did you get the conflict? On T1 So draw a line from T1 to T3 You have to make this a directed graph Directed graph Means where direction is also there So you are checking  In T3 And where did you get in T1 So draw a line from T3 to T1 And complete, complete means We have checked Read of Y After that we will come over here next Read of Y Conflict? write of Y Check write of Y It is not there Check write of Y Here it is There is no need to check again above Because we have already checked that You just have to check below Below that Read of Y, write of Y We got it So where are you standing? On T2 and where did you find? In T3 So from T2 to T3 Draw a line We did it finish We have checked Read of Z Read of Z Conflict, write of Z Is there write of Z anywhere? Yes, here it is Write of Z So you are standing at T2 and you got it in T1 So from T2 draw a line to T1 We did it But now over here also we have to check But over here there is no operation write of Z So you don't need to check Done Next Write of Y In case of write You have to be carefull In case of write There are 2 conflict Read and write both So that means write of Y Who will be the conflict Conflict of write of Y will be read of Y And write of Y both So in case of write Take care So the conflict of write is read and write Is it anywhere? No, is it anywhere? Here it is No It is not there There is no conflict of Y over here So first of all internally You don't have to check in itself Means if you are checking read of X Then you don't have to check write of X in itself In other transactions In other transactions you have to check If you get it in itself The transaction itself can perform transaction it wants to The transaction itself can perform any operation Where does the problem come? When they go parallel So you have to compare with each other We did not get write of Y After that we will come On write of Z So which is the conflict of write of Z Read of Z Write of Z Just take care in the case of write There are 2 conflict Read of Z Write of Z Is there read of Z anywhere? Here it is Even write of Z is also there Both are there So no problem From T2 to T1 From T2 to T1 We have already drawn from T2 to T1 So there is no need to overwrite Because if one time line has been drawn Then edge is there So we are standing at T2 write of Z And conflict is read of Z We got it It is here But already line from T2 to T1 is drawn So you need not draw it again So this is also checked This is also checked Now its operation are only left So there is no one to compare So you can say this These are also checked Because, it's comparison is nowhere So this is already done Now you come in this graph This Precedence graph You have to check That inside loop Or cycle Loop or cycle Does it exist or not Cycle means You have to simple just remember only one point of view That you start from any node Can you again come back? If you can come Then that loop or cycle We call it as cycle exist It is not necessary that in that cycle all nodes should come It is not necessary that all the nodes should come in that cycle It is possible that we come back from one node only That is also a kind of cycle So if I start from T1 I cannot go anywhere If I go from T2 to T3 From T3 I go at T1 But I cannot go back From T3 if I go at T1 Then also I cannot go back So in this graph No loop Or no cycle you can say So if no loop or no cycle you found If in this graph No loop or no cycle came That means that this conflict is serializable schedule So that means You can clearly say that Yes you are conflict serializable And if One schedule Is conflict serializable Why is conflict over here Because it is name of the method In this we are checking conflict pair That is why we are saying its name as conflict serializable schedule So yes This schedule is conflict serializable And if this is serializable Then you can give guarantee That this is serializable Means, equivalent to this schedule Some serial schedule exist Means, in seeing this is parallel But you can convert this and make it serial If this is serializable So that means that this is consistent also It is consistent also So conflict serializable Yes so that means This serializable and this is also consistent But over here a problem comes That if it is serializable then what will be made?how? Means, as there are 3 transaction So for serializable we have 3 possibility T1, T2 and T3 Or T1, T3, and T2 Or T2, T1 and T3 Or T2, T3 and T1 Or T3, T1 and T2 Or T3, T2 and T1 There are these 6 possibilities This is equivalent to which one? How can we say First this happened Then this or this So to check that also you have to check the graph only See in this graph And in this graph you have to check Indegree Indegree zero Means, find the vertices whose indegree is zero Means where Any vertices any edge is not coming towards it Towards this T1 2 edge are coming Towards T3 1 edge is coming See towards T2 any edge is coming? No towards T2 no edge is coming So first of all pick T2 So first of all what you have to do Pick T2 As you picked T2 In a way you finish T2 from a graph It will be removed from the graph only If vertices is only not left Then there is no role of the edge also So in a way edge is also finished NH much have 2 ends points So 2 end points will not be there, one end point we have finished That 2 edges are also removed See in the remaining graph Indegree Any edge is coming towards vertices? it is coming Towards this is it coming? it is not coming So you pick the second one T3 And then when you will remove T3 Then what is left in the last T1 So that means that these 6 possibilities are there From that T2, T3 T1 T2, T3, T1 Yes, this is the possibility So this graph is conflict serializable Yes What is this graph? It is serial Yes What is the sequence? This is the sequence Is this graph consistent Yes it is a consistent graph So this is how we check weather a graph is  Consistent Or serializable or conflict serializaiable Or not And you will get a lot of question on this In Gate, UGC-Net So please you see this video properly And you try all the questions after that If you want to write this You can write this schedule like this T2 is together Because T1 T2 T3 Means, First of all T2 will be completed T2 will be completed Then T3 will be completed Then T1 will be completed So first of all operations of T2 Then operations of T3 Then T1 operations At last So this is how we check weather the schedule Is conflict serializable or not Thank you