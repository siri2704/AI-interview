hello everyone today I will be presenting on indexing and hashing in database management system which are essential techniques for improving database performance efficient data retrieval is crucial in large databases and both indexing and hashing help reduce such time let's dive into how these methods work and their real world applications first introduction to indexing and hashing when dealing with vast amounts of data searching for specific records can be time consuming indexing and hashing is very helpful in this indexing creates a structured way to access records faster by building an additional data structure hashing maps data directly move to memory location offering even faster access in certain cases both techniques help optimize database queries and improve system efficiency now let's see what is indexing indexing is a method to speed up search operations in a database instead of scanning every record and index allows quick lookups think of it like a book index you don't read the whole book to find their topic you go straight to the page number given in the index indexes help reduce disk input output and improve query performance significantly now let's see the types of indexing there are different types of indexing used in databases that are primary index secondary index clustered index non-clustered index primary index built on unique keys like student role numbers it is very unique secondary index used on nonique attributes like student names it can be unique or non-unique clustered index stores records in the order of index making range queries faster non-cluster index means uses pointers to actual data location instead of storing them in order each type has its specific use case depending on query requirements these are the types of hacking now let's see what is hashing hashing is another technique used for fast data retrieval instead of searching through an index hashing directly maps a key to a memory location using a hash function for example if we store phone number in a directory we can use the last three digit as a hash key to find them instantly hashing provides constant time O search such efficiency exact lookups this is what the hashing now let's see types of hashing there are two main types of hashing static hashing dynamic hashing static hashing the number of storage locations that is buckets is fixed it works well for databases with a stable number of records dynamic hashing the number of buckets changes based on the data size it is deal for growing databases as seen in modern database system using the right hashing technique ensures efficient memory utilization and fast retrieval these are the types of hashing now we discussed the what is hashing and types of hashing and what is indexing and types of indexing now let's see the quick comparison of indexing and hashing let's compare indexing and hashing to see when each technique is useful futures of indexing and hashing the search time of indexing is login the search time of hashing is 01 the space recorded for indexing will be extra storage than hashing hashing recures less storage indexing is suitable for range queries hashing is suitable for exact lookups indexing is best for range queries where we need to fetch data within a specific range like retrieving all students within marks above 80 hashing is better for direct lookups like finding a student using their role number this is what hashing and indexing now let's discuss about the real world applications of hashing and indexing where indexing and hashing used in real life it can be used in anywhere in database systems search engines file systems catches like that anywhere database system in database system MySQL PostXQL and Oracle used in indexing for optimized searches in search engines Google uses indexing to return search result instantly likewise hashing file systems and catches hashing helps speed up data retrieval in catches and file storage systems this is how the hashing and indexing are used in real world applications both techniques plays a crucial role in making digital system faster and more efficient these are the real world applications of indexing and hashing now it's time to for conclusion to summarize indexing improves search speed by organizing data structure hashing provides direct access through key value mapping choosing between them depends on whether we need range based searches or fast exact lookups if we need range based searches the indexing is the best choice if we need fast exact lookups the hashing may be the best choice now this is my conclusion that we need rangebased such use indexing and we need a fast exact lookups use hashing thank you thank you for listening