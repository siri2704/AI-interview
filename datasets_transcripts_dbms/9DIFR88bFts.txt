foreign has anyone heard of triggers before yes I guess ready okay can you tell me what exactly you guys are what what is a trigger and how does it work so trigger is basically you can say on something like a notification hook where uh we are deciding we are deciding to execute something based on a certain condition for example let's say that we have a table we have set of tables which are normalized uh we have done a third normal form or something and uh we are deleting the particular record from uh you know table which stores detail so if there if the if we are deleting one entry from that one table then uh interest related to related to that particular record in other tables don't make sense so we can create a trigger that if certain record is deleted from The Stables then delete relevant records from other table as well perfect that's a good example bhagavan mostly we use triggers for that only but uh there are a few things that I would like to add on top of that uh so let me start with what is a trigger a trigger is nothing but a stone procedure similar to a store procedure but you can think of it as a system smooth procedure and another difference between a trigger and a solution is that a trigger is attached to a table a stored procedure can this is not something is not a database object that will pass to a particular table it can be attracted multiple tables at the same time okay now uh another thing is triggers execute only with respect to a table when a certain uh when an insert update or delete occurs you can save then either of these three things happens with respect to a table on which that trigger is attached then the particular trigger is executed or it is triggered and whatever action we are trying to perform with respect to the trigger then that happens now what bhagava was trying to tell you let's say uh there is a there is a let's take an Empire table there is an employee table and then there is a employee a trusted so now Argo what Vargo was trying to do was Margo was trying to escape the policy how he said that I would like to add a record first in the address table and then in the employee table because I know the address of the table it's just that I I don't happen to know some of the employee details let's say is age or something but I have all of his address written so I can enter the address data first so he's trying to hamper with the system in a way that without entering the employee recording would like to enter his address detail and that's where trigger will come into picture and it will stop him to do that why so let's see he adds a address detail of an employee ID XYZ which does not exist in our main employee table then trigger alerts that the required that you are trying to enter within address table there is no corresponding record to that in the implied table but certainly I mean we have to establish that kind of relationship also within those two tables with the foreign key constraint or uh let's say uh some some other kind of relationship also we can establish like uh I would say you can keep a check also you can apply a check constraint or on the basis of employee ID now let's say if a primary key for that particular foreign key does not exist in the employee table then the trigger would give an error that corresponding record does not exist and the transaction fails so he cannot bypass that mechanism and that's how a trigger works and that's how we use generally triggers in our day-to-day life another way we use triggers is let's say if let's go let's go the other way around if he enters the uh employee details in the main table he does not enters the data in addressing then also the trigger will get into the picture and it will ensure that hey if you are entering an employee if you are adding an employee in our main table please add its corresponding uh address detail in the address table but I mean it can be certainly null but it cannot happen that there does not exist any record for that deploying employee address detail table that's that's not possible so I certainly if you have established the font constraint there so it works in both the way that it ensures data Integrity is there employs all the records are entered depend no matter in how many table we have separated it those table are related with each other and have a particular trigger on about that then it ensures that the record are ended successfully for an employee in all the tables no matter how many uh attributes we have any question okay so how does the trigger trigger to update the Stockman product is soon stock market data example where the way we create a trigger is first create trigger trigger name on table name like which we would like to attach uh the table into which you would like to add this particular trigger then we would like to mention for what condition for an insert on this table for an update or for a delete on this table then uses site as begin the SQL statement but that what you need to do and that's just an end so we are creating a trigger TR invent update inventory update on sales table for insert whenever a record is inserted into a table as then we begin then what we are trying to say as an record is inserted into a table update invent set stock quantity to stock quantity minus select quantity from inserted so we are basically at runtime we are checking whatever the quantities we have inserted just minus that from the previous quantity so let's say if you have sold something out right there were 10 stocks and you have sold out five stocks so what it would do is it will update the record 10 minus 5 as well as you have sold the rep sold five stocks or X number of stocks it will basically minus the records from their existing number and then update it as simple as that for your particular PID make sense right this is essentially in the back end if you have used zero the or any other stock trading platform this is how these things work literally uh like does any one of you use any any stock trading platform like or mutual funds or future options anything at all yes I'm sorry Jose is yeah so essentially yeah this is how it happens in the back end then let's have the other trigger uh trigger to delete the order if the product is deleted from the inventory so let's say uh this particular table what you get taking as an example let's say if an inventory an X product existed and you have received an uh you've received an order with respect to that product but out so but let's say suddenly you have received the product but now uh you have received the order but now that product does not exist in the inventory anymore then you would like to cash back the user and tell him that that product does not exist in inventory anymore right so for that also you can set a trigger this is how you can do it that create trigger trcl delete on invent the table name for delete as we can delete from salesforid is equal to select PID from deleted like whichever uh product ID that you have deleted third let's say we are taking trigger to update the stock when the order quantity has been updated okay so we have taken example of an insert and delete now we're taking an example of an update now if you are trying to update the quantity like that you are trying to sell so we are taking that example now this time we are creating a trigger TR stock update to on sales table for update as we can now update stop set s quantity basically the stock quantity that you were trying to solve as quantity Plus select star from deleted so whatever you have deleted just select your quantity from that add it to your previous quantity and where your PID is the PID that you know deleting it from and then you're trying to set I mean vice versa is also there either you can add or you can delete depending upon that it will do the respective statement uh yeah yeah your quantity would be updated stock quantity would be a bit and another example that we have is triggered to check and update the stock when the order is placed so I'll just say take a look at it and just do not miss this rollback statement so what we are trying to do here is we're creating article TR event check on sales for insert as again we are declaring two variable Qs and QR where we are setting QR is quantity from inserted and we are setting Qs to quantity from invent where your PID is the PID and then we are checking if your Qs is greater than equals to QR so your stock quantity is basically greater than or equals to the quantity that you have then we are trying to update inventory when stock quantity is equal to stock quantity minus the quantity that you are trying to sell and then we are committing this transaction in if if let's say if this if this block does not execute successfully then all the things that we have done gets rolled back after them in elsewhere with that so if if does not exist uh if does not execute successfully then in else we are rolling back everything to the previous point where we started this transaction and nothing will be changed any doubts you can just type no in the chat foreign session and the rc2 camera is basically completed and now I would like to give you just some final tips and you should be good to go so your basic SQL level is done I think you know about most of the database objects now let's just go through them one by one uh like I'm gonna just ask you uh questions randomly so can we execute or can we connect to a database without a server or if you would like to have this question this way why do we need a server we need a server to store all the data okay it is remotely we can access reviews okay so let me give you an analogy so let's say you are hosting a website it is hosted on a particular server and then whenever someone tries to accept that particular uh URL it they are trying they are basically visiting that's getting all the data from that server and the website is showcased their particular local platform which edge browser Chrome browser and other browser correct similarly we need to host this database somewhere right we need a platform to host so similarly the database exists on a server if there would be no server then where we would host our database now you must have heard a term called serverless so generally nowadays what we are doing is everything is on cloud uh they are Azure SQL manageddb instance AWS SQL and sdb instance and those are managed instincts they are still on the server but the reason they are called marriage instances that you do not need to go into the hassle of managing the server itself you just get a DB instance on an XYZ server which is managed by the AWS Azure gcp or some other third-party vendor so those are management system managed instances but certainly for certainly they are also posted on server and the serverless concept is all together different that way we are but we have studied the database with respect to that there is no serverless thing as such whenever we are talking about serverless we are talking about function based approach that will be charged on the basis of a number of calls how many times we are calling a function or an ABN that's generally how a serverless approach works you know in today's world excuse me so any any questions why do we need a server or where do we host a database or why do we need that database on a server I am not anywhere else if someone asks you the importance of a server with respect to a database uh database cannot I mean it has to be hosted somewhere right it can be a virtual private server it can be a dedicated server it can be a reserved server it can be a shared server it can be a Cloud Server I mean there can be different can be hosted on any XYZ type of server but it needs a server to be hosted using which we will access our database or databases okay now uh within a server can be a multiple database yes okay now foreign system databases this is our Master database which will have all our execution logs and everything whatever we are doing XYZ activity on this server with respect to any database that Master database will show that temp DB will store all of our intermediate tables Common Table exhibition that we are writing we are creating temporary tables all the transaction logs that we are keeping when I say transitional I mean during the time it is till the time it is committed and we would like to do a roll back it executes the temp TV till the time uh micro msdb basically have all the what should I say it it has all the system related functions uh and all the system related tables I mean uh so there are many concepts related to back end of a of a database uh let's say indexing partitioning logging uh maintaining stats creating a backup creating uh different execution logs paths instances aggregated instances query plan optimization of query plan and what not all of those things related to the system are maintained in our MST and then the table have you heard of uh ERD entity relationship diagram yeah yeah so generally uh this particular so let's say are the database that we are talking about uh we do create a ERD but that that feature is not there available in this particular uh database instance but if you will see here we get different options right databases and Analysis service so when you connect to analysis services or any other uh let's say reporting Services you get an ERD option as well and those kind of things are stored in module this is how system databases work then database snapshots are created in this particular folder and they have the different databases are showcased then different Securities that like we can create multiple logins then have different server rules like bulk admin DB Creator these are the default server rules that are present by default in any database server uh remember that these are server rules not the database rules database rules would be different and you can go to the database zones here database rules and application now but this is a server rule so always be specific about that the credentials we are not able to see that audit log no we don't have anything and server audience specifically again we have nothing server objects backup devices nothing we have not attached anything so uh but we don't have anything linked servers uh so the reason you create a linked server is because let's say you would like to create a backup of your current server if your server goes down you would like to fall data fallbackup mechanism on another server so what you do is you create a linked server and you keep them always in high availability and you keep them in sync all the data is available all the time on both the servers but one server is in passive mode or a standby mode another one is in active mode as soon as your active one goes down your linked server which is in passive mode becomes active and becomes available to your audience or the users whosoever is using your application or your database for link service is important in that particular case triggers you have but not at the server level we haven't created any triggers then replication since this is a local instance we don't have any replication Factor but otherwise replication is how many copies of your database instance would you like to have so that in case if one goes down uh you can fall back on the other is a good feature that we have uh but again not in local then different management policies we have X event profiler is basically if you are running any scheduled jobs or something like that you can monitor those using X event profiler so these are the different objects now within a database this there we get the database diagram but yeah it does not exist as of now or have you do not have permission then we have tables We There are system tables that we are not able to see as of now file labels I think views okay system views all of the different views we have synonyms programmability strong procedure function database trigger assemblies types rules defaults and sequences they created my sequence right so this broker message type contracts queues services currently we are using these three ouch storage is yeah full text uh nothing you'll be able to see is the optical D we have any any questions do you have with respect to ssms like you would like to know any specific object what does it do why do we have it uh any any question deleted to this that all if not and then I have one question for you ah so let me let me go ahead and ask Mark of this question so let's say I want you have 10 tables right in your database now I want list of all the columns along with their data types yes list of all the columns of all those 10 tables along with their data types with the respective table name so I need to output something like table name column name data type how can I get that I think schema I'm sorry we can use key schema how can we use that can you guide me what should I write select I'm not not sure does anyone of you have that idea how to do this is [Music] but yes so we were talking about the system version tables and everything that we have everything that the database but we should also know at the same time how to query those if and when if you ever use his the use case that I told you right but there is one such table that we use see now what we're going to do is we're gonna have if you want table schema as well we can have table schema we can have table name column name and the data type now let's say I just made all of these details for address table and nothing else and all I need to do is just so it's a very uh useful table you should you should always be aware of the information schema it's a system table I think I'll be able to show you this uh I think it's a few rather not a table information schema yes correctly we are using this one it maintain all of your information information related to the table schema and everyone so feel free to query this or any other table so if you would like uh information scheme are related to tables you can use this one sequence your meta parameters domains domain custom string anything so always just go to system views try to find whatever you are looking for from the system perspective query them and voila you will have what you need I hope this was helpful I think I'll be on you for two minutes just clear up your head try to find any any question at all that you have if you don't have any question uh we can end up today's session and yeah thank you so much it was really great having you guys and I really enjoyed this boot camp and I would like to know your feedback mean while you can type your feedback well in the chat as well and if you have any questions we can think of that now I'll be interviewed for a while for a couple of minutes