Hello friends, welcome to Gate Smashers the topic is natural join in DBMS. In this video we are going talk about Natural Join. before natural join let me tell you  that I have also made the last video. In which I talked Types of Join. and I did a scenario discuss with the table. that, where we use join Meaning in which scenario do we use joints? So I am expecting that you must watch my video. so that you can know how we use joins? in which scenario do we use joins and what are their types so in those types one type is natural joins natural joins and this natural joins is a very important topic because out of all type of joins the most important is natural join because a large No. of questions come on natural joins and second thing I can say in short one who does not understand  Natural Join, cannot understand about Joins. So the first priority is to understand about Natural Join. Now in this video, we are going to discuss Natural Join. will discuss its syntax, with the example. Means with real life example, with the help of tables we will solve this question. By which you will get complete knowledge about the concept of Natural join let me tell here first. before natural join, if I only talk about join join always remember you. Join is what? It is cross product plus some condition. any condition can happen. any condition is there, but you have to remember this always. Join is always cross product plus some condition meaning whenever you come to Join, so by default assuming that there will be a cross product. and how is the cross product, what happens, we will discuss with the example First let me tell you the scenario. Here I have taken two tables, one Employee, one Department. In the Employee table, Employee Number, Employee Name, Address Department Number, Department Name, Emp no. and here some data I have inserted three or four rows here. Now if I want to ask a simple question here. There is a simple question. that if i want to print the name of employee To display the name of the employee or print who let's suppose belongs from Delhi From Delhi so how do we write? First of all whenever you come across a query You will get two types of questions. either you will come to query based on that you have to find the result Or you will have been given the result, and based on that you have to write the query. so you don't need to write query Queries will have been given in objective type questions. you can use them. But objective type question is for later. First I also want to learn how to frame queries. So we're going to do the same thing over here. That if you are getting question You have to print the employee name who belongs to Delhi. so whenever you get query first of all you have to check that from which table we can find answer to the query means you have to find first the table name find the name of the table from where you will get the output so if I have to print name of the employee who belongs to Delhi so Delhi means address of the employee is Delhi and their name means employee name means only with the help of employee table I will get the output and how do we write this simply by using the select command what do we write with select that which I want to get printed in output, display so here what do I want to be printed? employee's name because what is my question? To print employee's name who belongs to Delhi so select employee name from employee table table name, where address is equal to Delhi where address = Delhi so its a simple command the purpose to write this command is to tell you whenever a question comes first of all find the table from where you will get the output but this is a very simple question now we will talk about this question this is a important question find the employee name find the employee name who is working in a department what you have to do simply you have to find the names of employee who are working in any department and this in the same scenario means you are given two tables and on the basis of those tables you have to write its output or queries so from here I rub this as there is no further use of this query Find the employee name who is working in a department so what should come in output employee's name who is working in any department now employee's name first of all you find out that what all tables are required? employee table is needed obviously because in which table employee's name is there in employee, but that employee is working further in any department or not who will tell that department table how? see here employee 1 is working in department 1 what this 1 shows here this 1 tells that employee 1 is working  in department 1 employee 2 in department 2 employee 4 in department 3 and corresponding to them what are the three names corresponding to 3 employees Ram Varun & Amrit means Ravi is a employee who is not allocated any department till now so here we got the output by looking at the tables that what output I should get finally Ram, Varun and Amrit but how we will write this query? how we have to solve this query with the help of natural join and by default only natural join can be applied here although there are so many joins, we can also do with sub query but we will do this with natural joins First of all what is natural join? Whenever between two tables you have to equal some common attributes that is, what is the common attribute  between these two tables employee number look both tables have the same common attribute employee number their name should be the same, employee number there also employee number Now the values of these two employee numbers have to be kept equal, meaning they should be equal to whose corresponding equal is coming you have to print the value of those in final So whenever you want to equalize the value of common attributes so in that case we always use natural join So we start by writing its query select because in the final which output I want to show I write that select, what is the output to be shown?  Find the Employee Name So where is the Employee name here it is, the Employee name or Employee name Select Employee Name From Join I have already told you what is joining? Cross product plus some condition So first here it will be cross product, how? from name of the tables which tables do you need? of Employee and of department you have requirement of both the tables so what you have to write select employee name from employee, department. Now first of all come to this point what is the meaning of this employee, department? employee, department means cross product means you by default cross multiplied employee and  department, cross product their rows Obviously I already told that join is cross product plus some condition, whenever you apply condition there will always be cross product first, without that join is not possible So we did cross product of employee and department so what was the output? so to save time I have already printed their output Let me tell you what to do, what does cross product mean? Pick one row and multiply it with all the rows of second table, that is, the first row with these three, the second row with these three the third with the three the fourth with the three, means if a table has m number of rows and other has n number of rows total number of rows will be m x n in the cross product that I have already written here so here I have employee No. employee name, department No. these two I have picked up from the employee table and both of these I picked up from the department table You can also write all the attributes, there is no problem but because of space I have picked up two attributes you can write 3 attributes also you can write 6 attributes also that does not matter what matters? No. of rows. What will be the number of rows? 4 x 3 12, so I have written proper 12 number of the rows there now, What is a natural join? I have already told you the common attributes between the two tables that you have to keep equal have to keep equal make equal so I, of both the tables select employee name from employee, department where employee. employee No. this one employee.employee No. What is the meaning of employee.employee No.? Employee number inside employee table equals to department table.employee number this is the condition look what you did employee number inside employee table kept equal to employee number inside department table and this I am telling again and again whatever common attributes are there you have to keep it equal So I did the same, which is the common attribute in both Employee number and must be common At least one attribute should be common if it is not common then you cannot join two tables because what is the need to join, if one table is giving me some other information the other is giving some other information, both of them have nothing in common, then why should I join these two tables? So I will join both of them only when there is something in common and we have to keep that common equal just put equal, in the middle what I have put I've put equal This condition are also the condition of Equi join we write Equi join like this but we don't have to put equal there but we are talking about natural join right now so I will tell about that only if I tell this query when you did from emp, dept what were the no. of rows? 12 now what will happen over these 12 rows? this condition will apply where emp. emp No. should be equal to dept.emp No. So you first come to the emp. emp No. is equal to the deptt. emp No. are both equal yes both are equal If both are equal then we will select this row. Next emp.emp No is equal to deptt. emp No. are both equal No, so we will reject this row you just, 1 is equal to 4 No, 2 is equal to 1, No 2 is equal to 2, Yes 2 is equal to 4, No 3 is equal to 1, No 3 is equal to 2, No You should check for every row because whenever this condition comes it will be for every row, for the whole table, this condition will be for all rows of  table with cross product 3 is equal to 4, No. 4 is equal to 1, No 4 is equal to 2, No 4 is equal to 4, Yes So how many rows got selected 1, 2, 3 the rest of the rows which got rejected we will neglect them from here let's say this row is removed from here the rows which are deleted we delete them from here. So finally what output do I have? this 3 rows are here you can I write it here in total, 2, Varun D2, 2 4 Amrit D3, 4 so finally these 3 rows are left the rest of the rows are rejected so when these three rows are left finally means from here upto here, what will be the output of all this, this what is the output of this whole? this Now from the output of this whole what do you want to print? employee name so pick up employee name Ram, Varun, Amrit So what is the output Ram, Varun and Amrit and if you look carefully this output should only come because Ram whose employee No. is 1 he is also working in some department, Varun whose employee number is two is also working in one department Amrit whose employee number is four, he is also working in any department, who is rejected? C, Ravi because Ravi has not been allocated any department yet so I discussed a very simple example but this example will help you a lot. in any situation common attribute means which is same in both that attribute are to be kept same that we call  Natural Join Now the last point I tell you here now this query, how do we write actually in this way, select employee name from from first table name, employee straight natural join department that's it this is the actual way of writing but if I had written this before then you would not have been clear what natural join is doing what natural join is doing doing this by default if you are written from employee table 1 natural join table 2 you understand this but, but the common attribute inside these two tables their name should be same it should not be like that here it is employee No. it is E No. there is some employee number or the column name is different, column name should be same then only natural join can be applied otherwise you will have to write like this If you want to write a natural join then you can write directly, but if you look at both of these,  then what are the two what are the two queries equivalent, means if I open this query and explain then I will do in this way I have explained it first so that you can get to know how Natural Join works So natural join can be applied in two common, in two tables there should be common attributes, their name should be same whenever we keep the common attribute equal keep them equal it is called natural join. this is all about the what is the function of the natural join and how we use in a real life scenario this was in the term of sequel when we write this syntax in the term of structure query language in this way Thank you and if you like this video please like this please share this and please subscribe my channel Thank you.