hi everyone welcome back to my YouTube channel I am RTI and I'm back with another lecture in the dbms series so in the last lecture we got to know more on the relational databases in this particular video we would be learning about a very New Concept that is normalization in dbms so without any further Ado let's get started now normalization is quite important in terms of semester exams but it is also asked in interviews as well like tell about normalization what are the types of normalization what is d normalization so this is a important topic so don't skip this video always have a clarity about what normalization is what are the types of normalization in terms of interview point of view so let's understand about normalization normalization is a process in which we organize the data to reduce rency that is duplicacy of data and improve the data consistency that is same set of data is present across each data bases so it involves dividing a database into two or more tables now what is normalization consider that there is a table of employee which is having employee details such as employee ID employee name employee Department name employee Department ID and employee department phone number now there is a table of employee which is having all the details at such as ID name Department name Department ID and department phone number consider you enter the details of first employee so employee ID is one name is reti Department name is it Department ID is 01 and department phone number is considered plus 91 something now again you are asked to insert details of second employee who is in the same department so you go ahead and insert the detail of the second employee so here employee ID would be two the name would be considered Raj the department name is it the department ID is again 01 and the department phone number is the same which is given of of now here can you see that this department name Department ID and department phone number is something whenever we insert any details of the employee who is in IT department is getting repeated so here also we are repeating it Department ID Department name here also we are doing the same thing considered that there are bunch of employees who are in it department so we have to do this repetion each and every time whenever we are inserting any of the employee details who is working in IT department so what happens here is now you consider that if you want to update something that the department ID is considered now 02 so you have to go ahead and update for each and every employee separately so it is kind of increasing the duplicacy in the database because same set of data is getting inserted each and every time and it is a duplicate data so what we do here is we introduce a concept of normalization which says that if you are facing any duplicacy of data or any inconsistency of data so what is data consistency and how this data can be inconsistent consider that uh the department ID is 02 now for it so you updated it here you updated it here considered that there are n number of employees who are working in IT department and if you miss out to update for any one of the employee it will show the department ID as 01 for that employee but that employee is working in IT department so that would be a inconsistent or you can say incorrect data so that is why we can see that whenever we make a table which is having like details of employee ID employee Department details as well we can see that there is a data duplicacy as well as data inconsistency or the data consistency is very less so because of that we introduce the concept of normalization now what is data rency and consistency and why it's important so whenever there is a same set of data repeated at each and every time it results in the duplicacy of data that is the same set of data it01 which is getting repeated each and every time so which is resulting in the duplicacy of data now row level duplicacy can be removed by using primary key for Unique values now there are two types of duplicacy which happens one is column level and one is row level so here you can see that for certain columns Department name Department ID and department phone number these all values are getting repeated for some certain number of columns so this is called as column level duplicacy level duplicacy now coming to roow level duplicacy so in role level duplicacy what happens consider that there is ID and there is employee name so here you give the ID as one the name as consider RTI again you are giving the ID as one and the name as raj again you are giving ID as one and name as Rahul like for employee it won't happen but consider for school database or for college database there could be a possibility that there are two people who are having the same name so how you are going to differentiate between that two people because again ID is something on basis of which we are differentiating the name so if I'm giving R number one to Rahul Kumar and rle number one to Rahul Raj as well so how I'll differentiate that which Rahul is this Rahul Kumar or Rahul Raj so that is why we introduced the concept of primary key we will make sure that all the values which is present in the ID column if we are making it a primary key is unique as well as not null so whenever we make sure that this is unique and not null what will happen that the ID is one for RTI now the ID can be anything apart from one for Raj and ID can be anything apart from one for Rahul so this particular thing is now sorted because now we are getting unique values and in terms terms of ID I can find that which person is this like if I say that ID is two I can surely say that this is Raj if I say ID is three I can surely say that this is Rahul so basically on basis of ID we are somehow eliminating the duplicacy which was happening in each and every record for ID being one so in this way we uh remove the role level duplicacy but whenever we are encountering any column level duplicacy for that we take the help of normalization now whenever we have some data or some set of columns it leads to different anomalies or you can say inconsistency or error that occurs when manipulating or querying the data in the database so as I told consider that if you want to update Department ID so maybe you updated for each and every value but some of the values were left so there is a data inconsistency consider what happens is there is a new set of employees who come to our company and all these employees have left so if I delete the data of RTI and Raj we will lose the details of the department name Department ID and department phone number because I don't have any separate table where I have all the details like if it is a IT department what is the department ID and what is the department name and consider that if I want to somehow insert some data then again it will be same duplicacy which will happen for each and every employee for whom I am inserting the data like the same thing it01 and phone number would be repeating for them so that leads to anomalies now what are the anomalies first first is the insertion anomaly second is the updation anomaly and third is the deletion anomaly also it increases the size of database with the same data now again the same set of data is getting repeated each and every time so it is increasing the size of database because every time I have to give it Department name and department phone number each and every time so somehow it's increasing the size of our database it's increasing the data duplicacy or you can say the redundancy it is causing data inconsistency as well now these are the anomalies which happen whenever we have some rident or you can say duplicate data and inconsistent data now let's learn about each and every anomaly and understand that how this anomaly occurs so let's learn about very first of the anomaly that is insertion anomaly it occurs when it is difficult to insert data into the database due to absence of other required data now what does this means consider a very lame example that there is a student who took a admission in in a particular school now student is going to take admission in class 6 but right now he doesn't know that he's going to be in class 6A 6B 6 C like in which section student is going to get admitted he doesn't know he only know that he's taking admission in class 6 now in 6A there are different set of teachers who are teaching in 6B also there are different set of teachers in 6 C also there are different set of teacher now again this particular student doesn't know that which particular teacher would be teaching teaching him or her and again the class teacher would also be different for each of the sections so all these details the student who has just taken an admission doesn't know but we want to insert the detail of the student in our student database so for all these fields like what is the section what is the teacher name what is the class teacher name we have to keep it as empty or null because right now we don't know that what are the values or who are the person who is going to teach what is the section in which student would be admitting in so here also have taken an example that consider you want to add a new department but there is no employee in the department yet so consider that in our company there is a new Department which is being introduced there is it and HR department but now there is a supply chain department now for the supply chain Department this is a very new Department which is being introduced so I know the manager name of this particular Department I know the salary of this particular department but as of now there is no employee who is working in this particular Department department so I have to keep all these values as null and I have to only insert the department uh values because right now in this particular table we are having all the details of the department as well as all the details of employees but right now since this is a very new Department none of the employee is assigned to this particular department so for now these all values would be null so this is called as insertion anomaly when it is difficult to insert data into the database due to absence of other required data because consider that if ID is a prim primary key I can't keep ID as n right primary key what it says is if a attribute or a set of attributes is declared as primary key it will always be unique as well as not null but here we have to insert null value because right now in supply chain Department there is no employee who is existing so it will violate the rule of primary key that is why an insertion anomaly is caused whenever we have a big or you can say huge database where we are storing the details of each and everything now the second is delation anomaly now it occurs when we delete data it removes the other valuable data so consider that if we deleting the data of any of the employee it removes the other valuable data which we need for new set of employees who are joining the company so consider that right now all the employees have left the company so what it will do is it will delete the entire data which is present for all the employees now it has deleted the entire data but wait a second while deleting the entire data we are somehow losing the data of department manager and salary because we have deleted all the data which was present in our table now we don't know that what is the department what is the manager of that particular department and what is the salary because we don't have any other table where we have the details of Department the manager who is of that particular department and the salary details so somehow while deleting the data which is present in the table we are losing the set of valuable data which we requireed because consider that there is a new employee who has just joined the company now for that particular employee I know the name age and department but I don't know the details of manager and salary because it was present for the earlier employees but for that particular employees I have already deleted the data which was present so I won't be knowing that if the person has joined the HR department who is the manager and who is the salary so whenever we delete data it removes the other valuable data so consider if you delete all the record in the table you will lose the track of Department their manager and salaries now the third anomaly is updation anomaly it occurs when changes to data require multiple updates so whenever we are changing any set of data and it require multiple updates to be done because that particular data is present at multiple places so whenever we are changing any data that require multiple update then the updation anomaly happens consider you want to change the salary for people who are working in HR department you need to update it at three places so here you can see that there are three people who are working in the HR department and for now the people who are working in HR department have got an increment and now their salary is been increased to 12200 now we want to update at all the places where the HR department is present with the salary but right now we are only dealing with data of five employees but in general or in real life scenario there are always a bunch of employees who work in a company so whenever you want to update the salary of employees who are working in HR department it will require a lot of effort because that particular data would be present for lot of employees who are working and consider that by any chance you miss to update salary of one of the employees so it will show incorrect data that is data inconsistency would be there so it leads to updation anomaly basically we have to do multiple updates of the data where the data is getting changed so that is why updation anomally happens so how normalization help us here using normalization we can divide the employee table into two tables first table is employee table and the second table is Department table so let's see from here here you can see that department manager and salary is something which is getting repeated for each and every employee so what did we did was we broke the table into two subtes so the first table would be having details such as employee ID employee name age and department and the second table would be having details such as employee Department employee manager and employee salary so let's see so here we are having two tables employee table and Department table where in employee table is having details such as employee ID name age and department and now from this uh we can identify that which department the employee is and from the Department table we can fetch in the details such as Department name department manager and Department salary so we have broke the table into two parts so that we can reduce the redundency or data inconsistency which is being AED now the the first question which would be coming to your mind is here also in the department column we are seeing duplicacy the IT department is getting duplicated two times the HR department is getting duplicated three times now normalization doesn't guarantee you to remove the entire duplicacy or entire data rency what it says is it will lower down or it will reduce the data rency or duplicacy which is present in the table so normalization doesn't guarantee you to remove the entire duplicacy but it guarantees you to reduce the duplicacy or the redundency which we have now here you can see that the duplicacy is being reduced because now I just need to provide a department name for any of the person who is joining my company so let's see about all the three anomalies we discussed how normalization is helping us to reduce the insertion anomaly deletion anomaly and updation anomaly now consider that if there is a new employee who joined my company so I can fill in the details of employee ID employee name employee age and for now I can keep the department as null and whenever the employee is assigned any Department all the department details is present here so there is no duplicacy which is present for the employee there is no null values which are being given to the primary key which is present here we are only giving the department as n because right now I don't know which department the employee belongs to but whenever the employe is assigned a department I'll just fill in the department details and from this particular table I'll get all the details of the department Department in which the new employee would be working so insertion anomaly is reduced here now coming to the deletion anomaly consider that you are deleting all the data which is present in our table but still you have all the valuable information which you want because Department table is still there so you can know that if a person is in IT department which is the manager and what is the salary of that particular person even if you delete the entire record which is present in the employee table still you sustain the department information or the valuable information which is present there so deletion anomaly is also taken care or reduced now coming to the third that is updation anomaly so consider that if you want to update the salary of the HR people you just know need to go to this department table and you just need to update it here so there is a only single update which you need to do earlier you need to do it at multiple places because it was present in this particular table but now since it is divided into two tables you just need to update it at one place and it will start reflecting for each and every employee now coming to the types of normalization so basically there are three types of normalization the very first is first normal form or 1 NF then second normal form and the third normal form the bcnf or boy code normal form is a advanced version of the third normal form so we would be learning about each and every normal form in detail we will understand that how these normal forms are helping us to reduce the data redundency so in simple terms you can say normalization help us to reduce the data rency or duplicacy which which is present in our data it doesn't guarantees to remove the entire duplicacy or rency of data but it guarantees to reduce the rency which is present in our data so this was all about normalization in this video I hope you understood this video so if you like this video please hit the like button if you're someone who is new to my channel can go ahead and watch out the tech content first and if you find it useful can go ahead and subscribe also if you have not followed me on my social media handles you can go ahead and follow there I update about most of the resources which are being asked in the interviews which would be very helpful for your placement and much more things till then take care keep learning keep growing keep smiling bye all