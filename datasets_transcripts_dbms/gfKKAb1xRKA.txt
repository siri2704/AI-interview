hello good morning students today we are uh going to discuss next unit three relational data model in this video uh we have to discuss uh introduction EF CS rules and explanation about relational data model okay let's start relational data model introduction okay in 197 is EF code of IBM the relational data model was introduced in 1970 by EF C of IBM and it's in his Landmark paper that paper is known as a relational model of data for large shared data banks okay uh the relational data model represented a major breakthrough for both designers and users it provides a complex conceptual simplity uh actually in 1970s Court's work EF Court's work was considered ingenious and impractical due to lack of computer's power to implement relational model okay after that computer efficiency was increased uh as an impact of C paper system R project was developed during the late 1970s by IBM San Joo research laboratory in California this project was developed to prove that the relational data model was implementable okay uh actually the outcome of system art project was development of a structured query long Bas SQL which is the standard language for a relational database management system in relational data model the relational data model was implemented through rdbms relational database management system some of the relational database management system products are ril's SQL db2 Microsoft SQL Server MySQL like that okay and one of the important advantage of relation database management system is it's uh its ability to hide the complexities of the relational model from the user that means it provides a flexible uh environment to the end users and designers okay and the rtpms manages all of the physical details while the user sees the relational database as collection of tables in which data are stored okay okay so next EF CS rules uh in 1985 to evaluating a relational data system database system Dr EF Cod published a list of standard rules okay those rules became a standard became a standard way of evaluating a relational database system so what what was his concern to publish all those uh uh list of rules to evaluating relational database system uh Dr EF C published these rules uh uh actually what his concern was that many vendors were marketing products as relational even though those products did not meet minimum relational standards okay that's why in order to evaluating relational database system he has published uh rules some of the rules okay those rules was known as EF code rules after publishing the original article the Cod states that there there was no system that will satisfy every rule but these rules represents relational model ideal and remind a goal for relational database designers okay that means when you are going to uh implement or when you are going to design a relational model you must consider you must follow the rules which are Guided by the EF code okay then only that uh relational data model uh meet all the requirements of the uh relational rdbms okay coming to the rules the first rule is known as the information rule what is the information rule all the information in the relational databases must be logically represent as column values in rows within the tables that means the data will be represented in the form of table table is nothing but intersection of rows and columns and second rule is guaranteed access rule as per this rule every value in the table is guaranteed to be accessible through a combination of table name primary key value and and column name every data element should be un unambiguously accessible okay that means whatever data uh you have you maintained in the table every value in the column should be guaranteed to be accessible okay through a combination of table name primary key value and column name and third one systematic treatments of null values okay what are the nulls ns are distinct from empty characters strings are string of blank characters and distinct from zero and any other number okay actually what what are the nulls uh null means uh if there are uh if there is if there is any not applicable value in that column just you leave it as a blank okay it's a empty that value is called as nulls actually those nulls are fully supported in the relational dbms for representing missing information or inapplicable information in a systematic way independent of data type okay why because when you are going to uh maintain the data in the tables some of the columns may be not applicable in that particular situation okay some of the data may be missing okay so in that situation we have to represent those missing information or inapplicable information with the null values so null values are fully supported in the rdbms okay this is the third rule coming to the fourth rule view updating rule what is view actually view is a virtual table based on the result set of an SQL statement okay uh it's not a original table but the word the virtual table constructed based on the result set of an SQL statement okay and any view that is thetically updatable must be updatable to the system that means all the records in the file must be able to added deleted or updated with the singular commands Okay like normal table uh in view also we can all we can add records delete records update records with the singular commands that is view updating rule okay uh coming to high level insert update and delete okay the database must support set level inserts updates and deletes what are the meaning of set level inserts updates and deletes means uh uh you can insert multiple mulle records at a time you can update multiple records at a time you can delete multiple records at a time with a singular command those inserts those inserts and those updates and those deletes are called as high level okay so those set level inserts updates and deletes operations should be supported by the rdbms database okay coming to the physical data Independence physical data Independence what is physical data Independence okay uh that means application programs and ad hoc query facilities are logically unaffected when physical access methods are storage structures are changed that means when you are using a new storage device like hard disk or Magnetic Tape modifying the file organization technique in the database or switching to the another data structures or changing access methods the application programs already existing existing application programs and ad hoc uh facilities are not are are logically unaffected okay that is called as physical data Independence coming to next uh rule Dynamic online catalog based on the relational model already we know that what we know that in database along with the data we are going to maintain metad data okay that what is metadata metadata is nothing but data about data is known as metadata and data dictionary also that metad data also must be stored and managed as a ordinary data that means in tables within the database okay the main Moto is such uh metadata must be available to the authorized users using standard database relational language okay that means the metadata means the database descriptions the data about the data should be accessible to the users and next comprehensive data sublanguage rule the next rule is uh what is this rule the relational database uh supports many languages okay that means it supports it must support well defined declarative language with support of support for data definition view definition and data manipulation Integrity constraints authorization and transaction management all should be supported uh in that well defined declarative language okay okay that type of languages should be supported in the relational databases okay uh that means uh in rdbms it provides an declarative language what is the declarative language in declarative language you need to specify what must be done no need to specify have it is to be done that means no need to write a lines of codes okay so within the query format you can specify what do you want that's all uh and uh it's a declarate it provides a declarative language with support of data definition ddl languages tml languages commands ddl is nothing but used to define the structure of databases database objects like tables views indexes like that and data manipulation means perform operations on the data within the databases like insert the data update the data modify the data and coming to Integrity constraints so Integrity constraints are used to ensure uh uh um use it to ensure correctness of databases okay so Integrity constraints uh constraints nothing but rules and regulations uh we placed on the data in the database tables to ensure correctness of data okay and authorization and transaction management all should be supported in the languages or those long wages should be supported or should be available in the relational databases okay and coming to logic data Independence already um we discussed physical data Independence here here is The Logical data Independence what is logical data Independence uh logical data Independence means when you add or modify delete a new attribute okay or uh merging two records into one or breaking existing records into one or more records so whatever changes you can do the application programs and ha query facilities are logically unaffected okay that means when you are made any changes to the table structures that means changing the order of columns or inserting columns the application programs and ad hoc query facilities are logically unaffected okay you need not to modify those application programs and ad hoc quy facilities that type of Independence is called as logical data Independence and coming to in Integrity Independence okay what is integrity Independence Integrity Independence means all the Integrity constraints or rules must be definable in the relational language and stored in the system catalog system catalog means metadata or data dictionary not at the application Level okay so um when you define when you define some constraints along with the table definition all those should be stored within the metadata okay not in the application Level that's very very important this is known as Integrity Independence and next one is distribution Independence what is distribution Independence a relational database management system always has distribution independency why because the distribution independency means user should not have to aware of whether the database is distributed or not okay so why because no need to know about whether the database is distributed are centralized okay uh the database design should allow for distribution of data over Central over several computer sites actually the relational databases are distributed among several sites but the user need not to know about whether uh the database is distributed or not he can able to access uh the data as a uh single databases okay coming to non subversion rule okay so if a relational system has a low level low level means single record at a time language that low level cannot use to bypass the Integrity rules and constraints expressed in the higher level relational language okay that means multiple records at a time that means uh low level low level commands that means uh that affect a single record at a time commands uh those uh cannot bypass the Integrity rules and constraints expressed in the higher level relational language language commands that means uh uh those affects the multiple records at a time okay and coming to last one rule zero so all the preceding rules are based on the notation that in order uh in order to for a database to be considered relations it must use its relational facilities exclusively to manage the database okay so all the rules indicates that the database to be considered as relational database okay so when you follow all these when your database when your relational database follows all these rules it must use its relational phys ities exclusively to manage the database well okay coming to relational data model relational data model was introduced by EF cod in 1970s actually uh it's based on it's developed based on some mathematical Concepts those mathematical concepts are predicate logic and set theory okay so what is predicate logic predicate logic used extensively in mathematics uh which provides a framework in which uh the assertions that means the statements can be verified as either true or false and coming to set theory set theory used in mathematical science which deals with sets a group of things uh and used as a basis for data manipulation in the relational model okay so actually these are the backbone for uh uh backbone to the development of relational model purely the relational model was based on the mathematical concept those concepts are predicate logic and set theory okay and in this uh relational data model all all the data we used to maintain in the form of collection of tables okay mainly this model was built on mathematical Concepts and here in relational data model the data and relationships are represented by the collection of interrelated tables or relations okay that means uh uh the data was logically uh expressed in the form of tables or relations what is table table is nothing but intersection of row and column and it is it's a two-dimensional structure which consists of rows and columns okay and uh each relation or table has a name and having some number of columns okay and this relational data model is a combination of three components such as structural integrity and manipulative Parts okay so coming to structural part what is the structural part this structural part defines the database as a collection of table are tables or relations okay so first of all we are going to define the structure of the table what is the table name uh what are the columns we are going to uh store in that table what type of data we are going to store in each column okay that comes under uh U structural part okay and coming to Integrity part the database Integrity is maintained in the relational model using primary key and foreign Keys okay so to maintain the correctness of data and consistency of data and also maintain the relationship between among the tables we used the we used the concept of primary keys and foreign Keys okay actually with the help of these Keys database Integrity is maintained here and coming to the manipulative part manipulative part means how we are going to perform data manipulations manipulations on the data in the tables or relations okay for that we are using the relational Al zebra and relational calculation calul Calculus Tools these are the tools used to manipulate in the database okay and thus the relational data model has a strong mathematical background and some of the relational database Management systems are db2 inic Dynamic server IBM rackl rtb rackl SQL server and access Microsoft like that okay and what are the relational data model Concepts so how we are going to store uh data in the relation or in the table okay so first of all we are going to know about some terminologies the first attribute okay each column in the table is known as attributes okay attributes are attributes are the property which defines a relation attribute is a characteristic characteristic of a table okay and attribute which is used to define and store the data in the table or relation example role number name address other number phone number like that okay and coming to tables so in this relational data model the relations are also known as tables okay and ER data model those are known as entities okay every table table has two properties rows and column table is nothing but a two- dimensional structure which is composed of row and column okay here the row represents records and column represents attributes okay coming to tle tle is nothing but a single row of a table is called as a or a single record in the table is known as tle I'm coming to relational schema relation schema so relation schema is nothing represents the name of the relation with its attributes okay for example if you have a student table with a student rooll number student name student marks like that then you are writing the first of all you have to write the uh relation name what is the relation name here student student uh and uh you can write those attributes after that table name a student name student number student number student name address Max forone number like that okay uh that schema is nothing but relational schema okay and coming to degree what is degree degree means the total number of attributes in the relation or in the table are called as degree of the relation what is cardinality cardinality means the total number of rows uh present in the table okay and coming to relational instance what is instance relational instance is a is a finite set of tles in the rdbms system okay so that means all the records all the tles all the records all the rows all the records uh are known as relation instance okay relation instances never have duplicate doubles so okay those records are those row never h never never to be duplicated okay that means uh uh every relation contains a finite set of tles which does not contain any duplicate row or record okay and coming to relation key every row has one or two or multiple attributes which is called a relation key which is used to establish a relation among tables and coming to attribute domain every attribute has a some predefined values and scope which is known as the attribute domain okay attribute domain means uh it contains a range of values for example uh when you have a GPA column okay then when you have a GPA column in your student table uh just the minimum value is zero and maximum value is 0.0 and minimum maximum value is 10.0 like that okay when you have a Max column uh for individual subject then you you need to enter the minimum value uh from zero to maximum value 100 or 75 like that so every domain every attribute has a range of values from minimum to maximum value that is known as attribute domain and coming to the characteristics of a relation or table okay how we are going to represent a relation or a table what is table table is is a two dimensional uh structure which is composed of rows and columns okay every table's row row means it's a known as tle also represents a single entity occurrence within the entity set already we know that this terminology in ER model okay and each table column represents an attribute uh and has a distinct name every column every column has a distinct name okay and a e row and column intersection represents a single data value also data value only and coming to next all columns in all values in the column must confirm to the same data format okay uh that means uh in uh in one column we are going to store numbers then all values must be the numbers format okay uh when you are storing a character character format data in one column all column values should have a character format like that okay and each column has a specific range of values known as attribute domain okay um and the Order of rows and columns is immaterial to the dbms okay the order of rows and columns and each must have an attribute each each table must have an attribute or combination of attributes that uniquely identifies each row okay every table should have a uh should every table should have a key that key is known as primary key that is composed of one attribute or combination of attributes that are used to identify each and every row uniquely okay so if a table satisfies all these characteristics then only it is said to be relation just see this diagram then you can understand uh and first just see this terminology the user and model and programmer okay user Row tle Record is the same column attribute field table relation and file okay just the terminology synonyms for Row for column and for table and just see this diagram then you can understand what are the table characteristics okay table is composed of rows and columns okay and uh every uh table uh some tles some attributes and each attribute has a distinct name S ID s name s s class and S section those are the distinct names okay and uh each record is called as a entity instance okay and each intersection of row and column represents a single value Just You observe and every cell it represents it contains only a single value multiple values are not allowed in this table format okay and each table should have a primary key to identify each and every record uniquely here we are taken the attribute of Sid student identification okay just observe the identification values okay those are uh 1 1 0 1 1 1 02 1 1 03 1 1 04 11105 this attribute values are unique that means no duplicate values and no not null values also no null values also okay that's why but by using the Sid column we used to identify each and every record okay so this is the table which satisfies the table properties okay and the degree of relation means the number of columns in the relation are five and cardinality means the number of rows 1 2 3 4 5 okay here this relation or table contains five rows and five columns here the five columns here the five rows okay this is a table which is known as relation also these are the records are known as tles and columns are known as attributes advantages of using relational model what are the advantages simple City first one simple City okay when compar to the hierarchial and network model uh it provides a major breakthrough for both designers and users it provides a simple ified and flexible environment to the end users and designers so it provides simple City okay and coming to structural independency structural independency means uh structural independency that means uh if you change the structure of the table you need not to change the application programs the relational data model is only concerned with data not with the structure that means no need to know about the physical storage details uh just you concentrate on how the data can be viewed okay just the this property can improve the performance of the model and next one easy to use why because in relational data model the data will be logically represented in the form of tables consisting of rows and columns okay so when you represent the data in the form of tables and columns it's quite natural to S to understand very is uh easily okay and query capability query capability means in relational data model it provides high level Quarry languages like SQL SQL is a declarative language okay no need to write a codes of lines uh just by asking a query or question uh you can uh retri whatever data you want okay uh so it's a qu capability next one data Independence so data Independence means the if you make any changes to the existing data no need to change the application programs also okay coming to scalable scalable means recording a number of Records rows or number of fields a database should be enlarged to enhance its usability okay so that means uh bulk amount of data large huge amount of data to be supported in the relational data model data models databases data models databases okay okay so coming to frequently asked questions uh what are the EF Cod rules explain this is for five marks question okay uh this is for sorry this is for essay question this is very very very important question and next one is what is relational model and explain then you can write all the introduction and the concepts also and third one uh explain relation are table characteristics okay this is for five marks question it's very very important question okay so students listen carefully and write the running notes if you have any doubts just contact me and clarify your doubts thank you