in the previous video on entity relationship models we created a model representing information about songs albums and musical artists here is a diagram representing a portion of the concepts that were modeled in this video we will learn about features of extended entity relationship models by building on this diagram the First new feature that will be introduced is the specialization Circle which allows us to split entities into different subtypes for example an artist could be a band or a solo musician as shown here the band and musician entities split off from the specialization Circle to indicate that each is a subtype this is also indicated by the subset symbol that is along each line drawn to the circle subtypes have a is a relationship with their parent entity every musician is an artist and every band is an artist which means that each inherits the attributes of an artist namely an artist ID and a name the D in the circle indicates that the two sets are disjoint an artist is either a band or a musician but not both in fact an artist must be one of these two options which is why there is a double line from artists to the specialization Circle to indicate total participation in the specialization it is not possible to have an artist that is neither of these two options in some cases a band might consist of a single musician but in this case the name of the band will be distinct from the name of the musician and have its own artist ID recall that it is also possible to have artists that have not actually released any songs which is allowed mainly to support the existence of artists that only feature in the songs of others but also allows us to model the members of bands as musicians a band is made up of musicians as shown by the relationship connecting these sub-entities and each musician is an actual person with attributes such as a date of birth and a derived attribute age which does not need to be stored for now we'll assume that the artist attribute name that is inherited by a musician is the full name of the musician but this aspect of the model will be revised later a band can have a distinct set of attributes as well such as a founding date and a derived attribute for the number of members note that for Simplicity we are not accounting for bands whose membership changes over time it is also possible for a specialization Circle to contain an o meaning that the subsets are overlapping which is the case for the subsets of the musician entity musicians can take many forms they can be singers different types of guitarists drummers keyboardists or other types that we won't list for the sake of simplicity since we are leaving some options out violinist for example there is only a single line to the specialization Circle indicating partial participation the reason that an O is used to indicate overlapping subsets is that a musician can fill multiple roles in a band as both a singer and a lead guitarist or any combination of roles in addition to overlapping and disjoint subsets it is possible to have a subset without a specialization Circle to indicate that some instances of identity fall into a particular sub entity an example for albums would be movie soundtracks which are just like regular albums except that they are also associated with a movie attribute it is also possible for an entity to have multiple distinct specializations corresponding to different categorizations for example in addition to it being possible to categorize some albums as soundtracks a distinct question we can ask of all albums is whether it is a single EP LP or double LP now the distinction between these terms is a bit fuzzy and since their original definitions were at least partially related to the available storage space on vinyl records their definition has become even more muddled in the era of digital music however for the sake of demonstrating the capabilities of the extended entity relationship model let's pretend that these terms have strict definitions specifically we'll Define a single as an album with an overall length of 10 minutes or less and EP or extended Play album will be an album with a duration from 10 to 30 minutes and LP or long Play album will be between 30 and 70 minutes and a double LP will be anything longer than that notice that these definitions all depend on the total play time of the album which is a new uh derived attribute which can be calculated because we have access to all the songs on the album and can add up their durations this allows us to categorize each album into exactly one category in terms of the rules we have defined as you can see the rules themselves are placed along the lines connecting to the specialization Circle this makes it clear what properties each category has it is also possible for one entity to be a subset of two or more supersets which means that it is known as a shared subset and will inherit attributes from multiple superset entities for example musicians are simply people and we can model the musician entity as a subset of a person entity this allows us to clean up the model in several ways by moving the birth date and derived age attributes from musician to the person entity the person will also possess a primary key person ID as well as a first and last name each musician now inherits their first and last name from the person instance but this means we need to change the name possessed by artist the new artist name will be a derived attribute which will be the first and last name of the musician which actually comes from the person in the case of a solo artist and for a band it will simply be a new attribute of the band entity called band name note that every band will inherit an artist ID from the artist entity but musicians will now inherit both an artist ID from the artist and a person ID from the person the person entity needs a person ID since first and last names are not enough to distinguish people with the same names also although it may be unlikely for two people with the same name to have the same birth date it's not impossible the final feature of the extended entity relationship model that we will discuss is a union which is one category from a selection of multiple supersets in other words an entity can be specified as being a subset of one and only one of several supersets in fact the use of a union is an alternative to using multiple subset specializations so I will change this diagram into this diagram in this version the artist is a union of bands and musicians so rather than have musicians and bands be distinct subsets of the artist we can have an artist be a union of bands and musicians this change means putting the union symbol which looks like a capital u inside the specialization Circle and drawing the subset symbol on the line from artist to the circle in fact this change results in some subtle differences to the model before every musician was an artist even if they didn't record songs as a solo musician if we wanted to maintain that requirement we could put a double line on the connection from the artist to the specialization right here a double line here would mean that every band and musician has to be an artist however we are only using a single line here and here but a double line here this means that it is possible for a musician to not be an artist but we still want every band to be an artist so the band has total participation switching to the use of a union changes the direction of inheritance musicians no longer possess artist IDs or artist names but an artist can be a musician and that would mean that it possesses a person ID and other person attributes derived via this sequence from person to musician to artist however an artist that is actually a band will not have any of the person attributes and will only have these band attributes while there is no one correct way to model a given Enterprise various modeling decisions do have advantages and disadvantages it may be necessary to revise a model many times as a consequence of various decisions that are explored and since neither ER nor eer models strictly map to a specific implementation there is yet another design level beyond the diagram that still needs to be considered when constructing a database still the tools available for ER modeling Grant sufficient flexibility to realize your design goals if you are clever enough to use them correctly