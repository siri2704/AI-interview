hello everyone and welcome to my YouTube channel data science nerd so today we are going to discuss a very important topic which is often asked in interviews basically it's a type of theoretical question so basically interviewer ask that what is the difference between SQL and nosql so I hope you might have heard this question very frequently and you might find this interview question in many like interview guides cheat sheets and some interview question booklet as well you will find this question very common so let's understand basically the application of it not just theoretical theory that you can by heart and just explain it in the interview but let's understand what is the actual meaning of it okay so let's see first when I say that that SQL and nosql so actually remember one thing that both are database management system only but how do they differ actually they differ in their structures they differ in their functionalities okay they differ in their use cases so let's talk about one of it first let's say talk about SQL okay let's talk about SQL versus no SQL okay this is our question so let's say when I say that SQL right what do you mean what do you understand that SQL is what see first of all the structure of the data in SQL is structured data okay structured data data okay the second thing is these are the relational database that's why you might have heard that they are also called as rdbms relational database management system because SQL is a database management system right dbms and it is relational in nature that's why we call it as relational databases okay so they are relational in nature relational data okay so you can not note it down if you are a fresher right you can note it down if you are already experienced person you can just directly watch the video without noting it okay the third point is very important point you might have heard about the acid properties right acid properties have you heard it what is AET properties atomicity consistency isolation and durability okay I hope you have heard this properties and you have not heard these properties and don't know what are these you have a homework just go to the internet search what are acid properties and don't just learn the definition just learn the with examples that what is the meaning of atomicity what is the meaning of consistency with with with data in your hand right with the example of data so that you can understand it better right you don't have to like byal it right so the next point is it is scalability okay what do you mean by scalability so scalability basically means let's say you have a uh like these types of data which are stored in basically servers right the data you are going to store in servers right so the thing is once you are going to like increase your data right let's say you your SQL database are going to increase right what is the actual application of it with with relation to the like memory capacity where you are going to store the data right so it means that you are going to there is a single server this is a single server okay now what you going let's say this server is of 100 GB okay now once your data gets increased now what you are going to do instead of this particular server you are going to use another server which is of 200 GB data okay now you will not use this particular server but you will use this particular server for higher memory so that you can store more data so this type of scalability is called vertical stability okay vertical scalability see I'm explaining you very like in-depth concept as well these types of concept Concepts like nobody explains right I'm just going in depth of everything so that even who are freshers can go through this and they can easily learn all these things okay now you might have heard that this MySQL post gql poql Oracle databases all these are example of what rdbms Rd BMS rdbms means SQL uh SQL okay database management system relational databases so this is about SQL okay I have written five properties you can just note it okay I'm just clearing this board okay because I'm moving to no SQL okay so let's talk about no SQL okay okay when I say no SQL what do you understand just by the word so SQL means SQL when we talk about SQL what we understand that it is related to a structural data okay but when we say no SQL it is mostly related to either unstructured either unstructured or semi structured data semi structured data okay second point is can you tell me what will be the second point so there the data is a relational in nature okay here the data is non relational in nature non relational in nature okay so can you tell what is the meaning of it non relational in nature means they cannot fit into they cannot fit into tabular format schema okay tabular format schema so like like in SQL right we can fit that in table formats that cannot be applied here okay that is the meaning of non- relational in nature okay so now tell me have you seen that scalability right so there is a property called CAP theorem so I'm explaining you so these are very in-depth concept okay like most of the you will find that most of the teachers they will ignore these types of things okay so cap theorem basically means it means consistency consistency availability availability and partition tolerance partition tolerance this is the cap theorem okay so what what basically I'm just explaining you cap theorem because see these no SQL databases right they handle a very large volume of data very huge volume of data they don't care about structural data they are are mostly dealing with unstructured and semi-structured data so can you tell me when when a data gets transformed right from from unstructured and sem structured data to structur data basically you are cleaning your data right you are applying various filters you are removing null records you are removing dup duplicate records and you are like making making your data in a very structured format right but when the data does not get structured before going into the structural data when the data is present in an unstructured format the size of the data is actually very very huge okay so what is the purpose of no SQL databases they are their priority is not to follow this Gap theorem that means their priority is not to follow consistency avilability and partition tolerance instead their their like uh priority is they basically prioritize performance and scalability scalability performant and scalability over over what over these three things okay that means they prioritize these performance and scalability instead of priori prioritizing these Gap theorem things okay so now coming to the scalability point so you have seen right that uh we saw that there was a point of scalability in SQL databases so there we saw that what is the meaning of horizontal scalability now no SQL databases for horizontal scalability horizontal scalability okay because there they followed right vertical stability scalability right so what is the meaning of horizontal scalability so they that means in vertical what what is the meaning of vertical I writing vsss vertical stability so there we had a 100 GB of server for example let's say we have 100 GB of server and now our data got increased now what we will do we will replace that server again with the 200 GB of data 200 GB data of server right server of 200 GB data now again let's say data got increase now we cannot use this we will replace this again with a three 300 GB data okay 300 GB server okay this is the what is called as vertical stability now what is horizontal scalability now let's assume I have a 100 GB of server okay my server capability is 100 GB now instead of like replacing this particular uh server because now I'm going to add some data right let's say my data got increase up to 50 GB additional apart from 100 GB so my data now becomes 150 GB but my server capacity is 100 GB only so instead of vertical scalability in horizontal scalability we are going to add another server with apart from this particular server so we will add 150 GB additional to distribute this 150gb load into this one and this one have you got my point I not going to replace this instead I will add another server of the capacity which is required so that my this particular 150 GB of data can be distributed so this is load distribution what it is load distribution so this is these are some technical terms okay see I can challenge you this that you can see n number of videos n number of videos you trust me just watch these videos SQL versus no SQL and let me know if anybody explains this way let me know that if anybody can explain like in this much depth okay I can challenge this you can go and watch any of the video okay so okay coming to the point I'm not here to praise myself just telling the fact okay so can you tell me some like famous no SQL databases anyone so mongodb you might have heard mongodb right mongodb Cassandra or redish and nowadays there is a very famous database we know this Neo 4J which is a graph database it's very popular actually in Industry not many many companies are using it but they have a very like like this this is very trending in Market at this moment so in case you want to know about graph databases as well and you want a separate series on that please let me know because my like latest project was on a graph database so from past like one year I learned a lot about this graph databases NE 4G so let me know if you want a separate series on this because I have like a lot of on a lot of things on this graph databases okay so in case anybody is interested in it but I need at least 1,00 2,000 members who want to learn this okay only then I can make some lectures on that now I hope you got this right okay that what I was trying to explain so the one important point was vertical scalability versus horizontal scalability cap theorem AET properties acid properties these are very basic thing that you all should learn okay like there is nothing very rocket science in this it's just basic terms okay you can just go and watch any video or you can just go and read on internet okay that what are these things okay so I hope you got the clear difference between SQL and no SQL databases okay so now please if you like this video if you have learned something from this video please do like the video do subscribe the channel and please keep subscribe this channel so that at least my new videos keeps coming to you at time okay and please do share this channel to your friends okay with your friends your family members whoever are like working in this data domain okay okay thanks a lot