[Music] thank you [Music] Hello friends welcome back to our channel so in today's session we'll discuss about one more normal form that is a 2nf second normal form so this is a one more level of normalization in order to avoid the red energies and overcome the anomalies so in the previous session we have seen about the one enough that is the first normal form where the relation should not contain the multiple values for a single attribute so if there are any multiple values for a single attribute just we have we have to insert a new rows and we have to avoid the multiple values and coming to the second normal form the input for the second normal form is relation relation with with 1 and F so that is the first constraint that means first condition so if you want to check for the 2nf so the relation should satisfy the 1nf condition okay so this is also pointed as a second normal form of 2N right and the output the output for this one is relation with a 2nf is a relation that means the relation which satisfies the conditions of two elements right now we will see the conditions conditions need to be satisfied to say the whether the relation is in 2nf or not right so the first condition is the relation should be in one minute so first we have to check whether the relation is in one and a formula so if not first we have to achieve the 1nf that means we have to make the relation in one another that's the first condition the second condition relation should not have partial functional dependency partial functional dependency right so in the previous sessions we have discussed about the functional dependencies and in in that video we have discussed about the two different types of functional dependencies that is a fully functional dependency and a partial functional dependency right so I will post the link in the description so that first go through that one and then you you'll get a clarity about the partial functional dependency so at a glance I will just recall the concept so for example if any functional dependency in this format some X comma y tends to J so this we call it as a dependence and this determinants and this is the dependent so that means we can say Z is functionally dependent on X comma y x comma y right so that implies by knowing X and Y values with the help of X and Y values we can determine the Z value from the relation right so if x comma y tends to Z is a functional dependency then if it satisfies any one of this condition that means if you know the value of x if you can determine Z or if you know the value of y if you determine Z so any one functional dependency is true that is a partial functional dependency okay so here we are removing one attribute from the determinant and still there is a functional dependency exist that we call it is a partial functional dependency right so that we have discussed in the previous sessions I will post the description so just go through that one so this is the thing so if any one of these functional dependency if any one of this one is a in functional dependency we can say it is a partial functional dependency so we have to find out this one and we have to find whether there is a partial functional dependency or not if so we have to remove that partial dependency by decomposing the relation into sub relations okay so the release two conditions to satisfy whether the relation is in 2 and F so that is the first the relation should be in one NF and then the relation should not have the partial functional dependencies now let us check with a small example see let us take this example so there are three attributes in this particular relation so that is a student ID course ID course fee right so first we have to check whether there are a multi-valued attribute this is multiple values for any single attribute right so you can observe for every column we are having only one attribute so that implies this is in this particular relation is in 1 and X 100. right so we have to check whether this relation is in 2 and a format so for that we have to find out the functional dependencies and we have to find out whether there are any partial functional dependencies so if there are any partial functional dependency automatically we say that the relation is not into n so that we have to avoid that partial functional dependencies that means we have to remove the partial functional dependencies so that this relation will become the 2nm that means we have to decompose this relation to the sub relation so that it will be uh into NF right now let us check with the functional dependencies so I will take the functional dependencies so student ID tends to course ID and student ID tends to course fee and course ID tends to course fee and student ID comma course ID tends to cos Phi student ID course fee tends to cosine course ID right and then core Sufi comma course ID tends to student ID right so these are the possible cases now we can check whether there is a functional dependency or not for all the things so functional dependency means on the left hand side the determinant and right hand side is the dependent whether CID is dependence on the functions dependent on the determinant or not that means we have uh we have studied about this functional dependency in the previous session so we have to check for one constraint that we have to consider two random tuples so that the x value or equal if both the tuples are having the same x value the corresponding y values also should be same then only we can say there is a functional dependency so once just go through the functional dependency concept video right so here let us check student ID and course ID student ID let us take a two two plus one zero one and one zero one so one zero one let us write one zero one and one zero one two two pulls x value is one zero one one zero one and here we are getting Java as a course ID and here we are getting C plus plus as a cosine so there is an redundancy so we can't say this is as a functional dependent right so considering two different X values there should be corresponding y values then only we can say that it is a functional dependence so here there is no functional dependency so this is not a functionally dependent now let us take this one student ID and course V student ID again you can check for the first open and second to pull so here I'll write it a numbering okay so it will be understanding so consider the first uh triple and the third triple so again we are having one zero one and one zero one so corresponding course fee one zero one course fee is some ten thousand and one or one two thousand so here for the same x value we are getting different y values so this is also not functionally dependent so we can't say this is a functionally dependent right cancel this one course ID and course V so consider see first one and fifth one so first one and fifth one we are having the x value as Java so what is a corresponding y value here at 10 000 for the first triple and coming to the fifth triple again it is a ten thousand yes so both are X values both X values are same and corresponding y values is also same consider yes so that's the only thing we have that is repeated in the table Java and Java so all the remaining are unique so we can say this as a functionally dependent okay so this is one functional dependent right and now let us consider these things about these functionality dependents because we have to eliminate the partial functional dependency so when we will get the partial functional dependency if the determinant is having some set of attributes then only we can say we can we can say the partial functional dependency and the full functional dependency but here the determinant is only one attribute so we can't say it is it has a partial or full functional dependency okay there will be no partial dependency it's a full functional dependency now coming to this one student ID and course ID combinedly determines the course fee okay so don't uh think it has a two different attributes okay two different attributes given to the same thing so this the meaning of this particular functional dependency means by knowing the student ID and course ID the combination of student ID course ID it should build the value of codes fee let us check so 101 student ID Java okay one zero two python one zero one C plus plus one zero three c one zero three Java one zero two JavaScript so all are different all are different all are unique there is no repetition so we have to consider these two student ID and course ID so is there any relation I mean is there any redundancy for these two one zero one Java is there any one zero one Java there is no thing one zero two python no one zero one C plus plus no one zero C no one zero three and Java one zero two and five JavaScript there is no Revenue so we simply we can say this is also a functionally dependent this is although also a functional independent because by knowing these two things we can get the course V Unity and coming to the student ID and course field student ID and course fee check student ID and course fee 101 and 10 000 is there any reputation for one zero one and ten thousand no no one zero two and fifteen thousand no one zero three and one one zero three and ten thousand yes see one zero three and ten thousand four and five so four and five one zero three with a ten thousand one zero three and with ten thousand so you can observe the fourth triple and fifth triple fourth triple and fifth triple one zero three ten thousand one zero three ten thousand so here we are having some C and here we are having some job so same x value gives a different y values so we can't consider it as a functional dependence so this is not a functional dependence just because strike on so this is not this is not and this is also not a functionally dependent ID so ten thousand in Java yes is there any reputation yes 10 000 in Java so first to pull and 50 triple so first interval from first to pull what is the thing course fee 10 000 and down and next to fifth table yes also gives the same thing 10 000 in Java so what about the Y values both the both X values are same what about the Y values so y values are so ten thousand in Java gives it one zero one student id101 and from the fifth triple again ten thousand in Java gives the student ID 103 so first the same x value there are different y values so this is also not correct this is also not correct I mean this is also not a functionally dependent now so among these two we can consider the second one because here we are having a set of attributes in the x value that means a determinants okay in the determinant I mean in the determinant we are having a multiple values so this is like X comma y tends to Z say x comma y tends to Z so what we have done so we have to check for X tends to J and Y tends to J whether these two are functionally dependent or not so if any one of these things is a functionally dependent we can say it is a partial functional dependent so now let us check so from this one let us check student ID gives a course fee similarly course ID gives the course fee so if any one of these functionally this functionally dependent if this relation is a functionally dependent then we can say it is a partial functional student ID tends to core speed student ID and course fee so 101 10 000 a here one zero one two thousand so this is not a functionally dependent and coming to this one course ID tends to course V already it is a functionally dependent right so here we are removing one attribute from the determinant we are removing one attribute from the determinant still it exists the functionally dependent so obviously it will be the partial functional dependent so here we in this case we are checking for both the cases that means we are removing one attribute and we are checking for the functionally dependent so it satisfies the functional Independence concept right then we can say it is a partially functional dependent so this relation is having a partial functional dependency so that means this is not in 2nf this is not in to NF so how we can get this to NF so we have to decompose this table in two different relations okay we have to decompose this to two different relations so this is a functionally dependent so obviously we can say it is a partially functionally dependent partially functionally dependent so we can simply say not in 2 n f not into NF right so now we have to divide or decompose the relation to two different relations sub relations so what are the sub relations where we got the ah this one so student ID and course ID is one table course ID and course fee is another table tell me to the student ID so 101 Java 102 python 101 C plus plus one zero three c one zero three Java one zero two JavaScript so this is One Direction this is only one relation okay we are decomposing the complete relation into two sub relations this is one relation and cosine so Java python C plus plus c JavaScript so here there will be no redundancy you can observe so we are having some six uh tuples but here we are having only five to pull because Java is repeated the same course field value same course V value so which is a 10 000 and for this one python it is a fifteen thousand and C plus plus it is a two thousand and for the C it is again ten thousand and for JavaScript it is at twenty thousand so you can observe here some sort of redundancy has been reduced right so here we are having some six columns and here we are having some five columns I mean five rows rows right so like this we have to decompose the complete relation into a sub relation so now you can say these two relations are in 2 NF because there are no partial dependencies so again you can check for one and F and 2 NF for this particular sub relations if there are more number of attributes and again you have to check for one and F and 2 NF so whether it is one and if then we have to check for 2nf right so again you have to check for partial dependencies whether there are any partial dependencies in this particular sub relation or not so if there are any partial functional dependencies automatically we have to remove this partial functional dependencies that means by decomposing further decomposing the relation into sub relations so this is how we we have to uh satisfy the relation with 2nf the first one the relation should be in 1 and F the second one the relation should not have any partial functional dependencies so once again I'm I'm saying that the just view the links of a partial I mean functional dependency Concepts so I will give a complete playlist in the description section go through that so uh listen to the functional dependency concept what is the functional dependency and uh what is the full full functional dependency partial functional dependency types of functional dependency and then it would be very easy for you to understand this particular normalizations concept so either it is one enough two n f three and a four n of etcetera etcetera so Pastor visit the functional dependency make just understand the concept of functional dependency so it will be very easy for you right so the link will be given in the description so go through that one before watching this video right so hope you understood this one and if you are having any doubts regarding this uh two second normal form so feel free to post your notes in the comment section definitely I will try to clarify all your thoughts if you really enjoyed my session like my session share my session with your friends and don't forget to subscribe to our Channel thanks for watching thank you very much