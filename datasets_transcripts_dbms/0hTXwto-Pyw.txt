when planning for the creation of a database it is important to have a model of how different types of data relate to one another one type of model that can be used for this purpose is an entity relationship model or ER model this is a type of semantic model meaning that it conveys factual information about how different entities relate to one another semantics is just a fancy word for meaning this model focuses on what it means to be an instance of each entity type that it represents entity names are written in rectangles Here song is an entity type the list in the corner contains various entity instances this collection is an entity set though there are of course many more instances of songs that we could include entities can possess attributes some attributes of a song could be its title artist album track number and duration whether or not a particular type of data is represented as an attribute rather than an entity of its own depends on the intended uses of the model some of these attributes will be depicted as entities later in the video here the attributes of song are depicted inside of ovals connected to the rectangular entity notice that for this data we have some repetition the band Bad Religion released two different versions of a song called 21st century digital boy on two different albums and this entity set also contains two different songs with the title adios but by different artists the song harder better faster stronger by Daft Punk is on the album Discovery but that exact same recording is also on the Anthology album Music Volume 1 1993 through 2005. another unusual case is the song Zaman by Rammstein originally but later covered by Apocalyptica however apocalyptica's version of the song also features Nina Hagen as a guest artist does this mean that songs should have multiple artists we could model the potential for multiple artists by drawing a double oval around the artist attribute like so however you could also argue that there is really only one artist and then a separate featured artist or possibly several featured artists so let's separate out the featured attribute with a double oval on our diagram like so we can also specify composite attributes if we like for example the duration could be represented as a composite of minutes and seconds in which case it would look like this however I'll return it to its previous form for the remainder of the video another example of a composite attribute could be a date that is broken up in today month and year notice that with the repetition it can be difficult to identify an individual entity songs are not uniquely identified by their titles or even by the combination of their title and artist since the band Bad Religion released two different versions of the same song on different albums for this data at least it looks like the combination of title artist and album can uniquely identify each song the combination of title artist and album is known as a super key because it uniquely identifies the instance if we were to add duration and track number then that set would also be a Super Key but one with unnecessary information we often want to be able to look up a specific entity using a particular super key but this is usually easier if that super key is a single attribute so in order to keep things organized here we can simply add a unique song ID to every song that can serve as a single attribute Super Key and thus make finding any particular song a lot easier because we will use this super key as the main way of looking up songs we will designate it as the primary key by underlining its attribute note that no matter which of these attributes we include in a Super Key we can't represent the fact that the two distinct albums that have harder better faster stronger actually have the exact same recording the fact that they have distinct entries in this collection of data makes them distinct from each other even though we know they are the same this issue can be fixed by adding more entities in fact it is a bit odd to have song as the only entity here it would be very reasonable to model albums in artists as entities as well if the artists and albums are separate entities then their associations with songs will be denoted by relationships which are represented by diamonds in our ER diagram specifically an artist sings a song but could also be featured in a song an album contains a song notice that the track number is no longer an attribute of the song but of the contains relationship now the song harder better faster stronger can have a single song ID but be involved in two distinct contains relationships with two different albums Each of which will have a distinct track number however the two versions of 21st century digital boy will both be present with distinct song IDs since they are different recordings also now that artist and album are their own entities they need their own attributes so name and artist ID have been added for artist and title and album ID have been added for albums notice that artist ID and album ID are primary keys for their respective entities this diagram also indicates the cardinality or size of the relationships between entities the relationship from artist to song is one to many where m stands for many because an artist can sing many songs but any given song Can Only Be Sung by one artist of course the reason that this is accurate is that we have featured artists modeled separately our data set only has one example of an artist as a featured artist on a particular song but in general a song could have multiple featured artists which is why the relationship features in is a many to many relationship artists can be featured on several songs and individual songs can have multiple featured artists the relationship between album and song is also many to many an example of this in our data set is the song harder better faster stronger this exact same song is on two distinct albums the fact that albums can have many songs on them is obvious one-to-one relationships are also possible for example we could Define a relationship first that connects an artist to the first song they ever released an artist can have exactly one first song though only some of the songs will be the first song of an artist we'll leave this relationship out of the diagram to prevent clutter now that album is a separate entity we might want to have more attributes however some of the interesting attributes of an album are actually information that you can derive from other information in the model for example we might want to know the number of songs on the album but assuming we have complete data on all songs for each album this information can be derived by counting the number of songs that are in a contains relationship with the album note that we do not yet have a way of indicating that every album must contain at least one song and that every song must have an artist the distinction we want to model here is the degree of participation in a relationship albums have total participation in the contains relationship because an album must have songs on it in contrast it is possible for a song to exist without actually being on any album such as a bootleg recording of a live performance or a song released via the internet without being associated with an album therefore songs only have partial participation in the contains relationship these facts can be modeled by using double lines to indicate total participation we also assume that every song must be sung by an artist however we will allow artists that have not sung any songs specifically an artist with no songs directly attributed to them could nevertheless be featured in a song by another artist an alternative and more expressive notation for this type of information is the min max notation in which the minimum and maximum number of relationships along each Edge are specified by a two Tuple a double line Connection in the old model means that a minimum number is greater than zero but here we simply use a minimum number greater than zero to make that point The Edge from artist to sings is 0 m because we allow artists that have not sung any songs but artists could sing many songs The Edge from song to sings is one to one because every song must have an artist and can only have one artist for featured in an artist may be featured in zero or many songs and a song may have zero or many featured artists for the contains relationship a song may be on zero albums or could be on many such as an original release or an Anthology album and so on an album must have at least one song but could have many this notation also allows us to be more specific with particular bounds although it would not be useful in this scenario we could specify that albums cannot have more than 20 songs or we could explicitly refuse to store data on any artist that has not sung at least five songs in some cases such restrictions are helpful it is also possible for the existence of an entity to depend entirely upon another entity that it shares a relationship with the total participation of albums in the contains relationship means that an album cannot exist without at least one song although most albums will have several songs however if the existence of a particular instance of entity a depends entirely on one instance of some other entity B then we say that a is existence dependent on B an example of this could be a review written about an album that assigns it a rating such as one would see on an e-commerce website a review is existence dependent on an album that it rates and has attributes username of the reviewer and rating which could be a number of stars on a five-star scale however given nothing but the username and the rating there is no way to distinguish reviews from each other the name that a user has could be the same and that person could give ratings for several albums this means that distinguishing one review from another depends on the specific album that it rates in such a case the album entity is known as a parent or strong entity and the review is known as a child or weak entity the fact that review is a weak entity that is dependent on an album via the rates relationship for its existence is indicated by making the rates relationship be a Double Diamond and the review entity be a double rectangle although the review entity does not have any primary key or superset that could uniquely identify it it is possible to use the username of the reviewer to distinguish between reviews associated with a particular album at least as long as we are assuming that each user is only allowed to rate each album once in this case the username is known as a discriminator and the dashed underlining of the attribute name indicates this in the diagram before moving on note that if we simply added a unique review ID attribute to each review that reviews would no longer be considered weak entities but they would still be considered existence dependent on albums because of the use of the one comma 1 Tuple connecting the review entity to the rates relationship a double line could also indicate total participation in the relationship for the relationships we have defined so far the meanings of the edges in the relationships have been reasonably intuitive it is clear that the artist sings a song and not the other way around and that an album contains a song as opposed to the alternative however when there is a chance for confusion an entity's role in a relationship can be designated with a label on the line connecting it to the relationship this is particularly helpful when an entity is related to itself which is allowed such a relationship is either known as a unary relationship since only one entity is involved or a binary recursive relationship all the relationships we saw in the earlier parts of the video are simply normal binary relationships however ternary for three or in general in area relationships are possible for example if we wanted to track sales of albums then we might Define a ternary purchase relationship showing that a seller sells an album to a customer here we can have zero or many copies of an album being sold and a seller might have zero or many albums that they sell and a customer could have zero or many albums that they buy although these are standard features of er models we've already seen a lot of features and different notational options next time we'll extend the model even further