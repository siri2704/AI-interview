in this video i want to cover differences between these two most popular databases and this is a mongodb and mysql and it all comes from differences between sql and no scale so if you are interested let's jump right into it so first of all what is mongodb i think this is the most popular database in the world because it is so simple this is exactly the case with javascript it is super easy to start this is why it is more popular and actually mongodb is a perfect example of nosql database so mongodb stores data inside itself like documents and actually json-like documents so we have a document with key and values and we can nest data inside the next most popular database is mysql and actually this is an sql database how you can get from the name and actually we had only sql databases until 2001 or so and the main idea is that we're storing our data inside tables so we have a database inside database we have tables like for example users posts comments and so on the main thing about sql databases and mysql in particular is that all our data are built in relational way which actually means we have a lot of relations between different tables for example inside user you typically have an id and some name and inside comments you typically will have a reference to the id of this user for example user id so here are the key differences between sql databases and nosql databases in sql databases or relational databases we have tables this is where we're storing data in nosql databases we can have different things for example it can be documents with json inside this is the most popular variant but it can be also key value pairs for example like radis or graphs another important point is that relational databases have predefined schema of our data which actually means in every single table we are specifying okay in this table we have id name surname and so on so our schema is fully defined and at any moment we can see the full schema of our database in no scale it is completely different it is unstructural and not define it and this is actually why i like relational databases much more than non-relational but we will talk about it in a second and as i already said in the beginning we had only sql databases so now the question why people invented nosql databases are they better and what exactly should we use the most important point is that nosql databases don't have any structure which actually means we can change things faster and this is extremely important in nowadays development nobody wants to update all these tables and change their structure and so on but actually this is super strict and super reliable this is why i like relational databases but people want to change schema fast change things fast inside their database simply adding another data without actually thinking about structure because we need to deliver new projects so fast nowadays so you can add and remove things on the fly when your requirements are changing the next important point is horizontal scaling versus vertical scaling and here nosql databases are for sure a winner why is that what does it ever mean traditional vertical scaling means that you simply improve your server or you buy a bigger server horizontal scaling means that you have a bunch of servers which can be quite cheap but you have a pool of the service and all your data is replicated between them and this is extremely efficient because first of all it is cheaper it is easier to scale and all your servers have something like a pool where you can pick data from different server now sql databases can be much faster if we use them correctly the main idea is that you should not use rules of relational databases inside nosql sure you can build exactly the same you can have your tables with relations between tables or documents in nosql it will be exactly the same but you won't get any benefit the main idea is that inside nosql we will duplicate data and this is actually bad but the main idea is that we will pack a lot of data together this is why it will be much easier to get this data from the database in relational databases we typically want to join tables and if you have lots of data inside your tables then it will be a slow process inside nosql we can duplicate data and this is of course not that great for stability and you must be aware that you must update all your data and even your duplicates in all places also from my point of view you know scale have a huge benefit that it is easier for beginners you don't have sql language inside and actually you have some simple dsl to work with databases and now i want to sum up three main problems that i see in nosql databases and first of all it is data duplications this is why i am not a huge fan of no skill databases because your data is not situated just in one place which actually means you should not forget to update your data everywhere and it can be time consuming secondly your nosql database will be much bigger because actually you duplicate data which means it will take more place it is not that bad nowadays because storage is so cheap but you must still keep it in mind and the last problem that you will for sure have in production with nosql is data consistency you will have some bugs like for example user updated a name somewhere but it was not updated everywhere and this is exactly the problem of data duplication so my conclusion here if you have a small or medium application i highly recommend you to go with relational databases because yes they are more difficult but they are much stricter you must define a schema you must think about what you are doing and you are always on the safe side and while you are working with databases it is much easier to be safe than sorry but of course if you just want to jump and try some database and if you don't have a lot of time maybe two or three days then i highly recommend you to look on mongodb because actually you don't need to learn sql you don't need to understand something deeply you can throw just a bunch of data inside get them back and you're good to go and also if you're interested in creating a node.js application which is using mongodb as a database make sure to check this video also