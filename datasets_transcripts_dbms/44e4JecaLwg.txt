hey everyone welcome to the session
by Intellipaat. Handling terabytes worth of data generated every hour is a task
for any companies and today's database technologies handles all of this very
easily and in this session we're gonna check out by comparing what SQL is and
how it stands against this technology called as no SQL and before we begin
with our session make sure to subscribe to the Intellipaat's YouTube channel and
hit the bell icon so that you never miss an update from us here is the agenda for
the session we'll begin by checking out what a database actually is followed by
this we can check out what is SQL and check out where it is used as well and
after this we're gonna check out a little bit about no SQL and find out
where it is used as well and after this we're going to do a head-on comparison
between SQL and no SQL and guys if you have any queries make sure to head on to
the comments section and let us know and we'll be happy to help at the earliest
and if you guys are interested in end-to-end Co certification Intellipaat
provides a lot of courses on the latest and the trending technologies so make
sure to head to the Intellipaat's website to know more about the same and
without further ado let's begin the session so coming to the first point on
the agenda it is introduction to data well what is data well to put it in the
most simple term for you guys data can be considered as any facts which are
basically related to objects in what we're talking about in consideration
basically so you know giving you different types of data up ages of data
for example it's a numerical form of data age can be anywhere between you know
point zero point one zero all the way till 100 and much more and then we have
video data which is basically an unstructured form of data and then we
have images we have music and much much more as well but then when you think
about the data that gets generated by social media
it is terabytes worth of data every single hour well whatsapp you can send
documents messages encrypted messages to be accurate Twitter you can send tweets
Facebook you'll be uploading images and again Instagram and much more as well
right so what do you guys think about data what is the different type of data
that you have come across which you feel was very difficult to handle head to the
comment section and let me know and this brings us to understanding
what a database actually is well guys again I'm gonna keep this video very
simple so the majority of the audience can understand all the concepts that I'm
teaching here coming to what a database is well database is basically nothing
but a very systematic collection of data where this collection of data is used in
pretty much manipulation of the data which is stored addition removal of all
the data managing the data in and out and this is done using a database
because it can be accessed and worked around in a very easy way to give you
live examples of databases look around you for example the old school telephone
directory books which we used to get which is also called as the Yellow Pages
in a couple of countries that was a very good form of a database and this is even
the contacts app on your mobile phone follows the same rule and then we have
the power generation schemes where the entire world is consuming some amount of
power and this power needs to be tracked so that the power generation companies
know how much to generate right so they have an entirely detailed database and
then this database is also used when you're being built every single month
for the electricity that you go on to using and then obviously we have social
media social media as I said handle tons and tons of data every single day so why
do you need a database well here are some of the reasons why we should
actually be considering a database guys the first thing is its managing
extremely large amounts of data and as you already know a database makes this
very easily and then accuracy of the data sure you can store thousands and
thousands of libraries and thousands of thousands of lines of data rows and
columns of data in a spreadsheet so when you're walking on the data how accurate
do you think the data is going to be because if it's a manual task of its
manual labor you'll be putting in thousands and thousands of for data
entry jobs and then all the data needs to be accurate and if done manually in
my opinion this would be a very messy shabby and unruly job but then if you
use a database all of this makes sure that all the negatives of manual labor
are pretty much taken away because databases ensure very good accuracy
here's more reasons the ease of data upload and again as I've been telling
you Manually uploading a data into let's say
a spreadsheet might be very tough but then uploading a data to a database let
it be any form of data unstructured data or semi-structured data fully structured
data for example again it's very easy to do that as well and I think the most
important thing we should all be concerned about this data security when
you're moving your data in and out of databases you can also make sure that
the data gets encrypted and that no person can access the data unless
authorized to do so your data security is one of the very good reasons as well
and this quickly brings us to the introduction to SQL just a quick info
guys in case you guys are interested in picking up courses Intellipaat provides
end-to-end course certifications on the latest and the trending topics make sure
to head to the Intellipaat website to know more and on that note let's get
back to the session what is SQL well SQL is the simple standard language which is
used for dealing with something called as relational databases and SQL is the
language which can be used to create read update and delete all the records
all the details all the singular units present on the database so what does SQL
stand for well SQL stands for structured query language so what is a relational
database then guys a relational database is nothing but a very simple type of
database that is used to store and provide access to the data points but
then it is related in a waste of the data is inter linked to each other and
this is what gives it the name relational database is so coming to what
SQL is pronounced as SQL is actually pronounced as either SQL itself or
sequel as well and then a little bit more about relational databases again in
relational databases are based off a model what we call as a relational model
and in the relational model it is in a very intuitive way where you can you
know draw out your model and then put out relations in between your data with
respect to that it is a very straightforward way of representing your
data actually and then with respect to relational databases all the data is
stored in the form of tables and then how do we differentiate the data in
these tables well we have something called as keys here and all these keys
actually give a unique identifier to each
entry in a particular table as well so the columns of these tables right so all
the rows holds the data and all the columns pretty much basically you know
hold all the attributes of the data and pretty much each record always has a
value or which is associated with the particular attribute and what this does
basically at the end of the day it makes it very easy to establish some very good
relationships among the data since we are directly dealing with relational
databases and what are the flavors of SQL available well again SQL majorly is
very simple and pretty much very similar in syntax when you consider all the
flavors as well there are certain proprietary changes for example which
Microsoft SQL might put out or MySQL might consider or even at the people at
Oracle as well and then pretty much it is a very simple tool to learn it is
widely used throughout the world as well again running through the examples MySQL
Oracle database we have Microsoft SQL Server Sybase and much much more and
this quickly brings us to the introduction to no SQL so we know what
SQL is but what is no SQL again it's called as no SQL or no sequel as well it
is pretty much a non relational database management system that is what DMS means
and then what this does is it does not require the fixed relationships what we
have when we talk about ah relational databases so basically again
there are some feature called as joins in SQL where in terms of no SQL we are
avoiding all these concepts and by avoiding all of these the biggest
advantage of for no SQL database it is that it makes it extremely easy to scale
from one machine to thousands of machines where all the data needs to be
moved around worked with and processed at the same time so the biggest
advantage again after easy to scalability is is that no sequel
databases are known for their huge data storage requirement handling
capabilities with respect to various distributed data sources and at this
time you might be wondering is it no SQL or how is it right so you see on your
screen that it says not only SQL or not SQL well a majority in fact 99% of the
people who work with are no sequel pretty much call it as no sequel in my
opinion but then the actual what it stands for is not only SQL
or not SQL and this person called carles trots pretty much introduced the world
of no SQL to us in the year 1998 so it is a quite fairly old concept so coming
to a little bit more about no SQL well no SQL consists of a wide variety of
database technologies pretty much this is done to ensure that you can store any
type of data that you can think of in a very simple way and then what this wide
variety of data consists of as I said before pretty much is structured data
semi structured data unstructured data polymorphic data and much much more
think of images videos or unstructured data in the form of a spreadsheet and
much much more guys so who all use are no SQL again I'm going to be covering
this at the end of the section as well but for now
pretty much you need to know Twitter Facebook Google and many many other IT
companies go about using no SQL for the day-to-day activities and again coming
to the flavors of no SQL here are some of the non relational database examples
are we have Amazon DynamoDB we have MongoDB we have Apache HBase and
Cassandra and much much more here as well guys so this quickly brings us to
the head-on comparison between SQL and no SQL and the first point which I want
to consider here is the definition so again we won't be seeing the
introductions so let me quickly walk you through the same again SQL databases as
I've told you are called as our DBMS or relational databases the M S stands for
management systems and then no sequel databases they're called as the non
relational database management systems or for example even distributed database
systems as well so this brings us to the next point which is development again
SQL was actually developed in the 1970s and this is a 50 year old technology or
to be honest with you guys and this basically came into picture
when there were some struggles to store a flat file storage methodologies and
then this actually overcame all of that at that particular time and then coming
to know SQL no SQL was actually developed in the late 2000s on a very
large scale and this actually was put out to make sure it can overcome all the
limitations all the townsides of the SQL databases just a
quick info guys in case you guys are interested in picking up courses Intellipaat provides end-to-end course certifications on the latest and the
trending topics make sure to head to the Intellipaat website to know more and on
that note let's get back to the session and coming to the third point it's the
query languages again SQL already stands for structured query language and this
is the standard language when we talk about SQL but then when it comes to know
SQL are there any languages well to be fair
with you know because no SQL databases have no declarative query language as
such which can be used to work with and this brings us to the next point which
is a database type again as we already told you SQL databases are full of
tables again SQL databases are table based databases and hence there are a
lot of tables their tables form the backbone of this particular entity and
every item on the table and every item which pretty much corresponds to this
table forms a very vital part of that database but then when you come to know
SQL no SQL databases are pretty much include everything from graphs it can be
document based there are some key value pair databases and much much more and
coming to the next one is scalability you have to know this that SQL our
databases are all vertically scalable and can be stacked on one top of the
other where you can pretty much I think and this is one of the reasons why the
SQL logo looks the way it does and when you come to know SQL database they're
meant to be horizontally scalable next to each other at the same time and this
brings us to number six which is the ideal use case scenario SQL databases
are extremely well suited when it comes to having very complex queries and a
very good query intensive work environments at the same time as well no
SQL is a little bit backward when it comes to complex queries because no SQL
databases are actually considered where you do not have a requirement for all of
these complex queries at the same time and this brings us to number seven which
is the ability to be open source again not all SQL databases are open
source but then 90% of them are but there are commercial versions such as
Oracle dB some of the features actually come at a
premium and then coming to no SQL well most of these no SQL databases have been
open-source ever since their launches respectively and then this brings us to
the next point quickly which is the hardware requirement you have to know
that SQL sometimes require very specialized hardware for example we have
Oracle extra data and there are much more in fact so coming to the no SQL
part of it no SQL databases work with full functionality on full screen even
on the particular commonplace hardware where it does not require any fancy
components to work and then the principal each model follows is also a
little bit different SQL follows the acid model while no SQL follows the base
model as it basically means atomicity consistency isolation and durability so
all these are certain principles and rules laid out when you're working with
an SQL database but then coming to know SQL we have something called as the base
model so this base model actually means a basically available soft state and
eventually consistent again this is one of the principles and the rules which
govern a no SQL database and coming to the developer salary the average salary
of an SQL developer is somewhere around $90,000 USD per your and the average
salary of for no SQL developer is somewhere around 80,000 united states
dollars per year as well so this brings us to the next point which is when
should we use SQL and when should we use no SQL well SQL is actually preferred
where there is a communication requirement with an R DBMS system
because it's a relational database management system and SQL is the
preferred language for an R DBMS and then pretty much it is used when you
have to analyze behave oriole related tasks and then pretty much you have to
give any customized sessions for your clients as well you should also know
that SQL is preferred when you actually building custom dashboards when you're
building custom reports and much much more
so the main advantage of SQL is that when there is a requirement to let's say
you have to store the data and get the data at the earliest in a very rapid
manner SQL is the go-to language to go so this brings us to the last point which
pretty much says that SQL is the go-to language when you're
making use of R DBMS concepts such as joins where you'll be joining two tables
and picking out a value from the same you're using concepts such as views and
much much more so when you're executing these complex queries SQL is the
preferred language so when should you use no SQL well no SQL are actually used
when your particular data does not require the acid properties to work with
and if that's the case then pretty much you can use the base properties to work
with at the same time and then here is where we use the non relational database
model because there are flaws with the R DBMS model which is just not cutting
it as you might remember no SQL came into the picture so that it can fill in
all the limitations provided by SQL well no SQL again gives you very good
advantages because it pretty much is used when there is any requirement of a
very flexible schema it does not need very hard or very harsh one-on-one
relationships one or two relationships and much much more when it comes to data
because again we might be talking about thousands of rows thousands of columns
in fact millions as well when we talk about big amount of data and again what
basically the advantage of no SQL is that it does not have any particular
dependencies and it can be used on you know if you have any constraints any
validation logic which you think are actually not required in that particular
database and this is the way to go if that's the case and then the most
important point is that no SQL is pretty much used because you'll be logging data
from a variety of sources basically our distributed source and no SQL does this
in a very easy and efficient way and then coming to all the companies
which make use of SQL and no SQL here are some of the companies that make use
of SQL of your stackoverflow entity data microsoft cognizant accented dell and in
fact thousands of other companies at the same time so companies using no SQL or
Oracle Adobe JP morgan's SAP Qualcomm ge Amazon Capgemini net app and sure as
well since this is a fairly new concept this is the product of the 21st century
a lot of companies are actually jumping on no SQL because they have found out
the limitations of what sql offers and this brings us to the end of
the comparison just a quick info guys in case you guys are interested in picking
up courses Intellipaat provides end-to-end course certifications on the
latest and the trending topics make sure to head to the Intellipaat website to
know more hope the session was very informative for you all if there are any
more points that you think should be added and if you have any more queries
head to the comment section and do let us know there and on that note have a
nice day