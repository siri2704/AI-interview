hello everyone welcome back in this presentation let's focus on the introduction to data models let's directly step into the topic of today the data models what do we mean by this data model this data model is actually the underlying structure of a database what do we mean by this actually this data model is a conceptual tool that describes the data the relationship among the data the data semantics and the constraints what do we mean by this see we know basically a database is actually a collection of interrelated data when we say that it is going to be the collection of interrelated data we know basically this is going to store the data it's going to store the interrelated data i mean the relationship among the data is also existing we also need to deal with the data semantics and the constraints i mean what kind of data are stored what kind of data are not permitted all these things so we obviously need data models in order to deal with the databases so this data model is actually acting as a conceptual tool that describes the data the data relationship the data semantics and the data constraints so obviously we need to design the database at physical level logical level and the view level we know databases uses three tier architecture so we need to design or we need to look into the database in the design perspective at three levels one the physical level two the logical level three the final one is the view level we are done with the basics of data model let's now see the various categories of data model in this presentation we are going to focus on four different categories of data model the first one is the relational model the second one is the entity relationship model the third one is the object-based data model and the last one is the semi-structured data model of course we have other data models as well but in this presentation we are going to focus only on these four data models let's start with the first data model the relational model basically a database is a collection of tables and we know this table is going to collect or store the data and these tables are also going to establish or maintain the relationship among the tables so what do we mean by this see we are going to store the data in databases where databases are collection of tables and these tables are going to store the data in the form of rows and columns let's say we have two tables one is the student table other one is the instructor table and this student table is going to contain the information about the student and obviously the instructor table is going to store the data about the instructors now obviously student and instructor are somehow related isn't it the relationship is also a table in this case so in relational model everything is of tables the data are obviously going to be stored in the table and the relationship are also represented in the form of tables no worries when we see some examples you will be able to understand things so in relational model everything is represented in the form of tables and we know basically a table is going to contain multiple columns and each column in the table will have unique names likewise in a database we may have multiple tables and each table will have unique names so in relational model we have multiple columns in the table with the unique names and we may also have multiple tables with a unique name in a database now why it is named as a relational model because in rtbms the relational database management system we refer tables as relations because in relational model everything is of relation obviously the data are going to be stored in the relation or table only and the relationship among the data or the relationship among the table is also going to be stored in a relation only and this relational model is also referred as a record-based model and what is a record it is actually a fixed format records of several types of several data types i will explain about this when we see an example so in simple terms relational model is also referred as a record-based model and what is a record actually each record defines a fixed number of fields or attributes say if we say something as a record each record is going to have a fixed number of fields or attributes don't worry about this now in the next slide we are going to see some examples now is this model widely used yes this relational model is the most widely used data model in this contemporary world so when i say this is the most widely used data model obviously the current database systems are based on the relational model only so we are done with the basics of relational model before we step into the next data model let's see an example let's say this is the relational database management system or simply rdbms where this database management system is a collection of databases and we know databases are actually collection of tables and we know a table is a collection of various fields and the collection of various fields are referred as the record say if we talk about an employee relation or an employee table let's say this employee table contains four attributes or four columns first name last name salary and department number and this particular relation has four columns or four attributes the first name last name salary and department number can you see here tom 4 30 0003 this complete information are referred as a record where this record is actually having four fields the first name field the last name field salary and department number fields so in simple terms a record is a collection of fields and collection of fields are referred as a table and collection of tables are referred as database and collection of databases are referred as the relational database management system so in simple terms in relational database system multiple relations are there each relation is actually a table and each table will contain multiple fields and the collection of fields are referred as records we also see a diagram here don't worry about this now in the next data model we will see about this so we are done with the first data model the relational data model let's now move on to the next data model the er model the entity relationship model so this entity relationship model is also referred as the er data model or simply er model so e stands for entity r stands for relationship what do we mean by this entity we know basically this er model is actually a collection of basic objects and these objects are referred as entities and when we say this is a collection of multiple entities and obviously there will be relationship among entities right so there will be a relationship among student entity as well as instructor entity and when we say this entity is a collection of basic objects these objects are real-world entities or real-world things right so we can say an entity is a real world thing or object and when we say that this entity is a real world thing or object obviously each entity or each object is distinguishable from other objects now is this er model is widely used yes like relational model er model is also widely used but the important thing to note here about er model is this er model is widely used in the database design before you start creating the database before you start creating the table we are going to use the er model in order to design the database in the previous data model i mean the relational model the current database systems are actually using the relational model whereas here the second data model which is the er model we are going to use this er model for designing the database let's see an example then it will be easy for you to understand here is the example of an er model can you see here everything is referred as an entity this employee is an entity dependent is an entity project department are entities and each entity or each object is described by some attributes salary ssn name gender or sex and name attribute has three more sub attributes the first name middle name and the last name so don't worry about this er model now anyway in the next chapter we are going to exclusively focus on the database design aspects where we are going to see about the er model we are going to see various examples about er model so for now just understand this er model is a schematic or diagrammatic representation so that this can be used for designing the database and also please be noted here that this entity is related to other entity through some relationships can you see here this employee entity has some relationship with other entities like department and project and what is the name of the relationship this employee works for department this works for is a relationship this manages is a relationship works on is also a relationship so this is an entity these are all attributes and these are all the relationship no worries about the terminologies used we are going to exclusively focus on the database design aspects in the next chapter so we are done with the second data model the entity relationship model let's now move on to the third data model the object based model we know object oriented languages like the c plus plus java c ash or c sharp we know these are all the object oriented programming languages suppose if our front end is designed using object oriented programming language we need to have the backend which also supports the front end right so in that case we are in a need for object oriented data model and that is why we are ending up here with the object-based model where this object-based model is actually using the er model with the object-oriented features in the previous data model we have seen about the entity relationship model where we have seen everything is of entities where each entities are referred as an object which are real world entities or real-world things and each real-world entity the objects are distinguishable from other objects so what we are going to do here is in the object-based model we are going to make use of the features of the er model along with the object oriented features like data encapsulation inheritance etc we also have a variation of the object-based data model which is object relational data model where this object relational data model which is the combination of object-based model which is this along with the relational model which is the first data model we have seen object-based model when it is combined with the relational model we get object relational data model before we step into the fourth data model let's see the example so in this example we can see that this is an object person is an object which contains attributes like name age address and phone number so this can also be represented as an er representation this is an entity or an object person which contains attributes like name age address and phone number so don't worry about this now when the course progresses we will be able to understand things clearly so we are done with the third data model the object-based model let's see the last data model the semi-structured data model the name itself says that this data model is already semi-structured it means it's going to deal with the specification of the data what do we mean by this it means the individual data items of the same type may have different sets of attributes what do we mean by this this data model is mainly used for transferring the data among applications so if there are two different applications and data transfer needs to be done obviously data needs to be stored somewhere right in the database if we use semi-structured data model then transferring the data among applications is also easier no worries in the last phase of this subject we are going to exclusively focus on a special language the extensible markup language where we will be understanding clearly about this semi-structured data model so for now just understand two different applications need to communicate with each other and if they want to use the databases then we can go for semi-structured data model where it deals with the specification of data and we can clearly witness that this is contrast to the previous data models we have seen i mean this is contrast to the previous models like the relational model the entity relationship model or simply er model and the object-based model and the language that supports the semi-structured data model is the extensible markup language simply xml before we see the other data models let's see an example for xml say here i am going to create a note where this note is from neso academy to all students and the subject of this note is thank you and the body of this note is thank you for subscribing neso academy good luck and this body ends here and this is the end of the note can you see here this is like the html language but the difference here in html we have predefined tags here we can create our own tags can you see here this is a note where i am creating my own tag this is a note this note has a from field or a from tag so this from is a user defined tag these two subject body and note all are user-defined tag can you see here the hierarchy or even the structure here this note is the parent element and this contains sub elements like from to subject body and this is the end of this note tag i know things will be unclear at the moment but for now just understand the structure this contains the data which is naso academy all students thank you thank you for subscribing neso academy good luck all these are the data that we are going to store or transfer at the same time these data are also structured and this is how it is structured the node is the outer element or the parent tag which contains sub tags like from to subject body and each data has its own structure this data belongs to this from and this data is belonging to two and this is how data is actually structured and stored and that's why we call xml is a semi-structured language and this is what the point two of the semi-structured data model which we have seen in the previous slide says we can have multiple nodes with multiple different elements in this node we have from to subject and body we may have other nodes with all these four elements or without all these four elements or with addition of other elements or tags so we are done with the fourth data model the semi-structured data model before we sign out let's see other data models anyway i'm not going to focus more on these data models because most of these models are obsolete now the first thing is the network data model and the hierarchical data model nowadays we are not using this because these models are tied closely to the underlying implementation if any data model is tied closely to the underlying implementation obviously it is complicating the task of modeling the data and these models are not used nowadays except we have these models in the old databases so these data models like the network data model and hierarchical data model are going to use structures like the trees or graphs and that's it guys in this presentation we have seen about the data models and the various data models like the relational data model the entity relationship or simply er data model object-based data model and semi-structured data model we also have seen other data models that are not widely used nowadays i hope the session is informative and thank you for watching [Music] [Applause] [Music] you