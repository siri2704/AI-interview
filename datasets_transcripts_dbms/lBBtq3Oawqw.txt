hey everyone and welcome to this full course tutorial on mongodb now mongodb is one of the most widely used database management systems so this video will explain why mongodb is used and how to use it mongodb is basically a document oriented nosql database now mongodb is different from conventional relational data models that use rows and columns so if you wish to learn about mongodb then you're in the right place so let me tell you what's in store for you in this full course video first we'll have a look at what mongodb is then we'll look at how to install mongodb on a windows system moving on we'll look at a detailed tutorial on mongodb that explains how to use mongodb different crude operations performed on mongodb other topics like aggregation sharding replication and so on moving ahead we look at how to connect mongodb with different applications in this case we look at how python mongodb works and lastly we'll conclude the tutorial by looking at some of the differences between mongodb and mysql so i'm sure you're excited to learn about mongodb so let's dive in but before we begin if you haven't subscribed to our channel already make sure to hit the subscribe button and the bell icon to never miss an update so what exactly is mongodb it is a document oriented nosql database it was initially released in august 27 2009. mongodb replaces the concept of rows of conventional relational data models with something called documents it offers developers the flexibility to work with evolving data models since it's document based mongodb allows embedded documents arrays and represents complex hierarchical relationships using a single record it is also schema free which means that the keys defined in the document are not fixed as a result massive data migrations can be ruled out but you must be wondering when there's something like sql why is no sql or mongodb used there are a few reasons why mongodb is widely used first up is flexibility mongodb's notion of documents that can contain sub documents nested in complex hierarchies is really expressive and flexible flexible query model a user can selectively index some part of a document or a query based on attribute values regular expressions or ranges next up is native aggregation native aggregation allows its users to extract and transform data from mongodb and either load them in a new format or export it from mongodb to other data sources it makes it extremely compatible lastly as mentioned earlier the schema free model now applications get the power and responsibility to interpret different properties in different ways now that you know what mongodb is and why exactly it's used let's have a look at the characteristics of mongodb firstly it's a general purpose database now mongodb can serve heterogeneous loads and multiple purposes within an application again it has a flexible schema design document oriented approaches with non-defined attributes that can be modified on the fly is a key contrast between mongodb and any other relational database next up is scalability and load balancing it's built to scale both vertically but most importantly horizontally using sharding and architect can share load between different instances and achieve both read and write scalability when it comes to load balancing this happens automatically and transparently to the user by the shard balancer [Music] again we have aggregation framework now mongodb offers an extract transform and load framework that eliminates the need for complex data pipelines native replication now data will get replicated across a replica set without complicated setup security features both authentication and authorization are taken into account in mongodb next up is json now json is widely used across the web for front-end and api communication and as such it's easier when the database is also compatible with the same protocol lastly we have mapreduce now again mapreduce is an excellent tool to build data pipelines and mongodb uses mapreduce readily now let's quickly have a look at the working of mongodb data is stored in documents with the help of key value pairs now the data is stored in the bson format at the back end mongodb converts json data into a binary format known as bson mongodb also makes provision for nested data now all of these documents are stored in a collection these collections hold multiple documents and since mongodb is schema-less the documents in one collection need not be similar now again these collections are stored in the entire mongodb database as mentioned earlier mongodb makes provision for nested data this makes fetching of data extremely efficient when compared to other databases now you must be wondering where exactly mongodb can be applied or used so let me help you with that several areas of technologies use mongodb as their dbms currently some of them are internet of things mobile applications real-time analysis personalization catalog management and content management now all said and done let's look at some of the companies that use mongodb currently companies like toyota sap astrazeneca adobe verizon cisco barclays and google among others readily deploy mongodb as their database management system in this video i'm going to help you install and set up mongodb on your windows system you will have to navigate to the official mongodb website and here you can see software so go ahead and click on community server under software and you can see that the current version is 4.4.4 and the platform is windows and make sure that the package is msi all right now go ahead and press download so this could take a while all right so once it's downloaded go ahead and install it now since it's already installed on my system uh the installation process will be different but you just need to follow the steps there and finally install it so once you're done with the installation you can go to your c drive and here you can click on program files and you can see that mongodb is installed and inside of it you have the server folder and then you have the 4.4 folder and then you have the bin folder right so here you have the application that is your and the mongod applications both are executable files now the mongodb file or the application is the daemon process now this is the background process that make sure you retrieve the data from the database access the data so it does all the background tasks so after the installation now you need to create a path to this file by doing this you don't have to always go to the bin folder and then execute the file you can directly execute the file on your command prompt right so for that let's just go to our environment variables but before that let's just uh copy this path right and here under the user variable section click on path and say edit and go ahead and just paste it right i've already pasted mine so just go ahead and paste it and click on ok and say okay right so now you've created the path successfully now let's head to our command prompt and run the file so here you can just directly type since the path has already been created so just go ahead and say [Music] and here you can see that your  server has been generated and with this you know that your in mongodb has been successfully installed and your server is up and running right so just for confirmation let's see if there are any databases and how much space they've occupied so you can right now just type show dbs and when you click on it it says admin config and localhost and all of it is zero so with that you have successfully installed mongodb on your system and it's up and running all right in this particular tutorial we will be learning what mongodb is all about and their advantages and some practical demonstrations so let's get started now so here in mongodb we would like to discuss about what is the mobile db so as we know the mongodb is known to be called a traditional document based database okay which stores the data in a document okay nosql means it doesn't says like no to sql instead it says not only sql that means it is not only sql but it is supporting the other approaches too okay so the document based when you talk about it actually represents the typical hierarchical relationship using the single records that means how the records are related with each other so that's how exactly it represents and it is a pure schema free environment so that you really do not need to have a schema before you go and develop this program so it is a pure schema-less environment due to that it is giving you far more better flexibility when you talk about completely unorganized environment so what is nosql so the here's the idea about a nosql so it is completely into the non-relational database like traditionally if you see any non-relational database uh you talk about a typical nosql uh it's purely into the document base here nosql does not use any tables like in rows and columns a traditional idb base approach if you see there they are using a complete table structure like they talk about columns they talk about rows and are all about so here in nosql it stores a relationship data in the documents so the different type of nosql databases are available like you talk about called document based you talk about key value base you talk about white column based and graph based different options are available for the nosql but the one which we are using it mongodb it is a purely document based database now here we would like to go ahead with some demonstrations like talking about like how mongodb installation works and the other aspects okay everyone so now we're gonna start working on the first option called mongodb installation [Music] okay see mongodb installation is very simple if you open a website and go for this website name called mongodb download if you talk about mobile db download you're gonna see the official website called mongodb community download is available when you click here so you can see it is taking the current version to 4.4.6 mac os it by default detected my platform however you can select depends on which platform you have it and after that you will be clicking on this download okay so it will get ready for if you are from windows i would say in this windows you can select appropriate option like two options are available you can talk about msi or talk about zip my recommendation is you can stick to the zip powered portion because it won't start any mobile db services behind the scene that is really helpful because you really do not want the mobility to be there running unnecessary even if it is not required my suggestion is to stick to the zip file so here once the mongodb is there so you will be seeing that two files available inside the mongodb folder inside the bin so once you download the zip you will find two different type of files are available let me mention those so inside the bin folder you will see two files one is called mongodb okay the other file which is available called mobo mobo t is to basically start the mongod server and the mongodb is actually the client which will connect with the mongodb clear so if you are in windows environment so once you are inside this bin folder of your zip file you will get the mongod so you have to double click on this it'll start a new command prompt so you do not need to do anything further just minimize this command prompt and go inside the bin folder again and click on the another binary file called so it will get start as a client okay since i'm using the macbook here the concept is little different about how mongodb can be used okay so this is just a basic way of how the mode is being used into your code okay everyone so now as we are in the macbook so here to start mongod we have a very special way to start with so here i'll start with my terminal and here i would like to paste one very simple command to start my mongodb database that is called mongod and after that if you say hyphen iphone db path it is a place where your database will be starting and one more important thing i forgot to mention like momodi would not start automatically inside your windows machine unless inside your c drive you have to create a new folder name called data and under this you have to create a new folder name called db because automatically when the mongod starts it looks inside the c drive data inside a db folder there your all records will get stored so do not forget whenever you're trying to use the mongodb so you must make have you must have this particular folder structure in place in your local machine otherwise this is not gonna start every time you start your mogudy without this location it automatically terminates so to avoid those make sure that you have this data db folder ready with you however you could also change the location of this particular folder structure for which we will discuss it little later on but as of now we can see i'm giving my location that is called iphone 7 db path slash data db i hit enter you can see now my mobo db is starting now and since it's stuck so i have to start the new terminal now so here i open the another tab and type and the moment i type mo now you can see it is now connected with my mongodb and now it is ready that's the first thing you need to remember okay now to check which other databases are available to you so you can just type show dbs so it will show you the number of databases which are already there inside your existing newly installed mongodb but you can go back and create new database too here you can see some databases are already present however you go back and create the new databases into your system and to create this database we have very simple option available here name call use simply db if i say use simplydb it automatically creates this database and take you inside let's see now you can see you say use simplydb it automatically creates though it is not there but automatically takes you in while creating those okay so that means your current database name for simplydb so if you're not sure which database you are in so you can just type dbs or db and it will show you that your current database is simply db that's it so your database is set and we are all good to go ahead with our next level development hello everybody and welcome back in a previous videos you have seen like how to create a database and how to identify whether my database is there or not so if you remember previously we have created our database using use keyword so if i just see my databases which we have created is last time so how we can check this out we can say show space dbs okay so you can see we have got database list but we do not have any database which we have created last time is registered here that's quite surprising because when we have created our database it should be listed here but it is not let's do one more time i'm saying use sn db and i'm saying switch to sldb now when i say once again show dbs so i still don't see my databases listed here there is a reason the reason is according to the mongodb rule unless we have minimum one record or collection is stored inside my mongodb it really can't show in the list now i want to tell you about a few important things now here when we talk about called mongodb in this mongodb compared to the relational database here the table which is actually in rdb message is called here it is called collection okay db is still called db here okay that means the database will be still called database but row what you use this word in a traditional rdbms here it is known as called document if you remember i told you like it is a document based database so here every single record what you try to insert it is not called a typical row it is instead called a document so every table is called collection and every single row it is called document that's what exactly the difference is okay now here once it is ready we will go ahead and talk about our next feature now well we have to basically go and create a new collection okay so what you can say db dot create collection and here i can pass my collection name i can say demo collection so once it is done i can see it is collection is created in typical language i can say the table is created and now when i try to see same show dbs i can see my database is now listed okay that's how exactly it works so the very simplest way of how we use in my code well in our previous examples we have seen like how we can create a collection and we can give the name and i can see the details are listed when i say show dbs but there's a another alternative option available where you can just do that without even saying db.create collection well if i want to create a collection i really don't need this particular functionality called create collection i can directly use this statement name called db dot db dot sl student dot insert and here we would like to add the property like a name and here we can say admin now what is that meaning is when you say db.slstudent.insert and i hit enter you can see the uninserted one and surprisingly when you try to say press enter you will see this sl student is not a collection which we have created earlier so what this line does this line not only create the collection for you but also add a record inside with this property called name because that is a mongodb and mongodb is always following the json-based structure and due to that it goes with the key in value appears so db is a predefined keyword sn student is a collection name insert is a command through which you are trying to insert the record now to check how many collections are there okay so we have one property call show show collections when i say show collections i can list down those number of collections or else i can set tables in a typical rdbms language which are there added in my system so essence student in which i can see the record is inserted so if i want to confirm i can simply say db dot sl student dot find find is a function through which i can list out those number of records which are added i say find and you can see that the records are received at the same time when i say db dot the name call demo collection okay db.democollection.find i will find no record reason because this collection was created but there was no record which was inserted in but you will see when i write this command called sl student dot insert it not only create a new collection for me but also insert the record into my table also called a collection that's where exactly it is giving you the advantage when you want the collections to be created along with the data this is the way how you can really do this clear but whenever you talk about db.create collection many people always think about what is the significance of having this db.create collection look db.createcollection is having its own significance we never recommend this technique okay to create a collection because when you create a collection you always bring some restrictions some terminology which missed out whenever you talk about this line so having this db.create collection you can also offer some additional capping which is not possible when you use tbi.org collection in what is insert so you might be thinking what those cappings you're talking about let me try to brief you when i say db dot create collection and here we are providing the first name called support student okay when i say student so after this student additional parameters what we can pass is this when i say capped colon true what do we say cap colon true so you are enabling the capping after that the next parameter i'm gonna pass that is known is called size in this size we are providing the size suppose i'm saying five 2 4 and also we are saying 2 8 0 that is the size of 5 mb and here we are giving call max colon 5 what exactly that meaning is see the meaning is very simple whenever you try to bring this create collection option so capping true means you are enabling the capping so what is that meaning is it is trying to say in this particular collection name called student maximum number of documents can be either 5 or less than 5. clear and the collective size of documents cannot be increased to more than 5 mb that means you're trying to say either by adding the total number of five records the collective size of five document will reach to 5 mb okay or else the maximum number of five documents can be stored so whichever fills earlier you may have a total number of four documents which are pretty heavy and they reach to the size 5 mb and beyond that the next document won't be added or else you can have the five documents which has not yet even reached so any option will help you to achieve this so that's where exactly you can offer the capping but this is only possible when the user is trying to say db.create collection this option is not possible when you're trying to use this so that's the benefit of having this db.create collection and this is what we always recommend well now we would like to talk about our next feature here inside the same mongodb so we now know how to create a collection how to create a database and how to switch from one database to another database now we will tell you like how to insert a document so far we have already seen how to insert a document inside the mongodb now we would like to also show you how we can insert the documents using multiple techniques so remember one thing mogu tv comes with two different type of documents one is called relational document and second is called embedded document mostly while working with mongodb we always recommend you to use embedded documents because that helps you to scale up your application without any hurdle okay the embedded documents means what that means the uh i would say the parent record as well as the child records both stores in the same location fine so how exactly that is let's take a look about this example here we would like to insert some records by saying db dot student i do not have a student collection but i'm just telling you db.student dot insert here we would like to add some records what i'm trying to say the registration number registration number i'm just saying uh one two three four you can give anything now the next one we need to talk about caller name this name we can say student one followed by the next one i'm talking about which course the student has registered so we can say course inside this course we would like to say the course name let's say course name we are given the course name mca okay followed by another property called duration okay i'm giving this duration is called three years like that after that this curly braces is closing that means see the idea is like you see the course is an embedded document because from course you have a few more properties like in course name and duration i am closing this and starting the another property and that is called address okay sorry let me remove from here and from address and address we can say one more curly braces and inside this address we can say city i'm giving the name called what bangalore another one we are using that is called state let me remove this state colon ka okay and the third property we're using that is known as call country here is saying i that is called india so it is closing here okay and it is closing here so the inner document and out document both are closed hit enter and now you can see the records are inserted one thing you might notice the course and the address these two are embedded documents and they do not have any primary key of its own instead the course and address both are directly dependent on the student object or the student database so i will say student have the registration number fine the primary key so the primary key will be associated with the most outer document and the inner documents are directly associated associated with them and now when i try to say db dot student dot find you can see now the records are fetched i can understand many of you are thinking every time while adding the record we do not add any object id and here you might have observed and there also you have option then what exactly that id is now let me brief you this id is nothing but a unique primary key your mongodb has offered you that means mongodb says whichever data you are inserting it so by default with every single document mobodb will associate this by default property called underscore id which you can't even ignore however you can override i haven't provided any underscore id as a property because this is a predefined property associated with every single mongodb document if you want to override it you can override from this value to any value because if you do not pass any value this value will be automatically provided that is a typical hexadecimal value however if you want to override it you can override the value of underscore id but you can't change the key name let's try with some another record so the same record if i try to add let's go i'm using call student two and here i'm saying one two three four five here if i want to override it i can just say underscore id colon now i can give the value call what one zero one this you need to remember so i'm overriding this value with one zero one now adding it now the records are added now let me call find now you see this time the records when i fetched so in this record the first record contains a default underscore id in a second record it is the one which i have provided and remember one thing in mongodb you really can't offer any property other than underscore id as a primary key here there is no concept of having the cons like a composite key which you used to do in tradition rdbms here you have only underscore id and this is the only property which you can override it else by default the new value will be given to you so this is the first way of how the insert document has been done will be telling you the another ways where the other documents are also added okay so in the previous examples you have seen like how we can add the records but i also tell you there is another alternative options are available if you want to insert the records in a bulk that option is also possible in tv how we can do let's try to understand here here we would like to use one very simple concept for var my emp equal to now starting with a typical object like this and after that i mean adding this and within this i'm adding the first property called emp id colon one after this okay now you can see it is not understanding because that is a challenge when we talk about call uh you know the logical part because you go with multiple lines it is not supporting however you have to follow the same lines now emp id 1 and we just give the second property called emp name so emp id just remove this i just say emp id and i say amp name colon admin okay adding it here so first record here again i'm adding another one that is called emp id colon two okay and now colon manager okay again colon three and colon qa add it okay and this curly braces is closing after this your square bracket is also closing and once it is done come down and say db dot new amp dot insert okay and here you pass the name of the object called my afb and you can see now it is telling you n inserted 3 that is known called bulk insert when you're inserting multiple records in a single shot see how easy it is for you okay now you simply use db dot the collection name is what your new earp dot find and you can see now all three records are inserted with its default object id okay so that is a really nice idea to have the id to be provided okay remember this statement so you understood finally how we can add the records in a bulk going forward we will also talk about which is related to your update as well as delete in your upcoming demos okay but here that is the first thing which you realize it how we can perform those kind of operations in very very simple and straightforward manner okay everyone so now we have got three records with us and in case if i'm planning to perform update on any of my records how will i do this now so we have a predefined functions available name called update function let's see how this update function can really work so we use this statement name called db dot what is my collection name which is known as call a new emp new emp okay dot update okay so what i will do i will say tp dot new emp dot update here okay now when we talk about call update we have a statement available okay what is that that is called emp id what we call emp name so we say wherever the emp id is this i want to change what the name how can i do this now very simple to perform this what i would like to do now i want to basically add few more records to give you some more better idea you can see now here we have a call admin id name so i just do one thing i just change the ids one two three i just say four iso 5 is 6 okay and i call this again the three records are inserted now let me try to call find now we have total number of six records are available where admin is repeated manager is repeated qa is repeated now let me try to update the record okay now i want to say db dot new emp dot update here i would like to perform the property like in what [Music] name by the emp name amp name colon i say admin okay so i just close that and i use another curly braces with dollar set that means you want to set the new value here we are giving emp name okay what i want to do i say wherever the name is admin change to what admin new that name i want to change it close this close this and run now you can see it is saying n match to one and the record fields are updated like this let me check well here i will see uh the value called admin new is updated but i have one more admin called admin it is not changed and there is something which you need to notice what you need to notice is notice is like when you try to perform update so what mobile dv does it starts from the top find the first record change the value or modify the value and come out from the loop it doesn't carry forward its search process for the next level of results and that is something which is i really want to do that so in case if you're planning to change those values multiple times so what you need to do let's take a look here in the similar example here we have a column name admin second property we will call manager let's try to say managers are repeated twice we just want to change to new underscore manager and i want to update multiple values what i will do here i will put comma and say multi colon shoot okay saying multi-color true that you want to say hey i want to update multiple search or multiple repetitions hit enter this time you can say it is saying and match to and modify to that means two records found and two records are modified let's check there we go we have got new manager is updated in both the location that's something which is really awesome because this is how you try to perform the multiple changes well in our previous examples you see like how we can perform the update part but we have one more beautiful feature available inside the mongodb and that is called how exactly we can perform absurd clear let's talk about upset upset is a combination of update and insert let me try to show you one magic here here when we talk about call update part you see now here we are trying to say this point yeah you see what multi-troll we have used now here this uh multi true is we're trying to update but let's talk about something called manager two enter now you can see it is saying no records formed clear now no records formed but there is one concept available name called absurd upset means if i try to perform upset it means if the records are not available it will insert the record i want to show you one simple example now here we are using multi-troop okay so as i can see we're using something called name and we're performing this update part so in this update part we are using this dollar set new manager so here rather than using multi true we are saying upset true when i say absurd rule so what happened now they say n matched 0 and up inserted 2 and modified with id this that means when i try to call this find function you'll be seeing now we have a god the another record has been added are we clear now as a new record so absurd does what absurd says like if the records are found i will update it if it is not i will insert it that means if i try to call the same thing manager to find it is added as a new manager now if i just try to say uh not manager to i will call qa qa and here we say emp equal to new underscore qa and now you can see it is saying n matched one and absorb zero and modified one so it is clearly telling you like hey i did not find any uh inserted part but yes i matched one record i found one record and the one record is updated now that is very very beneficial feature when you really want to perform absurd so that is the advantage of upsell that's what's called update plus insert very important feature that depends on the requirement if you want to add you can certainly add this so the way we have tried to add this up certain part we can also try to perform the delete part also okay so mongodb also helps you to perform the delete part and how you'll be trying to add it now let's try to understand here in my code if i want to perform any delete part i have this statement name called db dot the option we are using it that is known collection name emp new emp sorry dot we have option number remove in this remove we would like to offer the property okay and what we're talking about now here let's try to add the id here or the name which you would like to import so i want to say like emp name admin new so we just say p name okay and then name scoreboard admin new okay emp name admin new when i say remove we can see it is record removing the first record so you can see now the records are removed fine because there is only one admin new is available okay now in a similar way if i try to remove the property call new underscore manager new underscore management hit enter now you can see the three records are removed so it's not like update which removes only one sorry update only one record it can also eliminate more than one records at the same time that's the benefit of remove so now you can see we have already implemented some records as i seen earlier like we have performed the delete part now now when i try to say db dot new emp dot find three records are available with me three four and six now when it comes to c in third part we have seen update part we have seen delete part we have seen now it's time to basically fetch the records so find function we've already seen but in find function we also have some conditions so called queries so in case if you want to limit the number of records into your application you can also do that let's see db dot uh new emp dot find clear now so in fine you can also pick up the specific records too like when i'm saying dot find and here we can just say name colon admin sorry here to put curly braces it says there is no record with the name called admin because it is a emp name not a name so let me change back to now you can see it finds one record so like that you can also apply a condition okay enter your code now in a similar line if you really don't want to offer any condition okay but you want to limit the number of records to be shown so you have this function available name called limit to two means only two records now you can see though i have three records but it is only showing me two records because i have limit those number of records into my code also we can perform sorting in case if you want to perform the sorting in ascending and descending order that also you can also do so here rather than saying limit we just put this option name called sort and in this sort on which property you want to sort it that out you can mention so we can just say emp name okay and using ascending order or descending order so we can just say minus one let's go descending order hit now you can see it is showing a descending order now if i just say minus one if you just say one what is showing you in an ascending order so you can pick up the specific property behalf on which you can tell it should be either on descending order or ascending order so that option really works very fine okay so that's like how you can perform the queries but remember one thing you can also search the records based on their embedded columns too because if you see in a previous records we have some records added okay that is let me try to say show collections i will call sl student and student okay db dot dot find okay you can see we have records which are embedded records now if you want to search the records based on their embedded properties like i am talking about address this is one property name called city fine so if you would like to pick up those records these are also possible so how you can do this very simple so you say tb dot student dot find okay so inside this file you can provide the specific properties like my outermost property name is called what address so we are using this option called address dot dot city so we say city are we clear colon i'm giving the city name called what bangalore let me close this and that's it okay so we have to start passing another curly braces here hit enter and you can see now i find two records because both the records belong to what bangalore so i'm getting this city bangalore with me that's really awesome like you can also pass the city accordingly a part of that we also have the other details also okay in which you can have the conditions based on less than greater than or whatever values you would like to make it is available and possible okay so that's how the conditions are satisfied so suppose if you would like to pick the users i'll be clear where the range which you would like to consider so those are also possible like you can see we have this property name called what emp id 3 and 6. i just want to pick up only those records whose id is greater than what 2 so what i can say db dot new emp okay dot find and inside this file we can say the property okay so what's property we're using emp id we are saying emp id here colon here we'll be using dollar jt gc stands for what greater than colon we're giving the value called what one fine close this run you can see you've received three records three four and six in case if i just look forward for higher than five you will see only one record so greater than that's called gt okay same option if i just say lt you can see we have found two records so less than greater than okay so that's how exactly you offer it okay and also you can provide the condition so-called limit as i can say find emp id the way we provide it so here i will not use less than okay instead i'll be providing another property let me show you what so here in emp id whatever we have taken so let me try to take the property call file and here we're providing emp id and then and we're using other curly braces and we're using dollar in is very important property dollar in colon here you provide the details i'm saying inside so the properties three four six we are saying three comma six close this and you can see we got two records which matched with three and six that's the benefit of having this okay everyone so in our previous example we have already seen lot many activities this time we are trying to offer you something very interesting feature and that is known as called working with indexing see mongodb is one of the most popular tool and one of the reason why it is very popular because it is having the facility of having indexing now what exactly the index does so friends main job of having this index is to basically give you the concept of like how uh one particular document which is huge document in case if you would like to perform any sort of indexing inside this how you will be applying this so to apply indexing into my code let's try to understand why index is really required without indexing and with indexing how will be making a difference into the code so to make it happen we would like to insert some records to confirm okay so what i will do is in step number one previous records if i see i have got four six three four one depends on what early records we had it so we had a call new emp so db dot new emp dot find so we have total number of three records are available so it's okay we can have this three requires with me now let me try to apply indexing without indexing if i want to find a result what outcome i'm gonna receive so to know about how much time it gonna be taking if if i have a got large number of records with me i'll be using this statement name called db dot the name is called new emp dot explain and here i will be using one predefined functionality called execution stats execution starts okay now here after the execution starts will be using dot fine we'll be using the first property here okay and what user would like to find it that you need to basically offer it so we are giving the name called emp name colon i'm giving the name call qa okay let's close okay now when i press hit enter execution stats is a predefined functionalities which will tell me when the query was executed what exactly the query plan was hit enter and now you can see a lot of details are available with me like you can see pass query winning plan and everything one thing you need to remember by default here when i try to run it says and return one advance one need time total everything it is showing me but one important thing which you will see here is total number of documents is scanned so it is telling me total number of document examined is three clear now and returned one that means one result is returned and the total number of documents examines three in order to find this record just imagine a use case here when i say total number of documents examine three in case if i ever got millions of records with me that means to search the record it will examine all the millions number of records to search the result which certainly gonna be taking huge amount of time and that's where exactly when you try to search the record fine when you have no indexing is available okay so you need to understand one important thing is by default index is applied on your underscore id db dot new emp um yeah db.ump dot when i say db.newemp.getindex is a predefined function it tells me like hey by default index is applied or underscore id that's the fact because by default index is applied on underscore id not on the other properties so i need to identify which are the properties are required to be get indexes mongodb advantages it is supporting multi-column indexes and that's what exactly we would like to see so let's see in our next demo now we will try to apply indexing on our own property okay so to apply the index what we need to do we have to say db dot certainly we will be talking about called collection name call new emp dot create index here you have to pass two things number one on which property would like to apply okay and it has to be ascending or descending so i'm trying to apply on emp name and i want the index to be applied on ascending order okay so here colon 1 hit enter you can see now it is telling me like number of indexes before 1 and number of indexes after 2 that means earlier index was available only on one particular property now it is applied on two properties if you want you can check now you can see there is another properties added called emp underscore now if i try to execute a similar query which i executed earlier qa now you'll be seeing there's a different statistics all together here if i see in my code see it will tell you total document examined one see now earlier the number of document examined were three but since this index is applied notice telling me the total number of document examined is one so performance is certainly improved so to search your document it won't be searching the complete collections okay rather it will search what only that particular column in which it is actually applied for so that's the benefit in fact i would say when you will be using these kind of indexes into your code okay so hope we all are clear and understood about this concept so let's go ahead and get this implemented into our system well this is the first way of how the index can be applied so you can also apply index on multiple properties clear so that we will show you one by one how it is okay everybody so we have already seen in our previous example how we have applied indexes in our existing mongodb application so it is also a possibilities where we want to also apply the index on other number of properties too as you can see in our existing database okay an existing collection my collection name is new emp which contains two different properties one is called emp id and second called emp name just now we have applied index on our emp name but in case if i want to apply index on emp id i will be using the same technique okay let's try to apply index on the same so first of all get indexes i'm having this index applied on two different properties now we would like to say db dot create index and here in this db dot create index we can just i will say db dot collection name so our collection name is called new emp new amp dot create index first parameter is certainly the name of which property we are applying so here using emp id and in this emp id we will just offer it has to be ascending or descending let me decide descending order so we are saying minus one okay now let's press enter and check the status okay now you can see earlier indexes which we have created that was 2 and now it turns to 3 so it is very clear that index is improving now let's check this out uh db dot new mp dot get indexes now we have a total number of three indexes are available so you can apply index of n number of columns if you want okay at the same time the way we have created the index in case if i want to drop an index so we can also drop so what we can do db dot new emp dot drop index drop index and in this drop index we have to provide which particular index we would like to draw remember this point in case if you're planning to drop any sort of index so you need to provide which index so you should have that particular index name okay so here we are providing my index name so it should not be uh i would say the traditional name called emp id no it has to be emp id underscore -1 or emp name underscore one so this should be the name i'm saying emp name in case if you try this you see it is saying index not found with the emp name because internally it maintains with this name let's try this out we say emp name underscore one let's try and now you can see new index was three okay one okay now you can see we have a call emp id and underscore id so now we have only two indexes left there is no emp name anymore this is how exactly you can drop the indexes so it is very simple and straightforward way of how in mongodb you can perform your activities hello everybody and welcome back in the previous examples of mobodb you might have considered we have used lot many operations in our last video we have seen how to utilize uh indexing into our code now in our next journey of our mongodb we will see how aggregation works see in mobo db aggregation plays a vital role and aggregation comes with so many handy functions with mongodb which will help you to perform and to apply some very simple code snippets into your ongoing uh i would say the requirement which can make your query so much seamless now we will see how this aggregation really works and to work on an aggregation we have taken some default database name called aggregate db and here we have a call student as a by default collection in which we have some set of records are already added now if i just want to apply aggregation now i would like to tell you about what exactly the aggregation is see ideally when you talk about call aggregation okay so aggregation is nothing but a call aggregate like rdbms if you see mythical aggregation there so the unix command like you talk about shell pipeline means the possibility to execute an operation on some input and use that output as an input for the next command that means the output of one particular execution becomes an input for others so mongodb also supports same kind of concept in aggregation framework there's so many type of functionalities are available which we will see one by one into our next code okay now here we want to confirm about a few important things now here let me try to bring some of the important well-known i would say the functionalities of our aggregation framework first we use the term name called dollar project the project is basically designed for select a specific specific fields dollar project is designed to select what is specific fields from the collection we used to talk about call what dollar match the match is responsible to filter out the operations are we clear now it is designed to filtering out the operations you talk about dollar group talk about dollar group so it does the actual aggregation fine we talk about call dollar sort okay it basically sort the document okay like that there's so many operations are available which we will see one by one in our aggregation behavior now my first example the one which i want to execute i have a call student record with me which contains a student name okay the section and the marks and the subject on which subject the person or the student is appeared now here my first requirement is we want to filter data based on a section a because students belong to the different sections as you can see now it is they belong to different section section a b c d so i just want to filter the data based on a section a okay so for filter out i would like to use dollar match let's see how it works so i just would like to filter out only those students who belong to the section a so how we would like to use it now i will say db dot student dot aggregate and inside this we would like to use this square brackets and then curly braces and then use dollar match with this i would like to use another curly braces can i say section a okay and i close this close this close the square bracket close this okay so db dot student dot aggregate aggregate should be always associate match is known as the aggregate functionality section a hit enter and you can see now it lists down all those students who belong to the section a okay very simple and straightforward example now we would like to use the second example so we want to find out all the records where the section is a and we are using and operator marks is greater than 80. there are so many students who have a different marks like 17 19 and whatever so we want to use both the conditions together so how are you going to be using this now remember not only the section a but also marks were greater than 80. so similar thing we have a call match okay after this match we're starting this curly braces okay so after this match we would like to bring and we say dollar and and again colon again we are starting this square bracket now okay we talk about what section a number one and after the first curly braces we would like to use marks we say marks colon and once again they would like to start curly braces and here we use dollar gt that is called what a greater than colon 80. okay all are closed so you see like here we ever got this square bracket and non brackets so what else is left so we have a call 80 we are using another curly braces needs to be closed here and then square bracket okay and followed by again curly braces green curly braces again square bracket again round brackets okay let's see where it has gone wrong so we're using this db dot student dot aggregate we will use this yeah square bracket then curly braces then we use dollar match okay after the dollar match we are using another curly braces and we have a call and operator after this and we have a call let's go now square bracket then curly braces section a outer section is getting closed we are using another curly braces marks colon dollar gt okay and we are using what colon 80 after that we are closing this and using two more curly buses square bracket in this okay so this where exactly you can utilize that so db.student.aggregate and like this it will be able to get it now okay so in a previous example that was the only missing point was after this uh this dollar match we didn't apply this curly braces that was only missing point which was there and now we have applied another code is giving me this outcome and i have only one user who's scoring greater than 80. well that was the first thing which we have it now along with this i would like to go ahead and talk about few more things now i just would like to bring selective fields not all the fields like as you can see we have a call student name section marks everything i'm getting it so i really don't want to bring all the properties from this document i would like to selectively take specific property so let's talk about how we can use this so we'll be using project you remember about project is responsible to select the specific record so i just use this statement name called db dot student okay dot aggregate we're using it now after that now square bracket then curly braces now we are trying to say dollar project what we would like to use dollar project and colon we are trying to use student name okay colon okay remember one thing one means i want those zero means i don't want so whichever property will be enabling it by giving the one as a digit that means it is it is expected to be displayed so i'm saying one comma i'm saying section colon one okay and i'm also looking forward for marks that's it so now you can see now i am once again picking up only those like student section and marks now if i go back and remove some properties like i only want student and section you can see i have only student and sections are used here if i just use this statement name call underscore id colon 0 now you can see only the names and sections are visible id is not because i really don't want id by default id is shown but if i says is 0 that means the id will not be visible here so like that you can select the columns or the properties accordingly that was the one way another thing i would like to use what if we want to find out the student name section and marks from student once again we want to find out the student name section and marks from the student collection where the section is a okay so here it will be the combinations of match as well as the project how we can use this let's take a look towards my implementation if you see the previous one what we have used here you remember about we have used this statement called aggregate match so now we would like to go back and utilize after this dollar match this is the curly braces i'm giving section colon a okay section colon a and after this i'll close this okay and close this again again i'm opening it up by using this option called project dollar project we're picking up the project right now and here with this colon symbol we can use again and say student name student name colon we're using one comma section colon one and one marks colon one and now closing this now you can see i got those so the requirement was we want to find out the student name section and marks from student collection where the section is a so you are not only using the match okay but also using what the selective details like this you can implement it okay that's where exactly the projection really works so projection gives you lot many opportunities which you can utilize it for your own and also it comes with lot many predefined functions like in some avg and all so let's talk about those functionalities too so this is the first thing which we have seen aggregations are taking place now in case if you would like to perform the group like if i want to find out a total marks group by okay section like each and every section i would like to confirm the total marks in every section then how will i basically do that so let's try to get this example also so here let me try to go back and we will not be using match here because i would like to use the group part so after this curly braces we want to use dollar group okay that is called group by in rdb is how you use it here we use this curly braces again here we are passing this underscore id okay you have to provide underscore id in a group because you cannot skip it that part you need to be always remember you really can't skip dollar id whenever you're trying to talk about group this is a compulsory field you need to have it after that i'm using this section in this section we are saying dollar section because we would like to make it on a section basis after this closing and here we are using what total marks colon here curly braces again dollar sum okay colon on which we have i want to use it mark so i can say dollar marks naming convention is very important because it is a javascript so it is a case sensitive okay then and you can see now section wide i'm able to get all the marks isn't this an amazing that's where exactly the aggregations are playing very important role while retrieving such kind of records so hope you're clear about how we utilize this together so in a previous example we got it like hope you're basically taking this marks in my application fine so we are clear about how we are picking that up but what in case if i would like to take a marks for the specific section so it is also possible so we'll be using the same group but only thing is what we'll be bringing the match between because here we are trying to get the all the section marks but if you would like to bring it only for the specific section we know it very well what we need to do so here before i talk about call dollar group we can use one more curly braces here okay so we can use this option called dollar match okay and here we are using this option called section a sorry here in dollar match we are giving this call section colon here we're giving so closing this closing this followed by the other areas like group which you want to start now so you can start with this curly braces hit enter and you can see now only the specific section you're able to receive the records and that's very simple now okay so that's where exactly would like to perform and there's another option like in case if you would like to perform at an average suppose if you want to fetch the count of student in each section and total marks and average marks as well as so total marks as well as the average marks we want to get it so how are we able to take it now so it is very simple as you have seen earlier also into our code how we have taken call group underscore id section talking about section total marks with the sum we are also using this after that we can also use the average okay so this is we have taken group underscore id sum so here onwards we will start so when we say some marks after that we can just put curly braces and we can just use count okay and after this we'll be using this colon curly braces and use dollar sum okay colon one okay and after that i'll put comma here and we use average and inside this average i will use in curly braces we can say dollar avg okay colon of what dollar marks very simple so curly braces is closed okay so total how many three curly braces will be closed one square bracket and round brackets and now you can see you got the average markings in each and every section so just imagine how easy it is for you to deal with the aggregations so aggregation seems to be very very simple approach provided by mobile tv that really create a difference of how the aggregation changes the way how you react okay everybody so after going through uh the idea of like how we can utilize the concept of uh aggregation it's time to talk about like how when it works with mobile db mobile db is properly known for i will say for replication that is called high availability and that feature comes by default with mongodb you really don't need to install any software for this because it is a built-in feature for the mongodb so when you download that it comes along with this so no additional configuration setup is really required when it comes to the mongodb part okay so let's get started and talk about how mobo db can offer the replication see the idea behind the replication is what the idea behind the application is like you are replicating it okay so when you talk about your application you are replicating your data to where the multiple child so here in mumbo db we have one concept available okay that is known as called master okay and slaves okay master is one and there will be multiple slaves okay so these slaves where your records are actually stored and this is a master which will be responsible to replicate the data to all its childs when the request comes due to that in case if one particular node fails so automatically the data will be taken from the other nodes that's the beauty of having this master and node slave process so to make this possible to be a very simple option available in mongodb we have one concept like called mongodb atlas so there we can go and get our cluster ready so here we start with the concept name called db atlas let's search for mobile db atlas and here i see mobile db database as a service see this is a free tool it's the cloud environment where you really don't need to install mobo db in your local machine it is a cloud-based mongodb support which is free to use with a limited amount of space but yes for the testing purpose it is the best suitable so i can start with the start free or else i can say the login here okay from there onwards i can go ahead now it is getting ready now this is the place from where you can start working on your cluster see as i've told you like initially when you will be working on this mobile tv it will ask you to create a cluster initially okay since i already have a cluster with me okay so i really don't need to create it and as a free tier it will not allow me to have more than one cluster set up ready so if i say create a new cluster okay and i say by default aws okay and let me closed on this notification aws you can select any other cloud provider and uh 8gb ram cloud backup cluster name you can see now it is taking me 0.54 per hour reason being because i already have a cluster with me hence more than one cluster is not allowed in a free tier cluster so i have to cancel this but you can go and create a cluster the way it was offered there so if you want to create you can just go ahead and do nothing just select by default aws select your location okay give the name of the cluster you want to give anything you can give it here otherwise let it be the by default name cluster and say create cluster it will take a while minimum two to three minutes depends on the availability it creates a cluster for you and your cluster once it is ready it looks like that okay so here in this application you have to go back and understand what is there in a crystal when you click on cluster zero you can see now here we have a got three nodes available one is called primary node which is called master as i suggested earlier and now we have a call slaves automatically when the clusters are created inside this mongodb by default it will be three node cluster where the one will be the primary and two will be secondary based on your package whichever you have taken it you can increase the number of nodes later on but as a free i'm gonna get or i will be receiving total number of three nodes available here so records whichever will be stored it will get stored automatically in both the nodes secondary nodes and from the primary i can insert the record and secondaries i can read the records remember you can't insert the records into the secondary so you can only insert a record only in your primary record secondaries are not allowed to insert so this is your replica set okay these are the nodes which are available to you so when you click on this primary here you will see it is telling you no whatever no data available no data available nothing is there because i haven't stored any records as such so i just go back to my cluster so initially i would like to go back and create few things now okay i would like to go back and set up few initial things at a time of creating the clusters because when a cluster is created clear now so in that point of time no setting is configured you have to do few settings now first setting is you have to put it remember the steps first step will be your network access so in network access you have to go and you have to say add ip address and in this ad ip address you have to select this option from which location you would like to accept only those ip addresses will be whitelisted otherwise what you can do you can see here in my options i have given 0.0.0 that means all ip addresses are acceptable so all ip addresses are used okay so this you have to enable it otherwise you won't be able to get this network access from any third-party locations next you have to talk about call database access which is required for you to create a new user there are already some new users are created but it is recommended that you to go and create a new users here okay so you can go back and add a new user so by default it is username and password is given so you can go back and create a new user when i say add user you can give the username as well as the password as per your own convenience so new user i'm going to create it that is called sl okay user and here we're giving call admin 123 so sl user admin one two three remember this will be the username and password i'm saying add user new user is automatically added sl user and we went to three so once you have provided this network access database access next you have to create a new data so what you need to do when you go back to your statement okay network access database access it will ask you like you want to create a new database so i just go back to my project zero will be on an option called collections you have to go back and create a new collection here now it is retrieving the list of databases now you can see there are already some collections are there mrdp is one of the database which is there demo db is there a lot many databases are there so you can go back and create some new database and connect through so i just create database i already have a simply learn db with me user app is already when collections are created so creating a databasing correction is very easy if i give you the quick demo i say create database give the collection name called sl demo okay and give the username call [Music] slw employee i can say create now you can see slw create it is there with me so there is no record right now and once it is there ready so remember sl demo and employee i'll go back to my uh code again project 0 and from here i can say connect because i want to connect it so to connect it from because your mongodb is already there so you want to connect it through so to connect it through here very simple option available you can just click on this connect option multiple options are there through mobile share connect your third party application of the mongodb compass so since i already have a mobile shell with me so mac os i have this mac os with me so you can just use this line okay so if you have a window you can select your window since i have this mac os i'm selecting this line but i need to replace with this you can see this username okay and you have to give the username here well i'll selected this i open my terminal okay and this is i'm just closing this and opening up another terminal here since i want to connect to the shell now so what i need to do here in this i'll just paste that the command which i have it now username is you remember i told you recall some users which you have already created let's check here sl user i say sl user i hit enter it lasts me the password so i've given the password admin and now you can see it is connecting with me to this particular see now see it is connecting me to this a particular replica set you can see in a logs it is telling you very clearly okay saying that it is a username 4.2 and you can see it is correcting with your shard cluster the cluster which is created and this is where exactly i have it with me so i'm connecting with this environment so primary is there so if i just want to go back and say show show collections so i can go back and create a new collection here okay so it's up to you now by default collection which is their employee so i can say db dot employee dot insert and now here we can just add name okay now you can see some exception is raised so you understand now you can see the records are added into my primary cluster so if i just go back and go back to my project 0 where we have got collections here you will be getting the [Music] sl demo employee loading the documents so it takes time to get this but this is where exactly you see the records will be stored okay so that's where exactly it works fine for all of you so we have this record okay so when i say show collection so we have a call employee and i say dv dot employee dot find so i can see we have got new collection name called this is added right now okay so like this you have got the first connection established and the records has been inserted in this particular tutorial we will help you to connect your mongodb with the front end that is called python as we know it very well about the popularity of python in last recent years it is growing like anything so we thought why not to offer you this connectivity where you can have the mongodb not in a local environment but in a cloud environment so here we will tell you how to create the mongodb complete environment of cluster in your cloud and we can have this connectivity with our python which is running local to my system so i show you what few important things one by one so why python mongodb we understand mongodb is one of the most important database which is so called document based database available in market and it is fantastic phenomenal in terms of speed and the reliability it is purely called nosql database okay and helps you to go schema less now python is one of the most commonly user-friendly programming language for creating a complete web-based framework so it offers you huge amount of libraries with flexibility of connecting wide variety of applications so we would like to give you the idea of like how python and mongodb works together okay so you can use both the products together to develop different varieties of applications which can suits to different type of ideas now here we have one of the very very popular tool available name called pi so pi is actually the python library which is a kind of a driver through which you will be able to connect with your mongodb and perform basic operations whichever you expect okay so let's go ahead and start working on those demos okay so we will start with creating a mongodb environment with cluster in one of the very very popular tool that is known as called mongodb atlas so we'll be opening our website and go here and talk about call  db atlas i search for mongodb atlas that is basically the mongodb where i called database as a service i'll be selecting the first option and go to the start free because it's going to offer you by default some 500 db of free space i say sign up with google going ahead and selecting this okay i say accept and say submit okay so it is starting up now it will ask you about a few things i would rather say to select skip and continue well it will ask you about which environment you would like to take so i like to take this shared cluster i say create cluster now here it will take a while to get yourself ready for you can see it is offering the sandbox of having five kilometer free space and this mongodb no backup that is the by default cluster name you can give the name of the cluster if you want but let it be y d for cluster zero i'm saying create cluster so my cluster is being released so it will take a while to get your cluster set up so just wait till the timer cluster is getting ready so i tell you what this cluster is gonna give you by default two child and one parent so called a one master and two uh child nodes where your cluster will get ready so you really don't need to set up any kind of cluster in your local environment and that is the best environment i would suggest for most of your development where your time reduced there will be no software requirement because sometimes version 2 version changes and you can get all the benefits of clusters so we're just waiting till the time the cluster is getting ready so once the cluster is ready you will be seeing some options where will help you to create the clusters in your upcoming demos so friends your cluster is now ready you can see now in this cluster you have got this environment so in this environment you will see there are some options they have given you one by one build up your cluster create a first database user add an ip address multiple options are telling you now so how to set up so the first build of the cluster which we have anyways done next is called create your first database user so select this so it will highlight this area now you can say like database access and i'm going to create a first new database user and new database user given that it is a name for admin let's keep very simple username and password admin one two three so admin admin one two three yeah same and say add user now you can see the user is created now let's go back to the next option it's telling me the network access now go here and say sorry now see add ip address and i'll say allow access from anywhere so that i can take it from anywhere i say confirm now it is telling me about the progress i select this and tell me about which type of collections you want okay so i select this and inside this i'll be selecting this called collections okay and it's getting ready so it is giving me some options well two options that will give you load sample data set add my own data i'll say add my own data give the database name sl demo give the collection name emp or employee remember database name sl demo or i can better give the name called srdb sldb and employ i say create that is getting ready okay so my database table is ready that's it so i think we are all set with this environment okay well once it is ready your collection is also ready i'll go back and click on my project zero and here yeah so once it is there then i'll be clicking on this option called connect now it will give me the multiple options how to connect so it will say correct for the shell or it will say connect with your application correct using compass i'll select the python python version 3.11 or later so certainly i'll be using those version only okay and in this i'm having this so i will be using this to connect with my back end so that's how exactly you have the setup of mongodb cluster everyone so we are all ready now with our setup cluster we have already created earlier you remember about we have taken python 3.11 or later so here if i just go back and check i have a god three point eight point five which is python three version which is available so you can select based on whichever we have it let's say three point one one or later we can say three point six or later so there'll be no much difference if i just see even if i just talk about three point four there's some change but here's 3.6 or later it is same i have a 3.8.5 okay so i can use the same option so here in my vs core editor i am using for my development so here is a simple demo dot pi i have used welcome to check if it is working fine so yes it is working fine i'll start working with my first program with mongodb so i just go back and say demo py or i can say uh [Music] py demo dot py okay and here if i want to go back and start working on the development remember one thing we need first dependency called pi okay what i need pi  and for this we have already installed this dependency here sometime back this is how you need to install okay so we have this statement name called what pip installed by mongol that is the first dependency which you need to download in order to work with this okay so that's what we have taken this is installed by so if you just see you can go back and start developing this statement okay so let's go back and start working on this step number one you need to always say import number one the one dependence which you've installed is called buy so as you can just say p by m o n g o that is the dependency we have recently imported from okay let me go back and search from next point so import pi from here we are saying pi okay pi and we're also saying import  client that's the first thing you need to remember okay after that we would like to go back and use the cluster so we say cluster equal to  client and here i'll be passing the complete values the one which we have taken so this complete line i just take it go back and here i'm pasting it now here i have to basically replace this password with admin one two three okay and we are all set okay now once it is ready we can go ahead and define db equal to cluster and provide which database you are talking about okay so you remember about we had a database which was available to us that is known as call sldb so i can just use the same sltp there and accordingly i can use which collection i am connecting it to so accordingly i can go back and insert a record okay everybody so i can see i have got this file with me going forward i have to tell so this is what exactly the connection url you have received now if you define which database you are working on let me say tp equal to cluster and we have to provide in double quotes the database name called sltp if you remember we have used this after that we have to mention which collection it was so collection equal to db and here we just give the name call employee that was our collection name so once it is ready then i have to basically perform some insert operation so it just save post okay it's just a name equal to and here we just provide the properties like i would say name so you know to the json-based database so i can just use the name i say armor and once again i can just say email and say commentarymail.com that's it so this is just the data which i have now i want to insert so i can certainly say collection dot because i want to insert only one record you can see i have open functions coming up collections dot insert one and plus post isn't parameter now we are all done let's try to run this so i'll be running this with python three py mobile demo dot py hit enter now it's done let's confirm here into my code i will just go back and check here inside my applications i can just go back to my collections and in employee yeah there we go we have got some records coming up here okay so these records are nothing but the one which we have recently inserted in our application okay so fantastic so first example is working perfectly fine how we can have the records coming from the python and insert it there like that i can have as my number of records i can add it so how we can basically add if i want to add more than one records let's see this now here and in case if i want to add more than one records so i can just use call post one i copy this url and paste it below and i say pause tool i say i'm saying email um one two at the rightmail.com and rather than saying insert one i can use insert many and inside this i'll be using this square brackets and pass post post one corner post two that's it okay so let's change the little name because it's already there let's insert yep records are inserted let me verify once again by refreshing it well now we have a total number of three records are available now there we go so records are added perfect so like this you can have as my number of records you can basically add it in a similar one the way we have basically used this i can also perform the search part too okay so in case if you want to perform the search part we have a very simple statement available with us what i'll go here the way we have added this so in this i'll just these records which are added inside my application i would not execute this rather i would like to go back and see now they are basically commented now and uh in fact i would like to use this also okay i will go here and find results results equal to same collection dot find if i want to find a name we can just use curly braces name colon number okay so let me say print and pass results okay let's run this okay so it'll print what the results for me okay so it is just printing what the cursor object for me saying hey this is what a record is available to me we can also change in case if we do not think the correct result is coming up we can also go back and uh we can use some alternative option that is called for okay so what we can do let's take a look here we can use for with this for i can say result okay in results and print this result that could be one option through which you can get the details with you okay so what you can do you can run this code again i forgot to put this semicolon here or will you check well that was my requirement was so i'm having this let's try to run this well i got my result and this is what the detail which i have available to me so very simple how you can basically find a record and how you can basically retrieve the records at the same time if you want to have the specific field rather than all the fields so here in my code in this result okay you can just put the square bracket and tell which field you really want it now suppose if you just want id or else if you want name you can basically pick that up okay so if i just want that id the only id is printed that's it okay everyone so you have seen like in my previous code how we were basically trying to fetch all the records we were using this find now in a similar line you can also have the option available because see when we used to talk about confine it gets me a lot many records fine and because of that we were using this loop but in case if you want to fetch the individual records i'll be clear so in such cases you really do not want to use file you can just use find one so what you can do is rather than using find i can also use one more option called find one and for which i can come back just remove this all yeah so here in this case rather than using this find i can use fine underscore you can see this option called find one here we talk about which are the properties you want to skip and which of the properties you want so i can just use this option called underscore idle okay colon zero okay i just remove this undersquared zero and here just print what results that's it let's run so that will try to fetch some of the records for you because if you do not have that id which you overwritten it will certainly not found it depends on what you would like to take so if i just say this is having some issues but no problem but you know it very well how it basically takes now in a similar line we would like to also perform one more activity to talk about delete so for which what i will do is this i just want to uncomment it okay and i would like to insert some records here so here i want to add the id by my own with name so we already have this name email i have it i would like to use underscore id okay so we have this property underscore id colon 101 okay comma like this copy the same using it here and this time i'm using 102 name and everything it'll be taken let me say user1 here we try to say user 2 okay so collections.many result file one i'm just deleting it all and let's try to execute it first okay so it's executed going back okay so i have some records with ide one zero one and one zero two now here i just delete this and perform some actions here here we say results equal to collection dot delete see the options are available delete one and delete money it totally depends on what you really want okay so if i just talk about call delete one it will be only deleting one record delete money means where are the matching records are available to delete it fine so i'm just using this option called delete many okay wherever the property names are matched cause quite possible name sometimes match or whatever it is just delete many so the option is up to you now how you want so the selector name you have to offer it whether you want to match it with the name or whether you want to match it with the email or whatever it is so that will be offering it but there's also one option available where you would like to delete everything are we clear so if you are planning to delete it everything what you can do you can just leave it as a blank and try to run this so collection dot delete underscore menu let's check great all records are deleted so as i told you earlier also so delete many means what it will delete all the records whichever are present in your code now clear in a similar one if i want to perform insert so you remember about we have an option called what insert many and here we would like to pass post one supposed to let's execute so it'll add the records inside this okay and next time what i want to perform after adding this record i would like to perform the update part okay so what i really wanted my update let's take a look update means certain properties i'm looking forward to be get updated okay so in case if i want to check the record has to be updated i would first go and check whether the record does exist or not yeah we have two names user one and user two let's go back and update bar here i just save collections okay dot update one update you can see update one here very simple functionality here you will go and tell which id would like to perform an update so i say underscore id colon which i do you want to consider i'm saying one zero one okay and what else so i just use another curly braces and i say sorry dollar set and after this i use this colon use the curly braces name okay and use whatever you want to use it so suppose there is a user one i'm saying user one two three okay let's see it is loading and you can see the record user 1v3 is updated perfect so your code is absolutely working fine so you talk about either insert you talk about what update you talk about anything it works so insert update one delete one insert one as the name suggests they'll be taking care about inserting updating and deleting one one records but the moment you use many they'll be performing multiple records so this is a very simple way like how the python will connect with your mobile tv in this video we're going to learn about the differences between mysql and mongodb now i'm sure you must have heard about these database management systems but do you exactly know what set them apart don't worry i'll help you in this video first let's look at what exactly is mongodb now as you all know mongodb is an open source document oriented nosql database it is document based which means that the data stored is represented in a hierarchical relationship using a single record and also mongodb is keema free which means there's no set schema to define how the data is being stored in the database this causes lesser data migrations but what exactly is mysql then now mysql is an open source relational database management system unlike mongodb which is document oriented mysql is a relational database system now this uses something called as a structured query language and this is used to access data which is stored in the form of rows and columns now as mentioned earlier data here is stored in the form of tables with rows and columns and each data field comes with an index representing the data in the table and sql is developed and maintained by oracle so then what exactly sets them apart so in the coming section we look at some of the differences between mysql and mongodb depending on certain features first up is the data structure now mysql requires you to define your tables and columns before you can store anything and every row in a table must have the same columns in mongodb you just drop the data in these documents also the data in the mongodb database is stored in a binary format called as bson next up we have schema now as discussed earlier mysql requires a set schema to define the tables in the database now the database administrator is requested to define a schema which defines how the different tables are being stored in the database now this schema is crucial in case of mysql on the other hand mongodb doesn't require a prior definition of a schema next up is languages mysql uses the structured query language to perform actions on the database it is used to retrieve data add data update create a new data set etc in case of mongodb it supports a json query language to work with data next up is foreign keys now mysql supports the usage of foreign keys now if you don't know what exactly a foreign key is then sql uses foreign keys to link one table to another now these foreign keys make data retrieval easy especially when there are multiple tables interlinked with one another in case of mongodb there is no support for foreign keys next up is replication now mysql supports the master slave and the master master replication in this setup data set from one master database server can be copied to other servers in case of mongodb it uses something called as sharding now sharding allows partitioning of data across multiple servers using a shard key don't worry if you're not able to understand these concepts well in the coming videos we'll explain these concepts in detail next up is scalability now sql database can be scaled vertically while mongodb can be scaled both vertically and horizontally now horizontal scaling means scaling by adding more machines to your pool of resources while vertical scaling refers to scaling by adding more power like for example cpu or ram moving ahead let's look at performance now mysql is optimized for high performance joins across multiple tables while mongodb is optimized for right performance talking about community support some of the popular github repositories on mysql currently are mysql js mysql and then there's mysql server and at the time of writing there were about 222 000 repositories on github with seven million comments for mysql in case of mongodb few popular github repositories are mongodb slash and doctrine slash mongodb and at the time of writing there were about 177 000 repositories with about 923 000 comments according to google trends mysql is largely used compared to mongodb so now the question arises which one should you choose well if your application requires multi-row transactions like for example an accounting system then a relational database would be more ideal but if you're using mongodb then it is more suitable for real-time analytics content management internet of things mobile applications and so on also mysql is a great choice if you have structured data and need a traditional relational database in case of mongodb it is an ideal choice if you have an unstructured set of data so you could pick your choice and if you're partial towards one dbms let us know in the comment section below as to why you like that particular dbms and with that we come to the end of this complete mongodb tutorial if you have any questions or doubts let us know in the comment section below thank you so much for being here and watch out for more videos from us until then keep learning and stay tuned to simply learn