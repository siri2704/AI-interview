before starting this video I have a few questions for you do you want to learn about databases database management system or any such topics that you can see here or do you want to gain some skills in SQL from Basics to an intermediate level if your answer to any of such questions is yes then you are at the right place so in this series we'll be covering about databases dbms which we will cover in this part of the video in the next part we will see how we can install dbms in our system so we can practice SQL queries immediately we'll start practicing the SQL queries by creating a database and creating some tables we will also practice the cred operations which are abbreviated for create read update and delete commands that we have in SQL further we'll dive deep into the SQL queries which are required to retrieve the data from databases as per our requirements and as you will see as we dive deeper and deeper the commands will become more complex because of the requirements that we have on the end note we will also have some exercise questions for you in between so that you can also learn along with me while practicing those SQL queries let us begin with a quick check in the world of SQL there are two pronunciations that are widely used one being SQL and the second being SQL now you must understand that both of them represent the same thing which is the structured query language and I want you to be aware of this fact from now on moving on in order to learn SQL we must first answer these two questions that is what are databases and what is a database management system let us start answering those questions in order to give you a broader picture of why do people use SQL at the first place what is a database now according to the definition a database is a structured collection C of data that is organized in a way to efficiently store retrieve and manage information now this highlighted data is important to focus upon let us say you have a bunch of data about your friends now in order to get some value out of the data you need to store that data in a particular structure now because of this structure in your so-called database you can easily store any data of your new friend that you have or if you want to edit any information about your old friends you can retrieve that data and edit the information simply because of that structure now there are two approaches in how you can structure the data in your database one the relational databases and the second is non- relational databases let us see at relational databases first in relational database you'll store your data in a particular format of tables with a predefined set of columns as shown here now you know that you don't have the information about your friend Chris to which country he belongs then you have to fill a null value in that particular field but because of this predefined structure it makes it easy for us to retrieve and edit information for the data that is stored in this particular databases additionally they are called relational because you can store your data in multiple tables which are linked to each other through a common and unique column that they have so for instance in this case we have the column ID which is unique to both the tables and they are linked to each other through primary key and foreign key technique that we will see in the later part of this video the language that you will use in order to manipulate the information in relational databases is structured query language or SQL that we are going to learn in this tutorial but in order to understand that better we need to see what are non-relational databases in non- relational databases the data is not stored in the traditional table format but instead it uses a different and slightly non-intuitive approach to data storage it offers higher flexibility and scalability and hence is designed to handle large volumes of unstructured or rapidly changing data for example here in this key Value method all the information about your friends is stored in the value which is linked to the key parameter which works as an indexing parameter for your information so let's say if I want to know about your friend named Chris I'll use the key Chris in order to get all the information that you have about Chris also notice since we don't have the information about the country to which Chris belongs we don't need to input that information in this particular database now this was one of the many methods that is used in non-relational databases apart from it you can use graph databases document oriented databases white column methods or multimodel databases in order to store your data set in order to manage the data in non- relational databases we use nosql which is also sometime referred to as not only SQL now we have pretty much answered what are databases and we also know that we can use SQL to retrieve manage and store the data in relational database but there must be some framework or something that facilitates the queries from SQL to the relational databases and there comes dbms which brings us to our next question what is a dbms or a database management system but before that let us consider an analogy think of a hypothetical situation where there is a librarian and her task is to efficiently keep all the books in the library she also maintains a catalog which contains all the information of the books along with the location where she has kept them now as a visitor I went to the library in order to search a particular book now for that I need the catalog in order to query the information about the book along with the location where it is kept now the catalog acts as the SQL which helps me to query the books in the library which act as the data in a database in this whole scenario The Librarian Is the database management system which facilitates the whole process now I hope you got some basic inition behind it so let us get back to our theory part according to the definition a database management system is a software that facilitates the creation maintenance and manipulation of databases through SQL and these systems can be used for both relational and non- relational databases but since our focus is for relational databases we will work on r rdbms which is nothing but relational database management system and there are many rdbms systems available in the market for example MySQL SQL light post pre SQL or Oracle database in our tutorial we will be using MySQL mainly because of two reasons first it is an open source dbms second it is one of the most popular dbms out there which is again managed by Oracle itself and that's the end of the first part and and I hope you enjoyed the video do consider subscribing my channel if you never want to stop learning thank you for watching