hello everyone welcome back to my YouTube channel my name is rajat and today we are going to touch upon the normalization concept and currently we are pursuing our this playlist where we are covering MySQL and all the concepts of SQL so the topic for today is going to be normalization and it's a very important topic so please make sure that you understand the concept properly with Focus okay so what is normalization number one see normalization is a process of Designing the system so that you can reduce the redundancy and dependency on the data let me write let me make a note of that reduce redundency and improve performance now how you'll improve the performance when you have a simple table okay so this is a big table let's say in this table you have 100 rows so this is a efficient way or this is a efficient way that I make 10 tables small small like five and similarly five more so I have 10 tables and I keep 10 observations in each of these taable so this is a process of normalization the goal is basically to ensure that the data is efficient and eliminated any anomalities in the data what is anomalities by the end of this video you'll cover this you'll understand so anomalities we need to remove also for easy data maintenance so this is a second reason why we use normalization now gener there are types of normalization okay which you can see on the top also there are normalization forms so majorly there are four types as you can see on the top guys okay now there are some specific pointer which I want all of you to note down before I give the example now I hope you understand the normalization process at least from the database perspective it's very clear to all of us like that this is a process to reduce redundancy and bifurcate a simple data into some chunks so that we don't have a dependency only on one chunk of data now also to avoid any anomalities like unusual behavior of data that that is anomalities okay now easy data maintenance because now you have 10 chunks so maintaining 10 observation at a time for database is also very easy now as I said there are some types of normalization so one is 1f then you have second normalization form then we have third normalization form and then the the fourth one is the full form of bcnf is boys code normal form so let me write it that is Bo Cod and normal form is easy normal form so these are the four type of normalization which we have in MySQL now let me brief you about the major points about each of them like in first normalization form you just need to remember this that each column contain only identical data or Atomic data each column have Atomic data now column all of you understand what is a meaning of column I explained it in previous video so any container of data let's say name where we have so many name in a table one name is rajat then we have Sumit then we have akansha and so and so so this is a container and also called called as column okay so now that is number one then second thing is no repeating group of no repeating group or array so this is the second condition you should note about the first normalization form okay and also the third is no ordered basically dependency okay so on the order in the column there is no dependency so let me write that so guys this is dependency okay sometime my spellings are not so correct so please uh bear with me so this is the quality about the first normalization form then if we talk about the second normalization form it meets first normalization form like all the condition of first nor normalization form also any non key columns are fully functionally dependent on the primary key so we can write it such a in such a way that it meets first normaliz position form condition which is each column have Atomic data also in addition to this all non key column are fully functionally dependent all non key columns are dependent on primary key which I explained earlier also what is primary key so I think this is very clear okay now the second point about this will be no partial dependencies no partial dependencies what does that mean that no key attribute depends on only one part of the composite key which you will create now if you have any doubt on the primary key concept okay please refer the same playlist there are some videos initially when I started this course so this is about the conditions of second normalization form okay now the third normalization form very easy to remember first point it meets the requirement of all this like first and NF so we can say meet to NF requirement that means each column have a atomic data also all non-key columns are dependent on the pr primary key now in addition to that no transitive dependencies meet second NF and none transitive dependencies this is the point to remember about three NF no and the second point will be no key attribute should be dependent on non key attributes so no key attribute should depend on key attribute that means your primary key so this is about the third form of NF okay now let's talk about the fourth one so this is something you can say as a advanced version of 3/3 form of normalization simple guys okay now in this particular one how you'll Define this that it meets the requirement of 3 NF number one meet requirement of third form of normalization that is number one and for every functional dependency the determinant must be a candidate key for all these Concepts guys this is nothing new okay if you're not getting any particular point please start this playlist from starting because there are so many things which I have covered earlier okay so just remember that all these concepts are already covered somewhere in the previous video If you still have any doubt please do the comment okay now what I am writing here for every functional dependency every functional for any functional dependency the determinant must be a candidate key the deter minute must be candidate key so this is very simple okay all these explanation I'm giving you as easiest way as possible okay then second condition for by normalization Form will be that it stricter version of third NF to handle expect basically expectations you have where 3 NF may not be enough so we can say it's the enhanced version of third form of normalization that's how we Define them okay on that note let me take some of the example so that we can discuss more after the example you'll be fully clear because I know sometimes these concepts are bit tough to understand so let's talk about the example number one so in the case of first normalization form let's say you have a table in this table you have two things so let's say one is your student ID then second is your subject then student ID there are two students let's say let's take a example one and two role number one role number two so role number one is good in maths and physics role number two is good with English I hope my spellings you can understand but I'm saying also so I think you should be good so math and physics for role number one then role number two is English and science now when I apply first NF to this table so what will be the output that is interesting I'll create a bigger table now first normalization form will go in this way so this will break the data ID will be there and then subject will be there but what it will do it will put two entry for role number one and two entry for role number two in the first entry it will write math then it will write physics then in this one it will write English and then SS so this is your data after applying the first form of normalization I hope this is making more sense which I explain up there also if you see each column have a atomic data no repetive group or array okay and no order dependency so all these conditions are satisfied here now in the case of second normalization for form how the example will look like let me show you that for that I will create one more table again this is a example of second form of normalization so here we have three columns so second NF this is a example so we have ID and then we have again subject and after subject we have teacher so let's say id1 and id2 there is subjects maths and we have English and let's say Mr Amit teaching maths and Miss Malini is teaching English now there was two conditions for second form like it meets the first NF okay then all non non-key columns are depend dependent on the primary key and no partial dependency so see guys one more thing here teacher is dependent on subject because each teacher have a specialization so if you see Malini cannot teach mathematics okay similarly vice versa so how after applying the 2 NF on this table when I apply second form of normalization on this table how the data will look like and before that One More Concept what is composite key and how that basically works if you combine the ID and subject let's say one maths so this is a composite key which is a combination of a primary key and another key in the data so in this case if I break this composite key so we can write the data in a simple form let's say I will create a table where again two column will be there so this single table will be divided into two table in one table you will only see student ID and subject so here it will come one and two here I will write maths and English in the second table this First Column it will talk about what it will talk about subject and the second column will talk about teacher so I will write math and English here and then name of the teacher which is Amit and Malini so that's how basically second normalization form breaks the data so you can see there is no dependency no partial dependency that was a condition which I told you in the second form of normalization now let's move on to the third form for that example if I enhance this same table okay I had ID then I have the subject then I have the teacher now I have the mobile number of the teacher so that is a bigger table now I have let's say here one ID and then second ID then subjects are maths and physics teacher is Mr Amit and Malini the number for Mr Amit is 99 8877 just a dum dummy number and for Malini you all need the number of Malini so I'll keep it 100 so that is a number of missmalini now after applying the third form of normalization how the data will look like so you will have a ID column so number one so it will again break the table into two tables okay so now in the output you will have two tables so first table we'll talk about student ID again and then the subject and the teacher now if you see this mobile number directly does not have any significance on the ID it has a significance if if you combined teacher Plus mobile number that will come as a composite key so in this case in the first table I will talk about the student ID I will take and then subject and the teacher name in the table number two this is something you need to understand in table number two you see you can see a relationship between teacher and mobile so in the table number two you will see this data so here what will come 1 two here what will come maths and physics here what will come Amit and Malini again in the table number two Amit and Malini and their respective mobile number so that's the example of third form of normalization now to make you understand the last top IC for the day that is bcnf so for that I need to create a table again so let's say I have a ID then I have subject and then I have Department let's use a different data so in the ID I have let's say one one and two then I have maths English again for role number two let's let's say we have maths they are from Department let's say he's from science department then from arts and again from science so if you apply the bcnf again this will break the table into two forms so the first table will contain subject and Department all the values which are there it will not come like this so only one entry for one value will come math will only come in a separate table and then it will come English now if you see so this is a repetitive value okay this is math with science similarly here also it's math with science so in the form of bcnf it will count at as a one so math is with science English is with Arts this is your table one simple logic guys okay so just understand how I'm dividing the data so you will get it clearly now the second table what it will contain it will have a ID and then subject now here you will not have two rows like this this is a normalization when I was talking if you go up when we were talking about the concept so what I did like I was breaking one into multiple chunks so here also you can see what we are doing we are dividing a big table into multiple data and the relationship between the column is very important now in this the value for the second table will be 1 one and two again here math will come and then English will come and again maths will come so guys if you see this is the bcnf okay now one very important thing before I wrap up this video that you should know the concept of of candidate key and this composite key so I think that is pretty much clear to all of you and on that note I would like to wrap up this video if you have any question concern any thoughts on this so please put it in the comment section if you like the video please hit the like button and please subscribe to my YouTube channel I'll see you in the next video thank you so much guys