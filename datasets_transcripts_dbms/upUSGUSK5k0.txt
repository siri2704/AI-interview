Hello friends, welcome to Gate Smashers The topic is data independence Or we can also called it data abstraction Actually we had discus in the previous video. Three schema architecture What is the concept of 3 schema architecture? Between the user and the database, we have put three levels. View level, Conceptual Level, physical level What is the functionality
of the all the three levels? What is the purpose of all this three levels? That's what we discussed in that video. In this video we are going to discuss. Actually what are the use of these levels? Means, Why are we using these levels? So that concept we called data independence. Data Independence as its name suggest, which means making the independent. But from whom? From User. Means, What is the basic aim of the user? To access the data. 24Ã—7 my data should be available. I can access the data at any place. I can access the data at any time. This is, as a user, This is my demand. Now we will fulfill the user's demand, but here we will make the user independent. From whom? From the data. Means the data which we are actually storing. Where we are storing? How we are storing it? Have we put an index in it? Which index have been applied? which data structure we have used? All these things, We are hiding from the user. The second is the conceptual schema. What does "concipual view" means? That whatever logical structure we have used means that we have made tables, how many tables have been made, what is the name of the tables, what is the relationship between them? What is the constraints, what is the primary key, what is the foreign key? All these values, we are hiding from the users. Means that part of the conceptual schema, the logical structure  which I had discussed in the previous video, So we are not showing those details to user. And Similarly in physical schema, that how the data is actually stored, that too we are hiding from the user. So why are we hiding? The concept is that how the user actually access the data, From an application program means there is an interface, a web application or a mobile app through . which they are accessing the data When the user is accessing the data, we do not show all these things to the user. So because of this, actually what is the concept here, we used two types of data independence. Logical data independence. Physical data independence. What is the concept of
Logical Data Independence? If I am at the conceptual level Means What happen at the conceptual level, which table we are using? How many tables are there, how many attributes are in it? As if there is a student table. and in the student table, I have name's column Age's column. So what have we shown to the user? Name and Age. Now, a user. Let say, User 1 User 1 is adding a new column to it. Let say, Mobile number. So if User 1 adding this column It will not affect the application program, means I don't need to rewrite
the entire application program. We are giving the changes what changes user 1 wants, but it will not effect the actual logical structure. That means if user 2 accessing that data. if I had shown these two columns to user 2 earlier, then they will still see these two columns Because Who has made
the change in this structure? User 1. So whatever we are changing, that's changes we are basically keeping it, We are showing what the
user particularly wants to see. How can we implement this? By Using the Views. What is the concept of views? virtual tables means actually we may have 50 columns in the table but I am not showing all the columns to the user I am showing them 5 or 7 columns, So what makes the user thinks that, there are that much columns in the table or in the database. But actually there can be a lot of columns in the database. So what is the concept of conceptual schema? whatever my tables are, whatever tables i have, Whatever are the relationship tables between them, the primary, Constraints,  I'm changing anything in them, because of that change there is no effect in the view level. means that application is running as it is. And this thing in today's time, whatever application you are using, Whether in university, you are using UMS University
Management System. Whether you are using some shopping website, any website if you're using So what do you think they make a change in the daily basis or not? Yes, they do changes on the daily basis. Means in structure, they change in the logical structure. Added a new column. Deleted a column, added a new row, Deleted the old row. So that doesn't mean that they have to rewrite the application again & again. Web application is the same. So what happens because of this in the data, what advantage did i get? Basically I can access the data properly and conveniently. That means I don't need to change the application program again and again. There will be no effect on view level. there will be no effect on the view level for that, What do we use? Logical data independence And so I have another independence that is physical data independence what is the concept of physical data independence? If I am making some changes  in the physical schema. That will not effect in conceptual schema What I mean to say We kept the database in hard disk 1 Now I put it in hard disk 2. That doesn't mean name of my tables will change, Structure of my table will change, No. I shifted the database at backend in another area. I was using a data structure, Stack Or  using any data structures.  I changed the structure and modified it. then because of that there will be no difference in the conceptual schema. This means that we can use different functionalities, Whether I am changing the storage structure. Storage Structure, If I'm changing, Or am I changing a data structure? I am modifying it Or index. Because when we save the data, When we do storage What is the responsibility of the storage manager to save the data properly, means to save the data
properly in the hard disk. now at that time, what do they use? Concept of many indexes used The concept of file structure is also used in the file structure also, It has different method of access, there are random access, sequential access,  linked access. So if I'm changing all those values Then that change Will not do any effects in the conceptual schema. So actually this is data indepence means whatever application we are using in today's time, as many application we are using. web application If I'm using them on daily basis You'll never feel it. that whether they have changed in conceptual schema or physical schema
Or not, because Application program is the same. And there are no changes
in the application program. Similarly, if we see one more thing in the physical schema If we talk about Google, Then they have huge amount of storage What do you think, 10 years ago, where the data was stored,
the data is there only, No. They must have changed at many places and shifted a lot of data and do lots of changes. And if so. If i talk about the structure, conceptual If they are using object-oriented database. they must have changed the name of the object, name of the table,  structure of the table, but that doesn't mean It will change at the view level. Means, Whatever we are changing in the physical schema. Will not effect on my conceptual schema. And the changes made on conceptual level Will not effect on view level. Means my view level will be prevented. How? Because of Logical data independence and if I am changing in physical schema The conceptual schema won't make any difference, it will be prevented, how? Because of Physical data independence That means It's providing me a convenience to access the data and on daily basis We have to change the data to bring the efficiency for fast access. Maybe in today's time, i have a data in which sequential search is good. means such particular data where if I do a sequential search,  it is working better. But tomorrow my data should be such in which link data search is working fast I'll make some changes at the backend, that doesn't mean that Change the name of the table as well. Change the structure of the table. That doesn't mean that either. to change the application program. In this way, the user will get a new application again and again, No. The application we are using is as it is Yes, if there are any changes on the backend. This will not affect the user. This is actual the meaning of the
Data independence and it's a way to provide transparency. What does transparency mean? The user is feeling, wow my data is means my data is with me. But actually, the data is on a remote area. But whenever we access Gmail, it access very fastly. Now gmail persons They also do changes in
physical schema on a daily basis. There is also some change in the conceptual schema, but that will not affect at the user level. So this is what the data independence. There are two types Logical data independence and physical data. Thank you