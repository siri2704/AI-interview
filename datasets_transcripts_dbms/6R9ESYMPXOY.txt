so now before going on to all the normal forms let's discuss another important thing that is functional dependencies functional dependency okay so okay so functional dependency is something like x 2 y value of x value of x value of attribute y sorry value of attribute y can be derived from value of attribute X or you can say that X derives y or Y is derived from X right by X Y is right from X so functional dependence dependency something like x 2 y value of attribute y can be derived from value of attribute X let's understand it with help of an example let's take the student's example right let's take that so let's uh draw the schema ID name email then let's say batch ID I have and batch name is there okay so this is the design of student statement now now in the students table can you tell me some of some of the functional dependencies write your answers so the very first one which I can see is value of id id to name can you say actually ID value of from ID you can actually get the name of the student if the value of ID id2 so the name is something so you can get the because names are repeated maybe the two person can have the same name but ID is different for those two persons those two students right so from ID you can get the name then another from ID you can get the email also write email then from batch ID you can get the batch name two batches can have the same name but ID of both the batches is different so from patch ID you can have the batch name then then email from email you can get ID also because email is also kind of unique right two person two students cannot have the same email right so email from email you can get the ID then from email you can get the name also right and if you know the ID of the person the student you can get get their batch ID as well student2 belongs to batch ID one right so these are some of the functional dependencies so functional dependency is between in a particular table between a particular table the relationship between the two attributes the relationship between attributes status functional dependencies right now let's take another example to understand it more clearly let's take another example let's take the example of Mentor session in scalar one student is assigned a mentor okay from whom the student can ask the curriculum how to practice the things how to revise or they can have mock interviews as well right so and One Mentor can endorse one student only Okay so let's draw the schema let's say Mentor ID I have then mentee ID the student then let's say feedback and let's say rating okay so this is the schema now in this table in this table tell me all the functional dependencies that you can able to uh see in that the very first one is I can able to notice Mentor ID from mentor ID you can get mentee ID and vice versa also because One Mentor can endorse one mentee one student and one and student can be endorsed by One Mentor only right so yeah then mentee ID to Mentor ID as well what are all the different functional dependencies that you can see okay one hindify will give you uh One X and Y don't necessarily be one attribute okay it can be multiple attributes now think about it what can be the different attributes can I say Mentor ID comma mentee ID together it defines feedback through one Mandy One Mentor can together defines feedback One Mentor can can this be true One Mentor ID defines feedback no because One Mentor can give different feedbacks right but this is true one student One Mentor can give one feedback and of course this is true or rating also right so these are the different functional dependencies now let's say if I add here session ID as well if I add here let's say here session ID is also there session ID session ID means the different sessions that the student have with this Mentor okay let's say one session is on Wednesday date and time is there that one session is on uh Thursday at 2 pm something like that right so then how the functional dependencies change now can I say session ID Mentor ID and mentee ID together Belong Together defines feedback right at this particular time at this Mentor with this mentee this feedback is given same for rating then session ID single can also give feedback at this particular time only one session is there so for that session what is the feedback what is the rating right what is the mentor ID at this particular time uh this session is taken by which mentor at one particular time at one date at one time only one session is happening right so it can Define many ID as well so can you notice what the session ID is here the session ID becomes the primary key of the table because this attribute defines all the other attributes of the table right so the instruction ID becomes the primary key of the table right so concept of I hope the concept of functional dependency is clear to you functional dependencies just say in a relationship in a table the relationship between the different attributes value of x value of y can be derived from value of x x derives by okay now the concept of functional dependencies also helps to find the candidate key of the day right if an attribute defines all other attributes uniquely defines all other attributes then that key uh that the attribute become the candidate key of the table why not prime DT because primary key can be chosen from the candidate KGI or the set of candidate key you can choose the most suitable primary key for your table right so it can helps to find the candidate key of the table as well so if one attribute defines the unit identifies the other or other attributes that's the functional dependencies okay so functional dependencies helps to determine the relationship of one attribute to another in a database right and how it helps in normalization normalization basically uses functional dependencies to eliminate the possibility of all these anomalies that can occur right so and how it helps to do that uh basically we'll see that in the second video of normalization where we'll discuss all the normal forms okay so yeah that's pretty much about this video I hope you like this video you understand all the concepts we discuss here so in the next video we'll be coming up with the normal forms of normalization till then stay connected like this video subscribe to the channel and if you have any doubts drop your queries in the comment section and you can join the Discord Channel as well uh the link is in the description box and yeah stay connected thank you everyone