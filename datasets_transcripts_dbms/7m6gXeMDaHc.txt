[Music] hello everyone and welcome back in this video we will be looking into an overview of the database design process this is a simple illustration of a database design process the first step in the design of the database is requirements collection and analysis what is requirements collection and analysis as a name itself suggests database designers interview or ask the database users about their requirements and then try to understand and document the data requirements of those database users the result of this step is the data requirements of the users written concisely or written in brief or requirements written in short yet contains every detail and information along with specifying the user's data requirements the functional requirements also have to be specified these functional requirements consists of user-defined operations that has to be applied to the database and it could also include retrieval and updation of data once all these requirements are collected and analyzed the next step is to create a conceptual schema for the database using high level or conceptual data model we have already seen what a high level or a conceptual data model is a high level data model is a data model that provides concepts close to the way how users persist data or how users see data so using this model a conceptual schema is created and this particular step is called the conceptual design this step is for creating conceptual schema a conceptual schema is a concise or a brief description of the data requirements and detailed description of the entity types relationships and constraints you will understand this better with an example that we will be seeing later as we saw these concepts are expressed using high level or conceptual data model and because these concepts do not contain the implementation details they are easier to understand and also they can be communicated easily with the non-technical users we saw that in the functional requirements the user-defined operations are specified so during or after the conceptual design basic operations are used to specify the user-defined operations that we identified during functional analysis the next step in the database design is logical design this step is the actual implementation of the database using commercial dbms like microsoft sql server oracle etc most commercial dbms uses implementation data model again we have seen what an implementation data model is in our earlier videos so here the conceptual schema is transformed from the high level data model into the implementation data model and this step is called as a logical design or data model mapping the result of this step is a database schema in the implementation data model of dbms so here we had a conceptual schema and the high level data model which is transformed to a database schema in the implementation data model the last step is the physical design in this step the internal storage structures indexes access parts of the files are specified along with these activities application programs are designed and implemented as transactions corresponding to these transaction specifications so this is a very simple overview of the database design process before we see an example of a database application let us see what weak entity types are weak entity types are entity types that do not have key attributes of their own in contrast to this the entity types that have their own key attributes are called as strong entity types the entities of weak entity types identify themselves by relating to entities of another entity type and this other entity type is called the identifying entity type or the owner entity type and the relationship between a weak entity type to its owner entity type is called the identifying relationship so this is about the weak entity types now let us look into the different symbols that we use in the er diagram first one is entity we already learned what an entity is it is a thing or an object that has existence and it is represented by a rectangle this regular entity is also called as a strong entity next we have weak entity we just saw what weak entity types are and it is represented by double rectangle then we have attribute which is the property to describe an entity and it is represented by an oval and a key attribute which helps in identifying an entity uniquely is represented by an oval with the underline under the name of an attribute that helps to identify an entity uniquely the next symbol is the multi-valued attribute that contains a set of value for a particular entity and it is represented by double oval then we have the composite attribute which is an attribute that can be divided into further attributes next is the derived attribute which is an attribute whose value is derived from another attribute and it is represented by a dashed oval and finally we have the identifying relationship earlier in this video we have already seen what is identifying relationship a relationship between a weak entity type and the owner entity type or the strong entity type is called the identifying relationship and it is represented by a double diamond and the relationship between the regular entity types or the strong entity types are represented by just a single diamond now let's look into a sample database application let us see an example database application called company here we have considered a company database and a company database keeps track of the company's employees departments projects and dependents the first step that we learnt in the database design process is requirements collection and analysis so the requirements gathered are as follows the company is organized into different departments and each department has a unique name a unique number and a particular employee who manages the department we also keep track of the start date of the manager or the employee who manages the department and a department may have several locations this is one of the requirement the next requirement is a department controls number of projects each of which has a unique name unique number and a single location the next requirement is we store employee details like the employee name the social security number which is definitely unique for each employee sex or the gender of the employee and salary details we keep track of the number of hours per week an employee works on each project we also keep track of each employee's dependence now an employee's dependence could be their spouse parents or children or anyone that is dependent on this employee we need each dependence first name sex and relationship to the employee so these are the requirements gathered for the company database the next step after collection of requirements was conceptual design so based on the requirements that we have gathered let us see the initial conceptual design of the company database we can identify four entity types based on the requirements that we gathered the first entity type is the department this entity type has attributes like the department name department number locations an employee who manages the department or otherwise called the manager and the manager start date since department can have several locations this attribute is a multi-valued attribute and hence represented by a double oval in our requirements we had specified that the department name and number has to be unique and since they are unique they are the key attributes for this entity type so either the department name or the department number can be a key attribute for this entity the next entity type identified is project this entity type has attributes project name project number location and the controlling department again based on the requirements the project name and the number has to be unique so any one of this can be a key attribute for this entity the third entity type is employee with attributes employee name specifying the first name middle name and last name the ssn or the social security number which is unique for each employee the sex or gender of the employee salary details date of birth or birth date of the employee the department the employee works in and the project an employee works on along with the hours spent so here the social security number is unique and hence it is a key attribute for this entity type employee the fourth and the last entity type identified is dependent with attributes employee dependent name sex birth date and relationship to the employee since this entity type do not have their own key attributes it is a weak entity type and is represented by a double rectangle so this weak entity type has a partial key the dependent name because it is partially unique and can be combined with a strong entity type to uniquely identify its entities so this is an initial conceptual design of company database application that's all with this video here we discussed an overview of the database design process and based on that we saw an example of a company database application with the requirements gathered also we saw the initial conceptual design of the company database we also learnt in this video about the symbols used in the er diagram in the next video we will be learning the concept of relationships and once we learn that we will see an er diagram of the company database that we just discussed hope you all are clear with the concepts that we discussed in this video thank you [Music] you