Hello friends, welcome to Gate Smashers The Topic is degree of relationship. Or we called it types of relationships. Or cardinality in a relationship. What is meant to say? What are the types of various Relationships That exist in a ER model. Or we can implement it even in the Normal relational model. So here if I'm talking about relationships. So the association between the two entities  that is How the entities are connected with each other that association, we called relationship. Now this relationship can be of different types. One-to-one One to Many Many to one, Many to Many. That means two entities are connected in one to one, One to Many, Many to One or in the Many to Many. Instead of writing 'Many to Many, M to M. we write 'Many to Many, M to N. Because if you will write M to M, then many times it seems that relationship between the two is same. But it is not like that. Thats why we actually Write M to N i.e. many to many Relationship  But in this video, we're talking about it first. One to one relationship. One to one relationship means Where the two entities are connected with each other. But what is their association? One to one Now it look like a very simple topic, it looks fine that an employee, a department, If i say that's a one-to-one relationship This is given that this is a one to one relationship This thing is given So what can I say that An employee Working in a department or In a department, one employee, means If I talk about a department, there is an employee or An employee in a department. So if this relationship is a given, then it is called one-to-one relationship But although this topic is very simple. But the point we are going to discuss in this topic. These point are very Important. A lot of students. Who have studied DBMS so far. Even if I talk about the faculties or teachers They will also know that what is One to one relationship but The core concept in it, the deep concept, is not known to most of the people. So we're going to see that concept here. If I'm taking the one to one relationship. So many times it has been asked that if I implement it, means it is the ER model. When I implement it in the relational model. So how do we design tables? Means to say if I talk about the employee table. So in the employee table, assume that, How will be the data? What will be attributes in the employee table?  Let's say employee ID. Employee name and let's say, employee age. There can be a lot of attributes, employee's address, employee's phone number & all Let's take Only. these three Attributes of employee So when we divide, when we implement it in the table. So we'll make a table, there'll be some data in it. Like this. Employee ID, E1 Name let's say, A. Age is 20. Employee ID E2, Name let's say, B & age is 25. Employee ID E3, C. Let's say 28 Employee ID E4, let's say A and Age is 24, because Age or E. Name can be Repeated but There is a primary key in it That is EID, because Any data can be that At one point Any data can even same That's let's say B and 25. Mean in a company two men whose name are same and by chance their age is also same. But from the employee ID,  I will know that they both are different person because here employee ID is, Like primary key, act as a primary key and it is helping me in uniqueness. so that I know that this is unique data. Now let's talk about the department table. So some such entries will
also be in the department table. Like in ER model I already told you that In this way, We represent the attributes in eclipses or at ovals, but we're talking about in the table. If I design it in a table. if I convert it into a table? How will be the data? In such a situation, there will
also be some department ID. Name of the department & let's say Location of the Department. Now the ID of the department. Obviously, Maybe the name of two departments and location can be same, means key. There must be a primary key in every table. And what help does the primary key do? To identify the unique. That means if i have to uniquely identify any two rows or any two people, Are they same or different? So what do I use? Primary key. If we talk about your colleges & universities, in every single college university, Roll number or registration number act as a primary key. So if we talk about the department number, then how will be the data? Let's say department D1 Take the name IT, location let's say,  Bangalore. One department is D2 Take the department name, let's say Production. and location let's say delhi Department D3 & Department name is HR And location is also Delhi. Means in this way the data will be here. So I put this as a primary key in it. In this, I put EID as a primary key. You can do this easily because you know that Employee is actually an entity and what will it become later? A table. Similarly, department is an entity and what will it become later? A table. We haven't used one-to-one yet. Right now we are just looking at that, if I had to convert the ER model to relational, then how would I do it? I'll simply convert this entity into a table. this entity into a table. But now we're talking about it. That is a Relationship. What is the name of the relationship table? Let's say name of the relationship table is Work. You can name anything, that is just a name given by us, Means user has given a name You can give any name you want. but it will also become a table. This will relationship also become a table, why? What do you find out from the employee's table? From the employee's table, it seems that this is the ID of the employee. E-name is this, this is the address. age is this, means the details of the employee. From the department table, I can find out the name of the department, location of the department,
 size of the department. means whatever the information that is related to the department only. But which employee is
working in which department? Who will tell that? that will tell the relationship table That's in which department which employee is working. So what is the relationship between them, this table will tell. So here the first point comes that What will be the attributes in this table? What will be attributes of this table, I know about this table and I can make it too, but what will I make of it? So always remember in this table, There may be a lot of attributes, but there will be two attributes definitely. One is Employee ID. And the other is the department ID Apart from this, it may have some descriptive attributes of its own. That we called Descriptive attributes. You can add here,  but my issue here is the concept. That we are discusing this concept as to why there will be employee ID and DID? Because here this Employee ID Will work as a foreign key. So I'm writing it down here. It is act as a foreigm key.  And it is also act as foreign key. & we have already discussed the foreign key, that the foreign key takes the reference from the primary key. So it will take a reference. From this primary key and it will take the reference. from this primary key. Only then there will be a relationship, right? otherwise how will you convert their relationship into coding, how will you implement it? In the diagram its showing that, it is connected by the line. But in coding. What will we do in coding? We will create this table, then create this table. when we create this table. So we will make EID as a foreign key which will take the reference from here. We will make the DID as a foreign key, which will take the reference from here. Now put data it in. Put some data. Let's say, I'm putting the data in it. Now we talk about, when we talk about data, what will be the data in it? At that time, My one to one relationship will help. Now I have to check, What is the relationship between them, I will only put the data according to it. If I have a relationship, One to one, What does one to one
means, that if I have two sets They both have, this is employee, this department and this work. So if there is some employee. There is some department. So how will they connected to each other? One to one One to one, means If I'm writing here E1 employee, E1 because there's E1 in this table, then i can write E1 here because it's taking these references from here This is the concept of foreign key and I have done already discuss this in part one & part two video of foreign key. So you can check there, that the data, we put here should be the according this table. It should not be out of it. And here also the data should also be the according of this table. So let's say, E1 Here I wrote, D1 So what does that mean? That E1 employee working in department one. Can I repeat E1 again? No, if I repeat E1 again. So how will it become one-to-one? If you write E1 here? Here's what you'll write, let's say D2. So that is wrong, right? E1 employees is working in two departments, but the relationship given is one to one. So if one-to-one relationship is given So E1 cannot be repeat again. In it have to take some other, let's say take E3 E3 is working in the department D2 Similarly, E2 is working in department. D3 Means You can neither repeat here nor repeat here. Because of Relationship. Otherwise relationship will break, one to one So in the case of One to one Neither this attribute will be duplicate nor this attributewill contain duplicate values. So here comes another concept. In the first concept, we saw how to put values in this table. It depends on the type of relationship. Now, after that, it's been asked many times in the exam. What will be the primary key in this table? In this table the primary key, you know that employee ID ID is made mostly. In this table, Department ID. But man, what is the primary key in this table? Which is the primary key in this table? If the relationship is given, one to one. So guys it is very simple. You find out after entering the data that there is no repetition here. No repetition here. So you can make anyone of the primary key Mean primary key will be what? primary key is either E I D or D.I.D. Means Either it can
become a primary key or that.  either of the two can become the primary key. Let's say, I make EID as a primary key in this table. So you will have option here. Option A, this or this Or only this one Only this, both. You have to take care in the option,  if the relationship is one to one. So either of these two can be a candidate key or primary key. So If I make EID as primary key Fine. EID has became in this table. Now comes another point. Whether I can reduce these tables, how many tables there are now, 1, 2, 3 If I have a relationship, I'm repeating again and again that if i have a relationship one to one, It's given. After that I'm talking about all these things. Last point what can be asked here, If I have these three tables. Can I reduce them? Can I reduce it? Yes. You can reduce it, how? If you know that you can make
either of them as a primary key, then you make the EID a primary key. EID became primary key. because EID will never have repetition. You can make it too, but let's suppose, you made it. Now if you look carefully at these table, which is the primary key in this table? EID. Which is the primary key? EID. So, merge these two. Merge these two tables. When these two tables merge. So how will be the new table created? Here I'll make a new table. Here. So what will come in the new table?  . Employee ID Not writing twice, it's just same. It's same, employee ID, just merge it. Don't be confused by the name whether I have written Capital or Small here? That's the same thing. If you can give the same name.  So Employee ID has merged here. The employee name has came. along with age. and along with that DID came. that is department ID. now these two tables together merged. Then see, how will you put the data? E1, E2, E3, E4, E5 Then the employee name A, B, C  A, B. and age. 20 25, 28, 24, 25. Department. D1 What is the department of E1, D1 Department of E2 is D3. Department of E3 is D2 there is no department of E4, doesn't matter. It not necessary that there is some department of all the employees, if there is no department of E4. So this will be empty, that is null amd this is null. So there's no problem. That's the primary, isn't it? So, rest of the attributes can be null Can't get null in primary key. So look at these two tables. Merged and made it. So, One this table and one this table. So finally, How many tables did you have? Two. This is a very important
concept of the database, but many students has missed this concept If I have One to one, So firstly, what attributes
will come in the works table? What will be the data in it? What will be the primary key? And in the last Can I reduce these tables? So if I take the EID. then you can merge these two. If I take DID, then you can merge these two tables, but how many will be the
number of tables in the final? Two. So this is all about actually, how the one-to-one relationship actually helps to implement the ER
model into relational model. when we implement the ER model into the relational model,  do coding in the sequel. So how does one-two-one relationship helps? And what are the questions possible in it? The first question is, if there is one to one So which will be the primary
key in the relationship table? Secondly, can I reduce them? If I can, how many tables
do I have in the final? So the answer of the first question is here, either EID or DID. Answer of the second table is this,  that you can merge it. So this is all about the One to one Relationship If you liked this video then please like it, share it and Please press the bell button, So that you get the latest notifications. And don't forget to subscribe my channel. Thank you.