foreign [Music] let us start this session in previous video session we have discussed that there are some anomalies in this database this table is in second normal form but still it has problems related with insert update and delete so in order to solve the problem of this we have to apply third normal form so let us discuss the definition of third nominal form the definition of third normal form state that a relation is in third normal form if and only if it satisfy following two conditions the first condition is relation should be in second normal form and second condition is no non-prime attribute is a transitively dependent on the primary key so third normal form talk about two conditions first that it should be in second normal form and second no non-prime attribute is transitively dependent on the primary key here we are discussing about the New Concept called as transitive dependent in order to understand this transitive dependent further we can Define this third normal form in another simplified way but and the simplified definition of third normal form can be considered as so a relation is in third normal form if and only if it is in second normal form and no non-prime attribute should functionally determine any other non-prime attribute because this condition provides the same information as transitive dependence with state that no non-prime attribute functionally determine any other non-prime attribute in order to discuss the concept of transitive dependence and the condition that no non-prime attribute should functionally determine any other non-prime attribute let us consider one example let's suppose we have a relation R having three attributes a b and c and let's suppose a is its primary key while B and C are its non-key attribute so you can see that B and C are are functionally dependent on primary key a but let us consider a situation where B also functionally determine C in simple words here we have two non-key attribute and you can see that one non-key attribute is functionally determining another non-key attribute so when a non-key attribute functionally determining another non-key attribute this situation will be called as transitive dependence because in this situation you can see that attribute C is dependent on primary key through two ways one C is directly dependent on a which is the primary key and another C is also dependent on the primary key through b from A to B and B to C so C is dependent on the primary key which is a on two ways one directly and other indirectly through b so this indirect path between a and C through this B is called as transitive dependence means C is transitively dependent on a and definition of third nominal form state that a relation should be in third normal form if and only if it is in second normal form and no non-prime attribute should be transitive dependent or in simple words it's no non-prime attribute should functionally determine any other non-prime attribute so here two non-key attribute are functionally determining each other so this will result into the case of transitive dependence and relation is in third normal form if and only if there should be no transitive dependence between a non-key attribute and primary key but here we have a case of transitive dependence now let us consider this table where we have problems regarding insert update and delete anomalies and in order to remove these anomalies let us draw its functional dependence diagram so here you know that we have roll number as a primary key while name system used and early rate will be its non-prime attribute or non-key attribute we also discussed in our previous session that there is also a dependence between system used to early rate so if I draw its functional dependence diagram it will be like so here you can see that roll number is the primary key which functionally determining name system used and early rate and system used is also functionally determining early rate from the FD diagram we can see that this relation isn't second normal form because every non-key attribute is fully functional dependent on the primary here we have three non-k attribute that are name system used and early rate and all these non-key attribute are fully functional dependent on the roll number because there is no subset of primary key so they are fully functional dependent on the primary key but if we apply third normal form and we can see that so here we have a functional dependence between two non-key attribute that is system used in hourly rate and we have just learned that whenever we have a functional dependence between two non-key attribute there will be a case of transitive dependence and now in this FD diagram you can see that early rate is dependent on Roll number by two ways one it is directly dependent on Roll number and another hourly rate is dependent on Roll number through this system used so this through system used will cause a case of transitive dependence and this transitive dependence results due to this functional dependence between system used and early rate so this is the same situation where we have functional dependence between two non-key attribute B and C so here B will act as system used C is early rate and a is roll number so here we have a situation of transitive dependence and definition of third normal form state that a relation is in third normal form if and only if it is in second normal form yes this table satisfy the condition of second nominal form because every non K attribute is fully functional dependent on primary key there is no chance of violating fully functional dependence because there is no subset of primary key so it is already satisfying second normal form but there is a case of transitive dependence so definitions state that there should be no transitive dependence but here we have transitive dependence and it is due to the functional dependence between system used and early rate so in order to solve this issue we have to apply rule of decomposition and this rule of decomposition state that if we have situation like this a as a primary key and in this situation A will functionally determine b and a will also functionally determine C but if we have a dependence between B and C also then we have to convert it into two tables that is a b and BC so if we have a transitive dependence between a b and c then convert it into two tables a b and b c and here a is the primary key it mean that you have to create a separate table involving the functional dependence between non-key attribute if we apply this rule on this FD diagram then we have to create two table one is a b and another is BC so according to rule of decomposition whenever you have this situation always create two table one is a and b which is the primary key and another non-key attribute but there is a dependence between B and C so due to this dependence we have to create a separate table for b and c and later on you can see that we can join B and B together to create a full information of a b and c so the rule is that whenever you have a transitive dependence like this always create two table one is a b and another is BC so let's apply this rule over this FD diagram so in this situation this is our a this will be our B this will be our C and let's suppose this we have D so now we have to create two table one involving this and another involving this so we have to create a table with roll number name and system used and another table involving system used and hourly rate so here this table has been decomposed into two tables one is roll number name and system used as you can see here and another is system used and early rate so let's give a thought about the anomalies in this table and let's check that whether these anomalies has been resolved or not that we discussed that in this table we have a problem of insertion we cannot insert the data office system and its hourly rate without having corresponding student but now we can store this information in this system used in early table without having corresponding student you can easily store now laptop 40 in this table without having corresponding student because here system used is the primary key and here roll number is the primary key let's give a thought about update problem we have update problem in this table if we have to change the rate of P1 from 20 to 30 we have to make two update operation but here system used in the primary key and we have to make only single update operation in case of P4 we have to make three update operation here but here in P4 you have to make only one update operation so problem has been solved if we remove the data of a particular student it will cause the deletion of system and its corresponding hourly rate but if I remove 109 from this it's simply removed from student system table but there will be no deletion in this cyrix and its corresponding hourly rate so we can delete the data of student without affecting the corresponding information in the charges table so we have solved the problem of insert we can insert laptop 40 without having corresponding student we can change the hourly rate by having only single update operation we can remove the data of student without affecting corresponding system and early rate information so this way by using third normal form we are able to solve its problem why we have a case of third normal form because this FD diagram has a case of transitive dependence because there is a dependence between system used and early rate and these are two non-key attribute having FD functional dependence among them so whenever two non-key attribute have functional dependence there will be a case of transitive dependence because in this case early rate is dependent on Roll number which is the primary key by two ways one is directly and another through system used and this true problem is called as transitive dependence so in order to solve we have a rule that whenever we have this situation you have to create two table one is a b and another is BC so when we apply this situation over this we have to create two table one is roll number name system used and another is system used and early so we have these tables and through this we are able to solve the problem of insert update and delete can you identify foreign key in this table yes we have a foreign key and foreign key is system used this column will act as the foreign key here roll number is primary key here system used in primary key and this foreign key will refer to this system used in charges table ultimately this charges stable become a master of system where we are storing the rate of all possible systems here we are referring the system used from the charges table and only those systems are allowed which are present in this charge State ultimately we can conclude that this table which we discussed in first normal form has been finally converted into four tables so one is core stable where we are storing the information of course by having course code course name and teacher name this is actually a course Master where course code act as its primary key we have information of students where we are naming the table as student system we are having roll number name and system used and here roll number is the primary key while system used is the foreign key which will refer to the charges table and in charges table we are storing the information about system used in early rate and we have another table called as ours assigned where we are storing course code roll number and total R so we are decomposing this larger table into four small tables to solve the problem of insert update and delete and you can clearly see that in course this is the primary key in student system roll number is the primary key in charges system used is the primary key while in our assigned course code and role number combination is the primary key we have three foreign keys in this table system used is the foreign key which will refers to the primary key of charges table for its validation so here this is primary key this course code of are assigned is also foreign key which refers to this course code for its validation this roll number is also a foreign key which will refers to the roll number of student system for its validation so this way we are able to join all the tables to provide the full information so this is the concept of normalization and it is important to note that more than 90 percent of databases are normalized up to third normal form so it's very important that you should have clear idea about first second and third normal form and in this we have considered this particular data set in the beginning we applied first normal form to normalize it then we applied second normal form to decompose this larger table into three tables then we further discussed that there are some problem in this table and in order to solve the problems of this student system charge table we have to apply third normal form and when we apply the third normal form on this table this table is decomposed into two tables student system and charges and ultimately this larger student table is decomposed into four table scores student system charges and are assigned are so that there should be no insert update and delete anomalies in this table so normalization is actually a process of decomposing a larger table into smaller tables so that it should not having any insert update and delete anomaly and in this example this student table is decomposed into these four tables so that the there should be no insert update and delete anomalies in this table so this is all about this session I request all of you to please subscribe this YouTube channel to receive latest video tutorials on topics like data mining machine learning dbms big data nosql and many more we have created full online course on dbms which is available at udemy platform you can join this course to get everything at a single platform we have also created multiple courses over udemy you can learn SQL by joining this simplified approach to SQL course which is available at udemy we have also created a online course on mastering PL SQL and mastering machine learning both of these courses are available at udemy platforms I have authored books on Data Mining and machine learning simplified approach to dbms nosql beginning with SQL and pl SQL for beginners all these books are available at Amazon platform to read more on this you can follow my website pratikbatia.com thanks for watching this video [Music] thank you [Music]