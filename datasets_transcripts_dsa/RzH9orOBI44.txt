guys plain and simple this is how I would learn data structures and algorithms entirely for free so firstly if you don't know how to code already you should do that I would recommend python or JavaScript JavaScript if you think you might be a web developer python if you think you might be into data science if you really want to understand everything at every possible level then you should do it in C and C plus plus but that is more difficult if you're looking to Learn Python then I would highly recommend starting with this video that I'll link in the description it's about three hours long and covers all that you would need to know if you want to learn JavaScript or CNC plus plus I'll link in the description my recommendation for winning those after you've learned how to code I would definitely recommend going to Coursera and taking the University of California San Diego's data structures and algorithm specialization the stuff on Coursera is paid for if you want certificate and the assessments however if you're just looking to learn the material which is all you're really going to need to do then you can enroll for free you might not want to do that unless you want to pay for it you would actually go into the courses you'd pick a particular course go here and then in that course you'd click on that and then in the top right if you want to it's going to say upgrade to the specialization but you immediately have access to the content right here if I click this the video is going to start right away so let's walk through the courses we've got algorithmic toolbox that's your kind of generic computer science discussion about this it gets into some pretty tricky things but I promise you you'll get through it if you force yourself to this is one of the best resources you can get for it and for it being free it is really fantastic data structures well this is algorithms so data structures make sense very similar to algorithms you can kind of group them as the same thing however as you can see here it is very particularly focusing on graphs then we've got algorithms to be performed on those graphs we've got algorithms on strings so basically these two courses here as you can see 55 hours that's because these are very very common types of questions to be asked in Google Lead code style interviews we've got Advanced algorithms and complexity to finish things off and to actually finish things off you can do a programming challenge although that's not necessarily required so as you can see this is not going to be a super quick process this has 39 hours in the first course 24 55 18 27 and 17. that's well well over 100 hours of time here it is a complex thing to learn it's a big beast to capture but once you go through that and you learn all this stuff you might not be a master at it yet likely overwhelmed but the purpose here is not to super super memorize every single detail in here it's to learn what you need to know so that you can practice it in the next step it may not surprise you but you have to do this step please don't ignore it it is the right thing to do go to lead code and just sort their problems by easy make sure that you can get a confidence boost and solve these problems and understand how the platform Works understand what they're saying of the space and time complexity and how you're doing it properly they will penalize you if you are doing things too slow that's why this platform is extremely extremely good for preparing for these styles of interviews please also so don't just get caught on only doing the easies it's likely that in a Google style interview you're going to get a medium to hard level so somewhere a little harder than the average medium is most likely you may get an easy if you're lucky you may get a hard if they feel like challenging you now just because I'm saying lead code here doesn't mean the step is simply go to lead code and start coding it is a very particular process and you know the right thing that you have to do but it is very tempting to do the wrong thing make sure that when you say click on a problem you read it you try your absolute butt off to solve it in the programming language of your choice when you get stuck you read the solution and you really really understand a couple of the best solutions that they've got or at least one of them then you go back you try and solve it yourself knowing this new technique not just by copying the code and putting it in there understand the techniques that they did understand the solution that they gave why it has the space and time complexity that it has make sure you can write it by yourself afterwards rinse and repeat Pete and make sure to do the same problems multiple times just because you did something one day doesn't mean you could never do it again because you're trying to get all the check marks make sure that as you go through you are actually learning the things and not just getting check marks on the platform this last step is absolutely critical and it's a big reason a lot of you are not going to get the job even though you are very skilled at this being a competitive programmer here is not enough you are going to need to be confident and to explain and solve the problems under pressure and so you need to simulate that environment if you just go and solve 500 problems on your by yourself you are not going to have the same results when you get someone from Google that you know you've been waiting three months to get a call from and this is your one shot and if you blow it then it's it's gone and you might have to wait a year until you hear from them again that's going to be a stressful situation and so you need to try your best to simulate that environment by getting a friend making them really stress you out while you're coding explain this stuff to them explain the space and time complexity of Your solution don't just cheat on it actually do it right and you will get much better results if you do that a bunch of times before your interview and during the process as well I hope this video was helpful guys all the links are in the description below and have a great day I wish you the best of luck