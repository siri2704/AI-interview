[Music] hi everyone welcome to another PSC session today we are going to discuss a problem named coding Club fight let's move to the description part it's saying P went to fight for coding Club there were n Soldiers with various Powers there will be Q rounds to fight and in each round PES power will be varied okay so with power m f can kill all the soldiers whose power is less than or equal to M okay and after each round all the soldiers who are dead in previous round will be reborn such that in each round there will be n soldiers to fight so we need to count the number of soldiers that he can kill in each round and total some of their powers okay so let look at the input also here in the sample input first line is uh is n value of N means number of soldiers and the N following lines are the power of n soldiers means from here to here first Soldier have one power means power equals to one so power two 3 4 5 6 and seven okay now this line is the value of Q means we have three rounds to fight and the following three lines have the power of p in each round okay like in first round p power power is three second one prous power is 10 third one prous power is two now let's calculate uh the I mean calate answer for the question for first round okay first round power of p is three so P can kill so of one less than three two power is less than equals to three so number three power is less than equals to three Soldier number four is four four is not less than equals to three so he can't kill this person okay same with five six and also so in first round it can kill only three soldiers so answer is three and the sum of their powers is 3 + 25 plus one six six okay similarly for all the rounds like here the power is 10 okay now for the Seven Soldiers none of them have power more than or equals to 10 okay more than 10 okay so that's why all soldiers can be killed by P so the count of soldiers killed is seven and the sum of their powers is 7 + 6 + 5 + 4 + 3 + 2 + 1 okay similarly for the next turn also so now let's first addite the GI okay what is our given given are and Soldiers with different powers are given okay we have the Q rounds to fight I mean p have the Q rounds to fight and given that P's power equals to M which will be worried in each rounds okay and P can kill Soldiers with power less than equals to him okay power Le than go to him and in each round there are n soldiers to fight with means all the soldiers who were killed in previous round now will be will become alive again in the next round so there is always n soldiers to fight with what is our task it is to count the number of soldiers that he can kill in each round and at the same time find a total sum of their powers also I mean the soldiers who have been killed and the some of their powers also we need to find that okay now two possible approaches are there first is a brute force in which we can search linearly all the soldiers who can be killed by P means pow Soldiers with powers less than equals to M we can search linearly okay at the same time we can count and some of the powers also so that will give me time complexity of Q into n okay now second approach is binary search using bounds okay so that's what we are going to discuss here further because I'm pretty sure that you already know how to implement this approach the brue force one okay so let's focus on one very important line which is given already in the question okay because that's what around which we have built our whole app using B search okay the line is he can kill Soldiers with po less than equals to him okay so and uh in other words we can say that he can't kill Soldier power with power greater than M okay we can say that right uh just remember that part we'll come to that means if any way we get the index of power see here index of power which is just greater than the fous power means power uh in power array which is just greater than M okay and at the same time we shows that all the power before that index should be less than equals to M okay for this this is Possible only in this sorted Arrangement okay if we sort the power array if we sort the power array then only it is possible so in the sorted power array if we try to find out now if you find try to find out the index where power is uh I mean where power is just greater than M okay we saw that now here index of power which is just greater than fous power means M okay so we we call that I mean in sorted array find power greater than m i mean just greater than m is called upper bound of M okay remember that we'll come to that okay so ultimately there are three steps to do this step one sort the power array step two find the index of power greater than M that is upper bound of M in power array why we are doing that because if the is sorted and we are trying to find this m in the upper bound of M that means all the powers at uh uh all the powers before this index now will be less than M so these are nothing but the soldiers with powers who can be killed by push okay P can kill all the soldiers which are at index less than the upper bound of M okay so step three at last sum up all the powers from beginning to the index before upper bound of M yeah that's what I was trying to point out okay so that will be our final answer for each round okay for each round we are going to do this I mean follow these three steps okay so let's come to the pseudo code part this is the function prototype that we can use this is the power array this is the value of M okay so step one we are doing is sorting the power array okay okay sort any have already WR that okay sort the power array second is uh finding the upper bound I mean uh of M in power array in the sorted power array and that will be stored in the variable named index okay now TNS is total number of soldiers killed by P and tsp is total sum of power of soldiers C by P okay so initially both are zero I'll tell you why because we are going to sum up now find the sum up and now and till where we are going to add we are going to run a for Loop which is starting from zero it will run just before the till the index before the upper bound of M so that's why I is less than index because index is nothing but having the upper Bond of M so uh here total number of soldiers are being incremented and total sum of power of soldiers C by PES also counted okay summing up so after the end of for Loop okay we can just print total number of soldiers Ked by P is space total sum of powers of soldiers C by P see here this is now total total number of soldiers killed by P and this is the sum of power of soldiers killed by P okay so that's all now run this function for Q rounds because for each round we need to find it that's why for Q rounds you will run this function for Q rounds okay and it will print answers for each round we are okay to here right now let's move to time complexity part so n login time complexity is the for sorting we all know sorting takes this much time this is this login is for finding uppers bound why because it uses binary search and we all know binary search R for log of and time okay and uh this n is for uh counting we can say sorry counting or summing up the powers summing up the powers of dead soldiers okay so ultimately the domed time here is order n login as we know n is greater than q but there's a catches here in this time complexity also in this whole time complexity thing okay but I will leave this to for you to find out what can be the worst very worst case where something el else will dominate okay and hint is and here is for this case n is greater than Q that's the hint okay try to find out so I hope you people understood till here everything completely so thank you everyone we'll meet you in the next next [Music] session