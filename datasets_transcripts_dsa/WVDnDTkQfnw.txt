hello team welcome to the coox we are going to launch a new course of data structure and algorithms this course include everything regarding the DSA we are going to start with the bubble sort so let's check an example bubble sorting we are going to take five elements 85 36 47 38 10 12 so before going to start bubble s let's discuss something what is our Target more to do in the bubble s we need to settle down the biggest element at the bottom and we need to compare first element with second second with third third with fourth in a single step so let's compare the thing let's start see we can go with the PBT as well but uh going through PPT is just like a watching movie only if we do work out it's more memorable for us so let's do the workout only first we will compare 85 with 36 me zero element with the and uh first element so first we will create the logic how sorting work then we will go for the Sorting let's compare zero element with the first Z We compare with first 85 we will compare with 63 85 is bigger so we will Swip 85 63 then we will compare first with the second first with second 85 is bigger we will sweep 47 35 then we will compare second with the third now again uh 85p speakers so 85 38 now we will compare third with the fourth third and fourth still5 is bigger so it's settle down the bottom now we can see 85 is settled down and one one Loop is complete so first cycle is complete here this is settled now again we will start comparison 6 3 with 47 so 63 is bigger than 47 is small so 47 63 zero compared with first then we will compare 63 with 38 oh you 38 is smaller and 68 is 63 speaker then we will compare with to 12 sorry 1 to 2 and we will compare second element with the third and 63 is speaker so we will s WR 63 here that5 is already settled as we can see our second iteration is complete and we got two large value at the bottom now again we will compare zero element with the first 47 is bigger than 38 so 38 47 now 47 is bigger than 12 so here it is 12 and here it is a 47 then 63 is settled 85 is settled now what we compared from 0 to 1 and 1 to 2 here 1 to 2 0 to 1 and 1 to 2 our third iteration is complete and we can see our third element is also settled now we will compare first zero element with the first so 38 is Speaker 12 38 and 47 63 and 85 is already settled 2 three now we can see our string is sorted we have five element we have four iteration 0 1 2 3 so four four iterations we had first iteration second iteration third iteration for so first uh we will write the logic to create this indexing if we are able to do this indexing then we will go for the next indexing so we can see here uh there are four elements here then three elements here two elements here and only one element here so we can here make a loop with the make a maximum value as m is equal to 3 so 3 then 2 then 1 then zero so we can see that we can get the maximum value here start the coding I'm going to use node J here uh we can use any technology TSA is independent of Technology we can use multiple example here with multiple languages so that's not an issue just a minute hold on what is this yeah first example so let's take variables here we can take two variable we can go with the one also but to keep in mind always we are going to take two variable e is a z f is one okay v e is = a = z where isal to one now we will create a loop while when e is greater than equal to three this book should work e++ f++ now we will console do log sorry okay when we will run this code orig sorry that should be less than equal to if you keep going practicing then you can able to get the error uh as we can see our first Target is complete then we will see uh first iteration complete then for second then third we need to take another variable so let's take one variable v m isal to 3 okay while m is greater than equal to Z our low and m-- now again we will write the code we can delete it not an issue if you keep writing the code it's easy to remember so V eal to Z RF isal to one while now previously we are taking e is less than equal to 3 now we will take M here console. log conation F A++ f++ for segregation we writing here now now one we can see our Loop is complete from we means we got the indexing here now simply we need to compare the items and sing so let's take another example Tes we numbers isal to uh what we have taken 85 63 47 38 and 12 now I can copy the logic from here but let's practice again one outer loop or we can okay this time we will go with the simple only this three means total length minus 2 or we can go with the dot lus 2 this will become generalized now okay then while m is greater than equal to Z this look should work m-- okay now take one variable b e = z f = one while is less than equal to M console do log a plus F A ++ f++ okay now we can see now C indexing is done now we will compare the values if e of sorry if numbers of e is greater than numbers of f then we need to perform some logic mean a bigger value that value is a bigger value then let X is equal to numbers of e numbers of e isal to numbers of f numbers of f is equal to numbers sorry X now over spping is done just simply console. log numbers cons number of the sorting and we can print here before so here you can see number before sorting 85 63 47 38 12 now we can see 12 38 47 63 and 85 and as we have SE it here so here the bubble sting is done