look if you are someone who wants to learn DSA within a month or two then sorry that's not possible my friend but if you are someone who is saying to me that I want to learn DSA within a span of 3 to 4 months I will prepare for it sincerely and since I have L time please provide me few topics few important topics that I can cover and create a decent interview with the help of those Topics in DSA then this video is definitely going to work for you so hey guys this is all here and in today's video we are going to talk about the five most important topics of DSA that are generally asked in most of the technical interviews and if you cover just those topics then you can easily create a decent interview of any good company so let's get started without wasting time look first of all I would like to clear just one thing that the topics that I'm going to tell you in this video are not the only topics that are defining DSA I mean DSA is a very vast topic that requires years of years of practice and a lot of hard work of a guy and if you are thinking that I am some kind of a guru or a YouTuber who is tell who is going to tell you some tricks that with the help of which you can learn DSA within a month or two then that's completely wrong and I am completely against that idea but what I'm saying is with the help of these five to six topics you can get a decent idea of DSA I mean you can easily solve 60 to 70% of those of the problems of DSA with the help of these 5 to six topics so with the help of which they can help you in a shorter span and if you have last time then you can definitely go with these topics so let's get started so the topic number one that is the Evergreen topic of Aries and strings and why Aries and strings because if you are someone who is learning DSA or if you are into problem solving then the problem solving is starts only from arrays and strings itself okay means you can't jump to jump to any other topic or any other Advanced topic we can say and if you are a beginner you can't jump to any other topic if you haven't learned about arrays and strength so these are the fundamentals these are the very basics of DSA so first of all if you are jumping directly into DSA and you have done a little bit of coding then I would suggest you to clear the fundamentals of how arrays work how sorting of the arrays work how strings work how various operations of the strings takes place how collection Frameworks of java works on strings as well as on Aras and how you can use them for your purposes to make your problems a bit simpler for you so that will help you in problem solving that will help you in UPS solving problems that will help you in understanding the problems very easily so these are like fundamentals these are like basics of problem solving so you must learn first about arrays and strings and then you should proceed to the next topics that I'm going to tell you so the topic number two that I think is really important for a guy who is who wants to learn DS in a shorter span of time is hashing so hashing is something that reduces the time complexity from Big off and square to Big off and in a lot of cases so in most of the problems in most of the are problems or in most most of the counting problems you can say where you need to keep track of frequency or something like that you have to use hashing like hash Maps or hash set so you must learn about those fundamentals how heaps work so hashing and heaps are the few important topics that you need to cover after array and strings and that will help you in complex problems time complexity con understand like you have given the maximum range of 10^ 4 then you need to solve it within a range of B of n Square so the here comes the case of hashing so when I was learning DSA so initially I didn't know about hashing and I also not studied about that but when I started giving contest on lead code then I got to know that okay how I can boil down the complexity from Big of n Square to Big of n with the help of Hing so that's how I got to learn so you don't need you don't need to worry about that so after learning about AR after learning from Aras and strength you can directly switch to hings and heaps because that will help you to work on time complexity that will help help you to make your code faster and you can make yourself safe from the tle error so yeah you should go with hashing so the topic number three is binary search so binary search is one of the most important topics of TS and that is a really super important topic and that works on sorted areas and when you search for problems of B reseearch you will find a h lot of problems for B research only I mean there are thousands of problems regarding binary search and most of the harder problems that contain the concept of binary Sears are really really hard so you need to grind on that very carefully and most of the job interviews also ask regarding binary a lot so that is an important point that is an important topic regarding learning DSA as well as from the point of view of interviews so you can't skip that so just learn binary search as your topic number three slideing window is the next important topic after binary search and it is super important to boil down the complete City from Big of n Square to Big of n while solving the problems of sub subarray or like when you are working on sub aray problems then sliding window super helpful so you can't definitely skip that and most of the big tech companies most of the big companies ask that problem but that questions are like they not just directly ask the question of sliding window means you just can't detect it with the directly by directly reading the problem but when you will apply the approaches when you will learn in Concepts then you you can easily find out that okay you can apply sliding window that so for that you will require practice so just go on and practice a lot of questions regarding sliding window so the last topic the topic number five is BFS DFS and the concepts of node so you must know how nodes work how you can create objects how you can make classes with the help of that how you can create your own node how you can Traverse through noes means like how concept of trees work like how you can move to the left or right how to access the values of the nodes how to store the values in the node how you can create your own trees how to Traverse on the nodes with the help of BFS with the help of DFS these traversals are super helpful while working on the problems of graph so I'm not telling you to learn graphs particularly or trees particularly because that might take a lot of time of yours because these are really important topics and these are huge topics and they require a lot of practice so instead of going deep down into that you can just practice regarding BFS DFS and note Concepts so that will give you a easy and a better idea regarding how these things work and if you have enough time then you can directly Deep dive into that but if you have a lesser time then you can stick to these five topics and these topics will be really helpful for you regarding any interview and I'm not saying that you will be cracking any interview there with the help of these topics but most of the interviews that require decent knowledge means moderate level of knowledge of DSF and you can cck most of the interviews regarding that with the help of these five topics only so but the condition is you need to solve at least 300 to 400 good quality of problems and inclining more towards the harder level not like you are solving 200 easy problems so not like that you need to work hard you need to work on your practice you need to work on your number of problems you have to give contexts you have to research about what kind of questions the company ask and most of the companies focuses on these areas like binary SE sliding window heaps so most of the topics like that BFS DFS so you can just stick to that and the fifth the sixth and the mous topic that I was talking about for DP so if you are lefting if you are left with some time then you can definitely dive into dynamic programming and recursion so these are really important topics but if you have a lesser time then I would suggest you to not deep dive into them so that was a quick video from my side to tell you about five important topics that you can prepare without investing much time of yours and these are super useful topics and if you invest a decent quality of time in that you can crack a decent interview so that was it from my side for you today and I hope you liked this video if yes then please don't forget to drop a like and you can follow me on socials and I will be catching in the next video till then goodbye