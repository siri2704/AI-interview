yeah so good morning everyone in the last videos we started a new course on data structures and algorithms with python okay so DSA with python okay so batch actually it is a batch uh five sir batch five fifth batch so the timings of this session is as of now it is from 8:00 a.m. to 9:00 a.m. maybe I will change these timings okay and please make sure that you have to attend you you have to be ready to attend the classes at weekend also so why because so there are some topics are there which we need to continue at a stretch by taking two and a half hours 3 hours like that so I told I while explaining the syllabus itself I have given what are those topics okay that's why please be ready on weekend but not every weekend alternatively like that we will take okay but I will give the uh confirmation 2 to 3 days before the duration of the class is the duration of this batch is 45 classes exactly we are going to take 45 plus or minus one or two will be there okay and fees for this batch is 1,500 and where you are going to get live classes okay so we will share a permanent link for you people so the coming Monday onwards we are going to share a permanent link for you so using that link you have to join okay that is nothing but live classes so in addition to that if anyone is unable to attend the live classes no problem you can get Rec you can registered for this course and whenever you have a time you can attend a live classes remaining things you can watch the videos suppose if today session got completed maximum Within two or 3 hours we will upload that video into the Google Drive okay so you can able to watch it then running notes also will be shared okay so running notes in the sense whatever I'm typing the text file so we are going to share and the people who are willing to continue you can contact this mobile number this is nothing but what we have and uh sir prerequisite prerequisite for this course is nothing but compulsory you should have okay compulsory you should have knowledge in Python okay because based on this python only we are going to run the total programs implementation for example if you take stack data structure I will explain what is mean by Stack data structure but internally so the implementation of each and everything we are going to cover with the help of Stack data structure only okay next and after that next the syllabus what we are going to cover for this in the yesterday video I explained like introduction to data structures analysis analysis of algorithms okay complexity calculation some sample algorithm and implementations python is having inbuilt data structures like string list tle set dictionary like this okay next array module next list programs so string handling programs bit manipulations recursion and applications so sorting algorithms searching algorithms divide and conquer algorithms backtracking so dynamic programming so greedy algorithms linked list so stacked data structure Q data structure hash table okay next and after that tree data structure priority Q graph data structure so these are nothing but what we have okay so next and after that yesterday we have seen one simple Python program how to print so hello world message on the screen okay okay like how to print a simple hello world message on the screen we discussed very clearly in the last class next and after that how to check whether the given number is even number or odd number also I explained very clearly in the last session but in the last class just we used s scripting approach just we used scripting approach to check whether the given number is even number or odd number but this is not my requirement as of now now so I want to implement functional programming to check whether the given number is even number or odd number how to do that I'm defining the first function which is going to take a number n and I will check is that n value is divisible with two so if n is divisible with two then what is the meaning sir it is nothing but even number right then simply I'm going to return a string saying even like this so otherwise so directly I'm taking OD here we are not required to write else because if this condition is satisfied then it will return return return means it will come out from this if block so it won't stay in that that's why this line won't execute suppose if this condition is not satisfied third line won't execute the control will come to the fourth L okay so we have two written statements are there in this function one what is the first return statement even what is a second return statement odd So based on the condition either first one or second one will be executed this is nothing but what we have so now I want to write a small Loop for each I value in the range of you know very well 0 to 11 if I take how many times for Loop is going to execute 10 times 0 to up to 10 means it is going to execute 11 times so what will be the values the first time value is zero second time value is one and so on it will take up to 10 now I'm going to print the number so comma I'm calling function of that I so it will print every number followed by a space and whether it is even or not that's all now I want to run this program let us run this code and see what will happen so py space test.py I'm giving you can see Zero is it even number yes one is it even number no it is odd number like that we are getting sir immediately we are printing with one space that's why so rate ability wise it is not good can I give more space yes in Python we have SCP attribute is there so in the place of SCP attribute I'm taking slash T slash t means what tab space at the time of printing it is going to give one big tab space so that you can able to understand so this is nothing but what we have so now I want to implement the same even number or odd number program by using another another approach I will explain that approach but before moving to that sir please confirm is this function one how I implemented is it clear for everyone yes sir it's [Music] clear right everyone please confirm clear yes sir yes sir yeah yes so next next and after that sir I want to implement this program by using bitwise operators sir do you know we have number zero is there try to convert this number zero into okay try to convert this number zero into binary if you convert this number into binary what will happen we are going to get four zeros so now I want to take the next number convert it into binary 0 0 1 so if you take the number two so 0 0 1 0 if you take the number three we are going to get 0 0 1 1 if you take the number four we are going to get 0 1 0 0 if you take the number five sir 0 1 0 1 like this we are going to get this is nothing but just by binary equivalent for the numbers sir by seeing this binary numbers okay so I represented in four bits right try to think carefully and tell me so when we can say a number is even number and when we can say a number is odd number by seeing that four bits can you please imagine and analyze what will happen yes are you getting any log iic behind this by seeing the binary number so how you can say is it even or odd ending with zero is odd even very good very good so if you take yeah last digit good so if you take any number sir if the number is ending with zero we can say that number is nothing but what even number so if it is not ending with zero definitely if it is ending with one we can say that number is nothing but what odd number okay this is nothing but what we have okay sir do you know so here this is called as Sir is it most significant bit or least significant bit please confirm most significant okay the the left most is a yeah more significant bit right one is a least significant so this is is nothing but most significant bit but we are talking about least significant bit right so if LSB is zero okay then it is even number then it is even number from this I'm going to write one small U what you can call one small expression what is that expression is so if the number is y I will perform UND operation with one un operation with one if result is zero then it is even even so else it is OD sir why I'm doing under operation only with one so I will I will take one one diagram so that you will get clarity sir one means what in binary how we are representing this so 0 0 0 1 right so it is having least significant bit as one remaining all the bits as zero because we need to concentrate only on LSB right that's why I'm taking this one now take the first number sir 0 0 0 0 the because the number is zero okay so now what will happen we are going to get zero right yes so it is a even number now if you take sir something like three so 0 0 1 1 we are performing under operation with 0 0 0 one so anyway these three will become zero because we are doing with zero only last one one one we will get one since we are getting one it is not even have you observed we are not required to do the activities for the remaining bits only one bit calculation is sufficient based on that we can decide whether the given number is even number or odd number sir when compared with the first function which we implemented so this function is going to take less time the reason for that is sir we are directly working with the bitwise operators you know the power of bitwise operators it is always increases okay it always increases the efficiency of the program that's why we are using this technique now so let us let us run this program first we will rewrite this now I'm going to Define one more function TF F and2 which is taking a number n sir I will do n and operation with one if result is equal to zero then what is the meaning sir it is nothing but even number otherwise it is nothing but odd number that's all so now I want to run this program and I need to check so let us run this program I will give function two with the input as I now let us run this code and check what will happen sir are you seeing for the first number both functions are wring even as the result for second number both functions are rning the result as odd okay like that if you take any number sir both functions are going to return same result I think you people got very clear idea sir how you can able to work with this please confirm everyone is the concept behind this is it clear for you people sir sir yes sir yes a concept clear can you show the program once again sure so here I mean which one is a bitwise operator sir uh and operator sir this one is bitwise operator but don't worry the people who are unable to understand just you can ignore because it is a demo session okay just I'm trying to project so how we are going to take the classes all these things so in our regular syllabus there is one chapter is there called bit manipulations there again I will explain how you can able to convert decimal to Binary binary to decimal what are the bitwise operators are available indepth explanation will be there and I will cover some five applications also in that this application is also included don't worry I will demonstrate there okay just try to understand at the top level clear yeah clear sir now uh so example the bit n n and one so the when we use and Operator by default it converts n into binary is it internally it will convert yes convert okay sir okay okay so we know need to convert using some other function or something no no but uh how it is working in the background we have to see right that is the reason why I have drawn with binary representation sure yeah sure so if we want to find out how much time it took to run each program can we do that as as well no sir no sir just we don't have any tools for that compulsory we have to use some online compilers those things how much time it is going to take but uh every algorithm how much time it is going to take we can calculate in in this particular algorithm both are going to take the time same time complexity okay so because same if conditions are there so same number of instructions are there everything is the same but the point that you need to identify is so when you are working with the percentage operator so what percentage is going to do it is calculating the remainders so internally that numbers will be converted into binary and then this percentage operator also will be evaluated in the form of binary and then it will return the result but the UND operator no need to convert it into binary automatically because this is a binary operator so one level conversion is not required the execution type okay based on the time telling and remember in all applications not only in my class in general if you take any application we can measure the complexity based on the theoretical rules not based on the execution time like that so if you analyze based on theoretical part then we can able to expect how much time it is going to take okay okay sir yeah so if possible I will try to take one example in the upcoming classes so with how much time it is going to take to execute so there is one time module is there in that we can capture the time if possible I will try to explain because so that you can able to see okay okay sir clear can I go for next application yes uh hi sir yes uh actually I join late sir can you please say the content which you're trying [Music] to was Sir you can watch the video sir there complete information will be there this video we will upload in the YouTube within few minutes okay sure thank you right so this is nothing but sir what we have second example okay in two ways we calculated so uh to check whether the given number is even number or odd number this is nothing but what we have right sir next one okay next one what is the next application is so I will take one more program here so example number three example number three I need to check okay I need to check whether the given uh I need to uh find out okay Implement a program so to find factorial to find factorial of the given number okay I need to implement a program which will find factorial of the given number let us see how to calculate factorial of the given number for this also I'm trying to implement some multiple methods sir okay so I will rewrite this program for I in the range of six I will take a factorial only for six numbers so do you know in the function one I'm going to take directly I'm going to take directly so written mathod do factorial of okay so math do factorial math do factorial of I'm going to take n so we are going to give a number and we are trying to find out so factorial for the N let us see what will happen sir import math there is one special module is there with the name math I'm importing that math module into my program in that math module already they defined one function called factorial we can find factorial of the given number simply like this so what is the second approach is manually we can calculate I am assuming initially factorial is equal to 1 I will take a loop which is going to run starting from 1 to n + 1 every time I'm trying to calculate a factorial is equal to factorial into I at last I will return that factorial sir you know very well the logic of factorial factorial means what if you take any number consecutively you have to multiply those numbers for examp example if number is a five so first 5 into 4 into 3 into 2 into 1 up to one you have to take this is nothing but what we have sir now I want to execute this let us see what will happen sir now if you take any number for example consider I'm taking n is equal to 4 okay so initially what is a factorial value I don't have most F today okay just please try to adjust so n is f is equal to 1 sir what will be the value of I the I values will be from 1 to n + 1 that means 1 so 1 + 1 2 so 2 + 1 3 3 + 1 4 up to four you will get sir what is the formula sir f is equal to F into I sir when it is executing first time what is the value of I one sir so what is the value of f 1 1 into 1 so one will be updated here next when you are executing second time sir what is the factorial one so what is the I value two 1 into two will become what sir so two okay so when you are executing when you are executing next time okay what will happen sir 2 into 3 will become six next time sir 6 into 4 which will become 24 sir 5 factorial is 24 or not yes like that we can use looping concept for this so now I'm executing this program let us see what will happen is it giving the correct results yes sir have you observed we got a list of numbers from 0 to 5 for every number it is calculating factorial the first uh second column is nothing but calculation of factorial by using the predefined method called factorial and the third column sir by we implemented by using recursion we Implement Sorry by implemented uh we implemented this concept by using Loops so this is nothing but how to implement of course there is one more method is there I will demonstrate now but as of now do you have any doubts up to this whatever we covered please confirm no sir we good sir we understood right so I will try to demonstrate this program by using okay uh recursion I'm trying to implement this program by using recursion you will see how it is going to work for the recursion sir the when we use sir you use the factorial function right under math so how do we know how the particular factorial function Works whether it works in the same way how we have written or some other different yes in the in the same way how we have written in the same way it is going to work but it is it is redeemed available that is the difference so if it is a predefined function then compulsory someone has to provide the implement mation for that right so already they implemented just it is providing with the help of Library we are using we are utilizing that Library nothing that okay sir one question is there as you said it is available in library so that library is available in Ram or it will hit the hard disk uh just ask no sir no no sir whenever you are installing the python uh software so it will be available in the library files so it's in hard disk only or yes hard disk only hard disk only okay so in that case we can say that when it is hitting the hard disk the performance will be slow oh definitely definitely but repeatedly if you're doing this operation this is the best right so yesterday I purchased one Shir okay so just I went to Tyler shop and I have given the measurements and we have got that so when we have one or two we can go through with that approach suppose if I want to purchase 100 100 shirts like that then it is a very difficult task better to go for reded shop and purchase so you can see the difference when the volume is increasing so instead of every time calculating these things we'll decrease the performance right so in such a cases we can call the function redeemed got it got it that is the reason why we have predefined functions so function means what if you are doing any task repeatedly better to uh better to go with a function so every time instead of calling instead of creating you can able to create only one time and you can execute whenever you requir okay okay sir right sir so now I'm going to explain the third approach what we have here so what is the third approach here is listen carefully so I'm going to take one more function here DF function 3 it is taking a number n so if that number is equal to zero anyone can you tell me what is the zero factorial sir what is a zero factorial one one sir yes if n is equal to Z it is rning one it is it is rning one means what so when you are passing the number as zero the factorial for that number is nothing but one like this I'm passing sir I'm not passing one then what will happen I'm going to return n into again I'm going to call the same function with n minus one this process is called as something like recursion but don't worry in our classes we we have in detail explanation is there for the recursion we have a recursion chapter is there there I will discuss now consider I'm going to explain for example if the value of n is equal to 5 so what is the five factorial sir anyone can you please tell me 5 into 4 into 3 into 2 into 1 yes what is the result I think it is 120 right so first time it is going to call the function by passing your input as a fiser first time the flow of explanation I mean the flow of execution I'm explaining please have a look once in the demo classes these are the things that you need to observe because in future also like this I'm going to explain whether you can able to understand or not forget about the subject all these things okay so next the flow of control is going to come here is a number is equal to zero no sir then what will happen sir it is evaluating a formula n into n value is a five so 5 into so function 3 again I'm calling the same function by passing n minus 1 5 - 1 means what 4 so now again for factorial of four what will happen so 4 into so factorial of 4 - 1 3 so again factorial of 3 so 3 into so factorial of 3 - 1 2 so for 2 means so 2 into again factorial of 2 - 1 1 so 1 into again factorial of 1 - 1 means Z like this it is going to keep on calling internally so first time we have five so 5 into F of 4 4 into F of 3 3 into F of 2 2 into F of 1 1 into F of Z like this we are going to get now at last since number is equal to Z whenever result is equal to Z it is not calling the function again it is simply rning the value one okay that means if you call F of Z it is going to return which value sir one so 1 into 1 will become one 1 into 2 will become 2 so two will be returned here 2 2 into 3 6 that 6 will be written here so 6 into 4 24 will be written here so 24 into 5 who called this five for them it is going to return 120 so like this we can calculate factorial of the given number by using recursion so this is the way how recursion is going to work recursion means what a function which is called by itself is called as recursion there will be a termination process for the recursion okay so everyone feeling comfortable with this program so here we have called Fun three uh within this fun so basically we are calling a function within a function yes okay that is called as recur recursion yeah okay everyone clear up to this yes sir yes sir right right so the next thing here is let me execute this code let me execute this code we created uh we called uh Function One function two let me call function three also by passing I now I want to execute this code you can see in all these three cases we are getting the same results right this is the way how to calculate factorial of the given number okay right everyone please confirm is the concept is clear yes sir it's clear yeah yes any doubt up to this right no sir sir uh I'm going to explain one small concept like there is uh one backtracking recursion is there right in the recursion we can use something like a backtracking principle okay so backtracking means for example assume you are going to search for something okay so when you are keep on moving to search the data in one path if you are not getting the data so what we are going to do is we will come back and we will select some other path okay and you will search for your result in the second path if you are not getting in the second path you will come back and you will search for the third path do you know if a building is there with five floors in each and every floor 10 rooms are there sir I kept so one one treasury so or treasure in a room I will ask you to search for that treasure what you are going to do sir you will start with first room you will go inside that room you will search for the data if it is available then you are the winner if it is is not available you will come back and you will go to the second room sir do you know entering into the second room is also must be required and coming out from that second room is also required so do you know this kind of steps are called as backtracking for that we have some applications are there like Yen Queen's problem and then Sudoko problem is there we are going to implement this in life but today I will explain what is this yin's problem just with the help of diagram okay sir what is this y Queen's problem in the sense do you know we are going to have n by N Chess board is there for your understanding purpose generally chess board means 8 rows eight columns will be there but it is very difficult for you to understand that's why just I'm taking a 4 by4 chessboard that means four rows are there and then four columns are there like this I'm taking 4x4 chessboard is there now listen carefully what is your task is so since it is a 4x4 chessboard we have Four Queens are there with you okay you need to place these Four Queens in each and every row such that you have to take only one Queen in a row that means in the first row total how many rooms are there four rooms are there you have to place your queen inside only one row so next Queen should be placed in the second row next Queen should be placed inside the third row next Queen should be placed inside the fourth row like that you have to keep on placing the Queens such that there should not be any Collision such that there should not be any Collision means what sir I'm taking a queen when Collision will occur sir if you see the chess board so there will King is there what is the property of the king he can able to take only one step at a time the people who know very well about uh chess chess they can understand of course don't worry uh when topic came I will explain in detail and uh some people may use the another word called Minister will be there sir he can move in any direction do you know this minister in our terminology it is called as what queen sir I placed a queen here so the possible movement of this queen is it can move in this direction it can move in this direction okay it can move diagonally also since we don't have any elements in the top if you have it can move in this direction also so now can I take a second Queen here no because Collision will happen can I take here no Collision will happen can I take here yes because no Collision is going to be happen sir are are you understanding how to place the queens please confirm yes sir yes sir yeah yes sir now I want to take third Queen we can't take here because Collision will happen sir can I take here no because collision with this queen so here we can't take here we can't take that means there is no possibility to place the third Queen in the row got it so now what we are doing is what is the latest inserted pen in the second row in third position you have placed right that is the reason why we got the problem now try to place in fourth position sir can I take here no Collision will happen so can I take here now yes yes no problem like that we have to do sir here previously we placed a queen here we didn't get the solution that that's why we changed here this step is called as backtracking now I'm trying to take fourth Queen is it possible to take here no Collision will happen so we can't take here also Collision will happen here also we can't take Collision will happen so here also we can't take Collision will happen so there is no place for the fourth Queen in the fourth row so what is the alternative third Queen can I shift here no Collision will happen so here also we can't that means there is no place for third Queen and fourth Queen even there is no next alternative for second Queen also so that means backtracking level by level we are coming to the beginning so first queen itself whatever you have placed is wrong try to take this queen in the second place sir uh something is wrong here one second okay no issues just it is not coming properly uh just ignore this queen I will Mark in the red color so this is not the correct place we have to take here sir now can I take here no here no here no these three places are wrong sir can I take here yes so here yes sir yes we don't have any Collision here we can't take here we can't take here yes sir this is nothing but one solution what we have this is the first solution so like this one more possibility is also there so like we are placing the queen here right so uh what is another way here we can't take okay that is not the correct solution then here we can't take then here we can't take here we can't take if you take in the Third location here we can take so here we can't here we can't here we can't but here we can take so here we can't take here we can take so so the thing which are there in red color is nothing but Solution One the things which are there in the green color is nothing but a solution two so for 4x4 chessboard we have only two solutions if you take 5x five so then you are going to get a sir 10 10 Solutions you are going to get like this we have to solve but for this which approach we are using backtracking anyway I will show you how to work with backtracking in the upcoming classes sir everyone feeling comfortable up to this [Music] yes please confirm everyone clear up to this so backtracking is useful in uh tree structures right sir yes everywhere we will use backtracking in the data structure the total data structures is going to run only with the help of recursion okay okay that recursion is nothing but the backtracking okay sir clear up to this clear up to this yeah yes sir yes if possible tomorrow I will show you program for this because in the previous batch somewhere I implemented that I will show you okay s sir so in this case 4x4 we can place maximum of four twins yes if you take 5 by five how many queens you have to place five Queens that's why it is called as y Queens problem y Queens okay okay okay right so with this I'm going to stop today's session tomorrow we will continue