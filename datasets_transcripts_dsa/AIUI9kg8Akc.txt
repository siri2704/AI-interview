good evening to all I'm gar Pand your Mentor your friend and today we'll understand another question in our series AR as frequency counter and that problem statement has already of in multiple companies but before we begin do let me know I'm Audible and visible to all and how's the energy I'm waiting for the answers then we'll continue I'll just see the responses do let me know I'm Audible and visible to all baiting for for the responses how's the energy how's the energy do you feel a confidence that you can crack a interview of 30 LBA tell me waiting for the response then then we'll continue we have amazing problem statement today and any I'll write the code in three languages as already mentioned on top that will write code in Java C++ and python right and this part very good evening Prince do let me know am I completely Audible and visual we already has completed math series ARR and the array with two pointers and now we are running with this AR frequency counter okay cool yeah cool so now let's begin with the problem statement and before moving on the problem I'll tell you why this particular problem is important first thing is that anyhow to understand any particular pattern in DSA youly need a lot of practice and that's why on the same topic AR frequency counter I'm coming up with multiple questions right so now today we'll discuss find all numbers disappeared in Array which is almost similar as yesterday's question almost similar as but this problem has been asked in Adobe Apple Bloomberg Google Microsoft and Y multiple times so this problem makes a significant role in itself so we'll understand we'll go to the lead code and directly we'll see the what are the problem stud how we can attempt it okay so the important thing I want from you and that you should have an understanding how you can recognize this problem can be solved using AR 2. or not so the important thing we read the problem St then tell me are you able to recognize the problem statement because now at this point of time you must understand if the particular problem can be solved using this particular Tech this technique or not okay so given an ARR nums of an integers where nums I is in the range of 1 comma n now tell me did you get the point when you have the element always in one to and range always you apply a frequency if a problem is about frequency and that can be solved about you know using any terminology of the frequency so now they're telling like you will have element between the range of 1 to n return an array of all integers in the range 1 to n that do not appear in the nums so yesterday what we did is that those had the frequency two we were returning them duplicates all duplicates that we solved yesterday right today today we want to figure out the element which are not available in this array from a range 1 to n now tell me how you can solve if you count the frequency of all the element if you count the frequency of all the element and what happens is if you count the frequency for example you had one AR a r r and here in this array in this array you had few values one to n okay and the length let's say you have eight or seven Something I'm assuming the length means the N you have seven so you had value here 1 comma 3A 2 comma 4 comma 4 comma 5 comma 6 comma 7 so what I want I want you the Miss find the missing element find I just want to find you the missing element okay seven probably I cannot have if length I have seven so these are the eight so this I cannot have okay in this particular range in this particular range I want you to know that which element is missing okay which element is missing so you will say like you will say like what is missing the seven is missing right the seven is missing why the seven has a frequency at zero seven has a frequency as zero right when you have frequency at zero when you have frequency at Z we can say that is missing when the frequency is zero we can say that is missing so now if you'll use the HMA for frequency that will take the extra memory right so the best way the best way is that we can use an frequency array right of length n + one we have discussed that approach in question number one question number two and also question number three right so we can have one frequency array the size will be n + one if you want to check till seven you need eight length why because only then seven can be utilized as index yes or no right so you need this you need this what you need this uh the array that will have the size as eight so 3 4 5 6 7 now look at last index you have a seven why because the value of arror you'll use as an index of the frequency are right yes or no correct so now let's count the frequency one has arrived one time two has arrived one time three has arrived one time four has arrived two times look at this you think plus plus you remember from the last two questions we have already solved but any of you haven't watched both the videos please watch them first only then this video for you and then fifth one then sixth one then what is missing this seven is again at zero right because all the value in at zero automatically so we will not count this why because value are starting from 1 to n so you'll check in this range any index is there any index where the index value is zero any index is there where the value is zero yes the seven is here who has value at zero so which me seven was missing so this is a simple logic probably I hope the logic is clear to all now we'll go to the code part and we'll write try to write the code in all three languages okay any of you need any specific language comment probably I'll pick up that okay so let's let's create one array here uh in will create a frequency same as yesterday same as yesterday nothing new right I just want you that you must have an understanding you must have confidence that now you know the concept so length + one right you have create a frequency there you will store the frequencies remember in yesterday also we have discussed the same thing then what we'll do for return actually the return type is a list type means an array list in Java so right now we writing code in Java so we'll Define an array list to store the result that will hold the integer value right that will hold the integer value and let's say I'll give the name result as same as yesterday and then new array list and tell me this clear to all the concept is clear to all or not but I want energy I want energy energy smile and to create uh you know to crack the good packages right only then there's a meaning of you know coming on consistency regularly so now here we'll have value I'll use a for each Loop to access the value of the nums array that you already understand from the last video right in the first video we have understand like what how did the concept of a frequency counter so here we'll implement the same thing okay Prince so now here now what we'll do this frequency array we have then value then value this is how we'll count the frequency of each element because this value is coming from the nums array and we are utilizing that value as an index of the frequency array so on that part index if we get the value we will do plus plus so the number of value will store in the frequency will be the frequency of the elements and nums right and once you have counted the frequency you'll iate your whole array list the the frequency right to enter your output into the this particular array list so what we'll do we'll write in IAL to z i is less than less than what um frequency do length yes or no frequency L because there you have store the frequencies i++ again if I ask you if in frequency on particular index you see the value is zero can we say can we say that was missing because if that is not missing that must have a frequency in a particular frequency are right but if something is missing only then they will have frequency at zero but you will start from one not from zero why because you have value from one to n not 0 to n okay so then if this is missing then in result you'll add you'll add what you'll add I so this is what your code is and I don't think so it it's difficult to understand after two videos that you already watched after the previous two videos it won't be difficult that I strongly believe but if you have confusion please write in the comment I'll do a dry as well for like more and clear understanding but write a comment okay write a comment if you understood I don't understand the loop part probably our C are coming for the first time but don't worry I'll do a dry run again here in this video as well after this particular thing you'll understand it completely okay so you don't have to worry about okay but if you need dry then write dry only then I'll do okay because how this is working I'll tell you any I've already covered in previous two lives that's why I'm assuming that this part concept is clear to the to everyone so now now what I'll do I I'll run this code and I'll submit this then we'll write in CPP then in Python then we'll do ryun okay and in which language you want dry run just Ty in comment in which language you want dry run okay in which language you want dry run so this is working fine taking 4 millisecond anyhow this will be vary from system to system but it's a very nice code and you have written in linear time complexity because you're using single Loop only you're using single Loop only yes or no right then then what I'll do I'll write the same code in C+ because both have almost same syntax so now we'll go to the C++ and here we'll write that same code I'll paste it here and now you don't have array list in C+ you have vectors so you have to use vectors here so first Vector I'll store for the frequency okay Java okay we'll do in Java okay vector and here let's say the name was frequency and the size we want is the nums do size + one right that should be the size and all the values will automatically initialize to zero in frequency array and then and then I want one vector to store the result Vector that will store the integer value and that name is result resting is similar same Syntax for C++ for for each Loop but you don't have length method here you have size method in C++ and again you don't have add method you will have push back method pushor back I and that's it you're done with the code for C++ the same code and then at the end we'll do a Dy of it okay at the end we'll do the dry of it so it's working fine but you'll see this is little faster than Java Java is taking around 4 millisecond or three something but this will take look at this is 0 millisecond right but any of the system to system any of sometimes the me is more free so you get faster response but any of SE is faster than the Java for terms of DSA then we'll write in Python and python is very slow very slow not recommended for competive programming so now we'll again create two things because you don't have now vector and array list but what you have you have list here so I'll create a frequency list that will have value at zero and how many times the length + one so l l of nums and then plus one time right so this is this much time of you need the size of that very good evening samam samam in Python two people are in Java boting is still going on choose anyone still going on two in Java B in Python the number of who will win I'll do the TR in the same but anyway this won't be difficult but yesterday we did in Java today I guess python is more betterer we did in Java and those have seen that video they they know that right they know that so python may help but anyhow it's again up to the people how they cooperate okay so we don't have for each Loop in Python we'll do for in Loop so for um value in nums colum you don't have Plus+ and python you will have plus equal to one and then we'll remove this again you don't have this normal for Loop you will have for in Loop so for uh I in range and we want to start from one to the length of that particular frequency list right so L frequency frequency okay and then colon and again you don't have this C you will use colon you don't have this add method you have append okay so append I and you'll remove this CIS and then this one as well yeah I'm still waiting which language you python or Java we get two resp of java B for python dry and we can understand in any language okay so now means has one more support because yesterday we did in Java d right so today any of the same question we are doing this language has been changed right so maybe this will help to the other people who are coming from the python background uh oh no what happened you don't oh we haven't defined the result is it so we'll Define don't worry okay so now now we have this result as well right we'll submit it now we'll submit now uh it's working fine we'll submit it okay but I want look at it's taking 23 millisecond and your python is very slow for DSA I will not recommend anyone who are really going to do competitive programming in DSA using python I'll prefer Java or C++ okay but anyway anyway let's do in Python today yesterday we did in Java and let's support everybody who are coming here and anyhow everybody will understand because D is always independent from the code okay so you don't have to bury about that uh you'll not understand you'll understand trust me you'll understand because any of these are agpg concept right and all of you are the Champs so this won't be very difficult so let's let's crack this question okay and I'll choose the color as white we'll have few spaces um now now we'll do this for understanding this code more better and I'll tell you to Dy in all the Lang you don't have to worry about okay I'm not being biased now cool so we'll do a slight so now from here itself so now let's understand how this is working so for that I'll take the one input case from here so we have 4 3 2 7 8 uh I'll take my tab and here we'll write that input value what you have in nums you have 4 3 27 8 I guess 4 3 278 2 3 1 right 23 1 so if you'll check the length of it the length is what 4 48 so the length is8 means the value of n is 8 so you will have the value 1 to8 on that is the case but there is a b value or there is a multiple value which are missing like which are missing so how you can identify you'll count the frequency of each element those will have the frequency at zero you'll say that they are missing they are missing right so let's see let's see what we were doing in Java we were creating one frequency array and here we are creating in Python and one frequency list means we're creating an eight size not eight size nine size we can always and plus one only then you can use utilize this eight as an index eight as an index so you create one array list or one list or one array or vector anything so the size should be nine 0 1 2 3 4 five 6 7 8 so now the size is nine right you'll count the frequency of each element by defa everything is zero so four for four you will to come here okay in this loop back B in nums and for each we were writing like for B colon nums right so you will have that B from where from this nums array from this nums array so this value is coming now four mean what you're doing in frequency on four index are doing plus one plus plus means also plus one and plus Oneal to means also + one okay so now what we're doing we doing plus one on where on the fourth index and frequency list are your vector so now this is fourth index you plus one so this comes one prly it was Zero now this come one again the another value will get three in value on third index you'll do plus one again another value on second index you'll get from here itself right on second plus one again you get seven on seven index you'll do plus one again you get eight on eight index you'll do plus one again you get two on second index you'll do plus one means now this becomes two why previously the value was one you have increased the value by one again so you have now two again the another value is three on third index 2 + 1 means it becomes two this becomes two it was one again B from here itself from this Loop only okay so now the BN you received and you will do plus one so now they are automatically zero because you have initialized by zero Only You initialized by zero only in Java also automatically that ARR will be initialized in zero okay so now this is what you have as of now in frequency now tell me you iate this frequency array and on the index where the value zero are they missing tell me if you Ed this frequency list array or vector anything and if you get on C on particular index value at zero can we say those were missing in this particular nums those were missing in this particular nums yes or no yes they were missing they were missing so what we'll do we'll add these values in a result in a result AR list in a result list or in Vector anything depends on the language right so right here what we doing we iterating our frequency starting from one index not zero why because value are from 1 to n not from 0 to n so we will not consider this right so B to n one to n cool now you're checking like if a particular index having the value of zero we will add that value into this result we adding that value into the result make sense yes or no make sense so we adding that value into result and at the end what will happen when you added this you'll check the value for one is it zero no this is not zero for two no this is not zero for third index no this is not zero for fourth index is it zero no this is not zero for fifth index is this zero no this is not zero like for fifth Index this is zero on Fifth index you'll get value at zero so you'll add that particular value in result so this result become five now again for six index you again receive zero so you again insert for seven you you don't have zero again for eight you don't have zero now the whole frequency array list or vector has been iterated and now you have this result you're returning this result at the end you're returning this result at the end correct simple okay son so simple diple good Ry okay Prince so I hope yeah I hope now the problem statement now the solution it's clear to all yeah what I want is that I want one thing is a self believe yeah trust me on one thing that if you'll do a self believe here a self believe so what will happen eventually you will have very good understanding of DS and problem solving that eventually will you know lead you to cracking the more than 10 LPA 20 to 30 LPA if you're already working you're going to have very bigger numbers but what all it takes to get these jobs the consistency and consistency will come here because I come regularly right I come on Saturday and Sunday at what time at 6:15 on Monday and Tuesday I come at 5:00 p.m. right 5:00 p.m. and rest day I'm only leave means I will not come on live directly but I will have few videos over YouTube so these four days I'm coming for the lead code right as of now this four days but once we'll see a lot of bigger audience maybe we'll do the whole week right so uh sir what is the most efficient way of taking input in Python you can use that input method directly you can use that input method okay and from scratch for understanding from scratch I'll suggest that if you're talking about for DSA you can watch our live from video number one till here trust me so please talk to technical to send okay PP also okay I I'll talk today I'll talk today possible just send otherwise anyhow you know if you receive every digital not make my Myself by yourself so what I'll suggest that watch the video make your own note trust me that will stay in your memory for longer trust me that is most efficient way to learn anything if you'll create the pp you'll create the not notes by yourself after watching this particular live trust me that will stay in your brain for very longer time for very longer time okay but still I'll talk to that team to Ser you that P okay okay then bye-bye to all I hope you enjoyed this particular live if you really enjoyed then like the particular video And subscribe the channel if you're coming for the very first time and what I want is that I share this particular live with multiple people who are really struggling with Ds and problem solving okay bye-bye to all see you tomorrow