e hello okay guys uh we are live let me just check if I am audible then we can continue okay guys uh we are live let me just yep so I have checked everything is fine but if you face any issue throughout the live session feel free to comment in the live chat okay so uh just wait a minute let me just check everything all right hi Prat hi Anish hi Pratap good afternoon all right so let's begin so hey everyone I'm Hershel Jen your Mentor at Geeks for geeks and guys in this video we are going to discuss a very awesome road map which I followed to learn DSA in around 3 months that is 90 days okay and uh by 90 days uh you can actually also uh connect one more thing that is right now Geeks for geeks is uh having a challenge of 90 days you might have heard about it but for those who haven't heard about it so basically what is 90 days challenge in Geeks for Geeks so Geeks for geeks has bought this Challenge and let me just first of all uh load our website for this so uh this is the Geeks for geeks website and here you can see we basically have 390 challenge okay so 390 challenge is basically the challenge where you can get 90% off the discount like 90% of the refund if you have purchased any course now and you finish that course 90% of the course within the next 90 days then you would actually get 90% of your paid amount as a refund okay so this is a very awesome opportunity which you can actually use to learn from us and to actually use these courses for some productive thing and to actually get motivated okay so I'll get myy money back let me just finish this okay because uh personally I have been that guy who has purchased many courses wasted a lot of money the courses might be great or not great different courses different companies different websites obviously so they some of them are really great some of them are not but it's like whenever I purchase these courses I am like okay so I have infinite amount of time I'll I'll do it next month or maybe next month next day so with with that I wasted a lot of money and I never got a refund so this is a very good good opportunity like if you finish any courses uh definitely I would always suggest before purchasing any course please search about things like uh you can just suppose if you want to learn the2 development course so uh you can just check out check out their reviews course description just think a lot about it then I would say purchase any course okay because uh some people are uh like not financially that great so please do a lot of research just read everything you can see everything is mentioned here right just check out all the reviews which are mentioned here and then decide which course you need to purchase okay so yeah this was a short uh overview of 390 Challenge and our today's main goal is to tell you the road map of DSA in 90 days good afternoon twist Hub right so guys if you have any doubts throughout either in DSA or development web development or app development or general life problems you can actually mention in the live chat okay it would be a very fun conversation between me and you guys okay so let me first of all tell you what's the main agenda of today's video we are going to talk about DSA okay and specifically I would use C++ as a reference because I have learned C++ and then after that I learned DSA right 3 4 years ago so uh I would use C+ plus as a reference but yeah you can learn DSA in Java python C or C++ like it's totally up to you whatever you feel comfortable some people might say oh python is too easy and companies don't accept it no it's not like that companies accept it even uh if you want to get placed in Google I have my contacts who are actually using python with DSA okay and then after that they did a lot of problems in Geeks for gigs or lead code or code Chef or other platform then later on they are right now in very good companies like Google and different different companies okay so yeah you can go with python also it's totally up to you whatever you feel comfortable if your college is teaching you C++ go with C++ okay that's fine but yeah I won't say don't do everything okay it would actually confuse a lot do what makes you comfortable okay okay you say okay my college is also teaching C++ I should learn C++ then I would learn DS fine that's fine okay so now what is DSA so DSA is data structures and algorithms so data structures are kind of inbuilt stuff which you would say like in C++ we have arrays then we have strings Etc we have graphs trees and so on right so these are basically different different data structures okay what are algorithms algorithms are piece of program like uh for example I want to print from 1 to 10 so would I writing print one print two print three print four print five print six no I would be writing a for Loop and then I would be printing all things automatically okay so this is a short program which I created right similarly to make bigger programs like uh you want to like make your own Google Maps Okay make your own Google Maps so you need optimized algorithms right so for that you're going to use graphs and different kind of uh data structures which you get okay to make these complex kind of applications right so for that we need good data structures as well as we need good programming skills that means good algorithms faster algorithms right you can write a program in 10 different ways but the most efficient way the most fastest way is preferred right so algorithms are like that algorithms are like there are infinite many algorithms but the best algorithms must be known okay so that's what you're going to learn in DSA and uh not only you would follow only these algorithms later on you can create your own algorithms by thinking a lot like people in higher positions who are really great in DSA actually create their own faster algorithms right faster way of doing something faster way of writing a program that's it okay so yeah this is basic of DSA okay that's what you're going to learn in DSA and this is totally used in big Industries okay again I'm going to repeat data structures and algorithms fundamental concepts in computer science that help in or organizing and processing data efficiently okay so data structures specifically are ways of organizing data so that it can be accessed and modified efficiently okay so some examples which I already mentioned were arrays link list use trees and graphs okay and similarly algorithms are step-by-step procedures or formulas for solving problems okay the way of writing your code okay often using the data structures along with them okay for example you have sorting algorithms quick sort M sort and sort searching algorithms like binary search linear search Etc okay so if I talk about linear search and binary search so binary search is more efficient it's like better in all cases in most cases actually uh in some cases linear might be better okay in smaller cases right so yeah you can actually Master DSA to U sharpen your brain okay not only this programming field but yeah it helps you make things okay like you can build different different things and uh like uh personally also if you want to make your brain very sharp so you must start DSA okay so that it builds your logical thinking okay not only writing code but it builds your logical thinking solving things faster thinking bigger and so on okay and yeah if you want to get placed in technical jobs then to definitely you need to learn DSA okay oop knowledge is important before learning DSA in Java uh like uh I am not sure specifically about Javas so I won't be able to answer that but yeah oops is used a lot okay so I would say please learn oops okay like I would say learn the complete Java okay before jumping to like if you want to uh like learn DSA I would say first of all learn a programming language completely okay so even if you are not using oops a lot okay with DSA you generally don't use it okay I personally haven't used it but since in some problems we might need to classify things or we need to build applications so oops knowledge is important okay so I would say first learn this complete programming language then shift okay and uh at least you must know the terms okay at least you must know the terms it's like I know the basics of C++ okay like you need uh two three weeks to actually go for the basics of C++ to just get your hands on and to solve lots of problems basic problems also you must have knowledge of oops just knowledge of oops okay you don't need to just know every piece of cod but you must have knowledge of oops later on if you have a DSA problem you you have a DSA concept like there are some problems questions which need knowledge of oops okay so there you can use it but generally it's not that much required okay sir when interview preparation self place will be available for live course okay I have to confirm that okay please uh leave this uh comment in the comment section also so that gfg team answers this one okay uh Dev Coda r r s hi Dev Coda rajes hi bro I a full stack developer I don't know Java or any like C++ I'm learning B in JavaScript my dream is to correct uh okay Rajesh I would suggest don't learn a DSA in JavaScript okay because it's like uh many things are incomplete in JavaScript if I talk about all the data structures you generally have arrays and you use arrays for everything but uh for faster results okay for uh like uh the obviously if you learn DSA in JavaScript it would become way more easier because I already did it uh when I was going for mon stack and when I had nothing to do with JavaScript like I was getting bought so I thought why not learn DSA here okay but yeah it would take maximum one week to learn the concepts because you can't do much in JavaScript okay uh so like BSA is generally for like Hardware based stuff okay Hardware based stuff but yeah I would say if you want to learn a programming language okay like for getting place in companies in Fang you can actually go for at least go for python so that you are in web development also right and um easily you can go with DSA also so python is a very good choice okay so python can be used in web development it's it's going to be very easy for you if you are a monack developer you are totally bed on JavaScript shifting to python would be Ram easy okay so yeah you can use Python for both purposes okay so I would say at least give a try for python okay but JavaScript would be uh not that much considered okay because you need to know these core languages okay right so now I guys I think this basic doubt is cleared now before learning DSA you must go with basics of some language okay so if I talk about myself I went with C++ okay so let me just uh tell you some Basics which I learned okay you can implement the same in other programming languages okay so uh let me just say basics of C++ okay so first of all you must learn these Basics like learning oops is your choice at least know the concepts okay you w you you won't use that a lot in DSA but at least know the concepts okay so yeah first of all let's talk about uh basic C++ so you need to actually know the syntax okay so let me just write here you need to know the syntax okay then you know then then you must know the uh what are variables constants what is integer type what is different data type by the way integer data type flow data type character data type and so on okay then uh again you must know all the data types at least so that you can recognize and also how much each data type is taking space four bytes or 8 bytes or one by Etc right so the knowledge must be really important so you must know about variables completely so let me just write data types also yeah data type right so you must know about this then you must know about if else statements uh you must know about for Loop you must know about while loop okay you must also know about do while loop okay and uh you must know about switch statement okay very important because in some cases this is really useful okay only in some cases but yeah you can also use ifs directly but switch is very useful in some cases so I would say don't skip it okay like when I was a beginner I skipped the switch statement I was like okay it's same as if as why should I learn it but in some cases it's very useful okay so do give it like do just learn it properly okay then you must know about functions completely about functions types of functions and at the end you can also learn about oops okay so these are all the basics of C++ which you must know okay now guys if I talk about jobs which you can get if you learn uh like DSA and if I talk about if you learn a programming language and then after that DSA like I learned C++ so you can actually get uh different jobs like you can become a software developer or engineer you can also become a data scientist or data analyst okay you can become a systems engineer or you can become a backend developer or you can become a competitive programmer and get huge prices or you can become a machine learning engineer because at the end machine learning uses a lot of el algorithms for faster thinking right or else you can become a game developer okay so by using C or C++ for creating different different games so uh you would get knowledge of Graphics physics and algorithms so for that you need a sharper brain and you must know DSA so that yeah the companies would say okay this guy thinks fast he can also use physics to uh make game logic okay so very good and uh you can actually become a very good uh developer or game developer or systems engineer Etc after learning DSA okay so yeah first of all we learned the basics of any programming language either C or C++ or python or Java okay I went with C++ okay I'm planning to learn DSA so I decided to start with this Python language or should I learn C++ you can definitely go with Python language there is no problem with that okay I have my contacts who are working in Google and who did C++ like initially for the first few days they did C++ like but they didn't like it okay so they shifted to python in their college days okay so for uh some time they learned python then they learned DSA in Python and right now uh they are actually hired by Google based on python like there is no problem in that okay they generally need your thinking skills okay they don't care about the language actually because when you enter the company they are going to teach you something like they're going to say okay till now you have used python but we use this language so go with this language okay so there is no problem right now either you can go with C++ Java or python whatever you feel comfortable at okay but when you enter the company they're going to be specific they would say okay till now you have used python but we don't need python we need this so go with this okay but before entering the company it's your choice okay go with any language you like all right so now guys uh I told you the basics now guys I'm going to share you something very important which is our road map okay which is our road map so let me just close it okay so first of all we are going to start with space and time complexity so uh space and time complexity is generally a topic uh which beginners are really confused for so my basic suggestion would be just know what is space and time complexity okay just know the definitions and just solve some basic easy problems watch some YouTube tutorials watch some courses okay where they solve some basic problems like how to find uh uh time complexity of uh single for Loop or un ested for Loop or multiple Loops or and so on okay so basic basic problems like you have already did in C++ just try to find their time complexity okay and uh with the help of time complexity suppose I have written program one I have written program two okay both of them are working on the same machine same computer that means my computer is one but my program one and program two out of which I want to decide which program will be faster okay so if I talk about some uh calculation I can't actually calculate because the difference is very bare minimum okay uh but if you actually no time complexity you can actually decide which program is faster program one or program two okay so with the help of time complexity you can decide that similarly space complexity would tell you which program is taking larger space okay so that's that's what you must know okay generally nowadays space complexity doesn't matter because uh like computers have TBS of memory okay so generally uh bytes of memory is not that much considered okay you won't be worried that much about it so space complexity is okay okay topic but time complexity is really important you must know which program would run faster okay so at least go with Basics okay basic programs basic for loops and so on which you know already in C++ I'm not saying go for uh further on okay but whatever knowledge you have till now I would say try find trying finding time complexity of that so just solve easy questions okay so time complexity measures the time of an algorithm which take which which an algorithm takes to complete as a function of the size or the input okay so space complexity measures the amount of memory an algorithm needs as a function of input size so I would say give it maximum two days I'm just talking about easy questions okay just solve easy questions okay can I get PDF of this session I would say uh yeah this session would be available after I end this video so just take screenshots okay I haven't generally taken uh it but uh later on if I would be able to make PDF I'll just share the Google Drive Link in the description okay so yes now let's continue so yeah you have given your two days two very important days as a beginner to learn C++ okay to learn space and time complexity I'm sorry you have learned C++ already basics of C++ uh if you talk about uh how much time you must give in learning basics of C++ I would say give at least two to three weeks okay or maybe a month to just get familiar with C++ if you are a total beginner because like as a beginner I didn't even know how to use a keyboard properly my fingers are not that much working properly they're not that fast so yeah you need around a 1 month to actually get a good typing speed get good knowledge of a programming language so at least go with that then after that once you're comfortable you feel confident okay then start with DSA okay don't rush up things okay so now I'm assuming that you already know a programming language from then yeah 90 days all right so yeah you can see two days for space and time complexity now after that the most important topic okay which everyone must give proper time is arrays okay so you're going to start with arrays okay arrays is a like concept which you would be seeing in any programming language so it's a collection of elements stored in continuous memory blocks okay each element can be accessed using it index okay so you can learn arrays properly right just giving a very short definition okay so yeah generally it takes 5 to 6 days to solve easy problems on arrays and also know the complete Concepts 1D array and 2D array at least okay so yeah you would be knowing this okay then you would be solving problems like how to reverse an array how to search something and so on okay and you would be learning about some algorithms also searching and sorting algorithms so overall you need 10 days okay overall you need 10 days and initially uh like when I was a beginner I fac a lot of problems like suppose you are learning uh sorting algorith there are lots of sorting algorithms right there are lots of sorting algorithms so you might be wondering how would I remember these things in 10 days so I would say you don't need to remember this okay you don't need to remember this what you need to know is out of these algorithms which one is the fastest okay at least remember the fastest algorithm okay like you would be having merch sord bubble sword quick sword and so on just know about all these okay check the programs write their programs okay write their algorithms how they sort okay watch the tutorials complete tutorials and out of all these I would say pick at least one which you feel very comfortable and you feel that yeah this is the fastest you can just search about it which one would be the fast fastest and you can just learn that algorithm very properly okay so that at least if there is an N question of sorting you at least know one algorithm which is fastest and you're going to write that pretty easy and if I talk about rest of the algorithms it's like with time you would do revisions okay with 6 months or 3 months you would do lots of revision you would revise again and again whatever algorithms you have learned and eventually you would be able to recognize them or remind yourself okay this algorithm did this so I would be able to write the program of that algorithm very easily okay so yeah with time with a revision you can easily achieve that but for first 10 days I would say just know have knowledge of every algorithm right that out of them pick good algorithms okay and then do good questions easy questions and medium questions okay try to do medium questions if you're not able to do medium questions that totally fine it's okay that's totally fine okay but at least be comfortable with easy level of array questions okay how to reverse an array how to search something how to sort something and things like that okay and go for competitive questions okay not just direct questions okay don't go for direct questions go for competitive question it's like given story and then you need to do this okay like that go for competitive questions okay so you would find competive questions generally in Geeks for geeks or you can go for lead code okay so yeah this is it now after that for the next 5 days okay you need to focus on link list okay so in link list we have different different concepts okay so link list is a linear data structure where we have elements that is nodes which are connected as pointers so this is connected with this is connected with this so it's not contiguous but just like arrays we have collection of elements okay so link list is also very important it's like link list is more optimize than AR okay with some limitations okay AR can do some more stuff but link list actually saves a lot of memory okay that's why link list is very useful in a lot of cases for example if I want to give you an example where is actually linkless used okay so uh you can actually mention in the live section where is Ling list used okay just mention a live session I'm checking I'm I'm waiting for you all okay okay so time up so uh in your browsers you might have seen the back navigation and forward navigation right right so basically the previous Pages or the forward pages are might be stored in some order right definitely definitely right so uh basically this is where Ling list used okay so Ling list is used is basically in the back and forward navigation of your browsers right so very important you can just search more about it how it actually works okay okay now guys let's continue with the next one which is stack okay so for stack you're going to give three days okay so stack is a linear data structure where you actually have concept of last in first out okay so this means the last element is added in the stack okay and the first element is removed okay so um you can just uh consider it as a hollow water bottle which is hollow from down Hollow cylinder actually so Hollow from down Hollow from up so you just pour water from here and it flushes outside from okay so like that okay so it's like last in I'm sorry last in first out okay last in first out you can just consider it as a normal water bottle so it's like uh complete packed water bottle so you just pour water from inside and you just empty it from the same side okay so last in first out all right so this is stack and similarly qes so uh Q's is basically first in first out so now you can consider it's a water bottle which is uh Hollow from down and Hollow from up so you just pour water and it comes from downwards okay so it's like whatever comes first would go first okay would go out first would flush out first right so this is cues again you're going to need another 3 days and you can just go for easy questions to get familiar with this okay then after this for the next 5 days you're going to go with recursion recursion is something it's like factorial function it's like for finding factorial of 5 you must find factorial of four for finding factorial of four you must find factorial of 3 factorial of 2 factorial of one so you can see you finding factorial again and again it's just like values is decreasing okay so recursion is that concept it's like when you want to repeat a task again and again okay so you actually call one function inside another function one function inside another function so same function is called again and again inside each other okay until you satisfy one condition that is from 5 4 3 2 1 so you reached one you have to stop okay now you don't need to call other function okay so that is what recursion is so it's a concept which is really confusing like when I was a beginner uh I like took around one week to actually learn recursion and I got really frustrated with this concept actually so yeah at least give it 5 days okay so with the help of recursion your brain would work more faster okay go for easy questions only don't go for medium okay just go for easy questions like factorial and so on okay and go for story based questions also okay then after this uh you must start with hashing okay so for hashing hashing is a technique where you need to search uh kind of a dictionary okay so it's like uh rule number one is uh ake rule number two is amog rule number three is herel rule number four is anmol okay like that so you can see if I talk about one this guy two this guy three this guy okay this is what hashing is I'm assigning one value to another one value to another one value to another okay this is what hashing is so again the hashing is a technique which actually helps you to uniquely identify elements if you have a very big data set of cores of elements okay so in that you can actually easily find the elements right so it's very great okay you can actually learn hashing you're going to use it a lot okay you're going to use it a lot because it has constant time complexity so it's very good to use hashing in lots of problem okay so you would be using hashing in arrays also okay so you can either learn it along with arrays or learn it separately that's up to you okay so uh you can use hashing in different data structures also okay so yeah go with easy questions lead code or gigs for gigs okay and one thing I would also like to mention is like till now we have learned these Concepts but along with them I would say search about STL libraries okay standard template uh so basically with the help of that you would be easily able to sort things search things because you don't need to write the whole program we just have some small small functions inside sort function you're going to provide your array it's going to be sorted automatically so just watch STL Library also where you can use these things okay so where implementation is there so you can use that in compter programming if you want to save a lot of time without writing code you just copy paste functions and use that but yeah you must know at least all these Concepts CTS because STL becomes slow sometimes and the knowledge of this is very important because the main goal is to sharpen your brain not increase your rank in Geeks for geks or lead code right so yeah doing GS in Python is good or not uh again this is a very common doubt but I would say doing DS in Python is good okay no problem with that I would say you can actually go with your preferred language okay if you're thinking about companies would consider you or not so they would definitely consider you because overall they care about is your thinking skills okay either you go for python or C++ or C or Java they they care about your thinking skills okay but when you enter the company then they would decide okay uh Harel by uh we don't like python we don't use Python overall so please go with C++ then you can learn C++ okay but right now this totally your choice you can easily go with python okay so yes now after this we are going to learn a very important data structure which is trees and tries okay trees and tries very important and uh like generally what you must do is go with theory part was for threes okay it's like just learn the theory stuff how many types of trees are there what I what what do we call each things okay so that you can easily visualize things you can draw a tree okay you can draw a tree like this okay so you can visualize things learn the concepts then after that jump to programming all right so yeah I have written the hierarchical data structure consisting of nodes where top node is called Roots okay and each nodes has at least zero or more child nodes okay and a node with no more children is known as the last node or Leaf okay so nodes are connected by edges so one node is connected to another node with the help of an edge okay a single line okay so that's what we call it and similarly what is try so uh when I was a beginner I was very confused are they actually same no they are not not same they are different so try is basically a specialized tree okay for storing strings okay so like this is for General things but tries is a specific tree for storing string okay it's also a tree definitely but not exactly a tree it's like uh separate kind of tree which is only used for storing strings okay so it's like used for faster string retrievable commonly used in different dictionaries or Google auto complete and spell check system right so you must learn about trees and fries and go for easy questions in Geeks for geeks or lead code okay then after this the next three days again you're going to go for Heap so you learned about stack and cues okay similarly we have a very important concept which is Heap so again three days are needed because there's no not much to learn here but to solve the problems okay so a he is a specialized tree based data structure that specifies Heap property okay so we have Max Heap and Min Heap and uh a heap is basically a complete binary tree you are going to learn binary tree in trees okay and you have a condition where at least Max or Min Heap must be satisfied okay so you can learn about G Heap in very easy uh like very very few days in three days because you already know about trees okay that's why you can easily learn Heap all right so again after this a very important data structure which is graph so graph is something which I would say if you are very comfortable with previous Concepts then go with graph because graph needs uh some patience okay and lots of frustration which I got uh so again 10 days are definitely needed you can take more if you want okay but yeah you need to learn graph properly because it's all very very much asked in very big companies okay so if you are aiming for fun okay they generally ask lot of questions from these okay so yeah graph or trees so yeah 10 days for graph so graph is a data structure which consists of vertices and edges okay you can just learn more about it you can search more about it in courses or tutorials okay but right now you must know okay so graph is generally used in Concepts like if you want to build Google Maps Okay so how does Google Map find the shortest path so it actually finds with the help of graph okay so yeah you can again solve easy questions at Geeks for geeks and Lead code okay then after that there is a concept known as greedy so greedy concept concept is like problem solving which makes optimal choices okay logically opt optimal choices at each step okay with the hope of finding Global Optimum okay so it's like I have right now this is my life I can earn 10 rupees or I can earn 10 lakh Rupees so definitely I would go with 10 lakh Rupees right I'm a greedy person okay so yeah that's the overall overview of greedy okay so again you need two days because you need to know the concept okay and then you can solve some easy problems in different different uh data structures which we have learned before okay so greedy is a concept right so now after this again we have one more concept which is dynamic programming so dynamic programming is again a problem to solve problems uh is a technique to solve problems by breaking down into similar sub problems okay and uh solving each sub problem only once storing the results for future okay so uh you can actually uh use dynamic programming to uh make different things to solve different things okay you can also search about it again it's going to need some time and patience because all the things which we have learned previously you're going to implement that in dynamic programming okay so mostly you're going to do problem solving in this one okay because this is a concept you just need to implement it in all the previous things okay so you can solve problems of that easy questions okay of each then after that we have backtracking okay so backtracking is like uh you are playing chess okay and uh like in your in your computer you are playing chess and and the computer knows all the back moves okay all the previous moves computer remembers that right so backt tracking is a problem solving algorithm technique used to find all solutions to computational problems trying to build a solution incrementally okay so to predict things okay to predict the next moves or previous moves for that we can use backtracking okay so again you're going to need five days and also all the previous things which you have learned okay you can Implement backtracking on that okay easy and medium questions because in easy generally we don't have something in backtracking so yeah C++ is good for DSA as a beginner right uh SEF uh I would say like there is no such language okay it's totally about you okay why I did C++ because my college told me okay there's no such thing like uh C++ is easy or python is easy it's totally up to you okay whatever is the like most Optimum okay you can go with that okay if your college is teaching you C++ you can go with C++ then DSA if your college is teaching you python then go with this okay but yeah if I had a choice from which language should I start with then I would say okay you can start with C++ okay but yeah there's no harm in using python as a beginner or Java or C++ or C I would say you can avoid C because C is very difficult difficult okay as per as what I feel okay but yeah the choice is up to you go for Java or C++ or python okay python is very useful in fields like Ai and ml useful in web development useful in DSA so python is a very good option if you want to have multiple career options okay that's why python is right now preferred a lot okay it's not like that see C++ is not great or python is great it's not like that the choice is up to you but yeah you must think in that way okay in which field I actually have to go and also you are comfortable with that language right so sir I want to do in Python but without using predefined functions okay so uh we actually generally have some a lot of predefined functions in pythons okay but yeah you can just search more about it and right now we have chat GPT also okay so you can just mention that in instead of sort function I want to write the sort complete sort algorithm so it would just give you suggestion okay you can do this so you can definitely do that also okay you can uh instead of using inbuild function you can create your own function also okay because at the end those inbuilt function is also created by someone else okay it's just a library or a package okay similarly you can just write your whole program also that's also fine okay you can use chat GPD for that if you are not able to find the exact things okay but uh yeah you can do it that way right then after learning backtracking okay easy and medium questions again in backtracking also this this is just a concept you are going to mostly solve problem in this okay so backtracking is a concept right then after that very important concept which is string it's a data structure okay it's a like kind of uh you can just use it it's a sequence of characters okay we have different different characters letters numbers symbols Etc stored in data structure okay and strings are fundamental part of computer science and widely used in programming I've kept string in last because I was like first you must get familiar with arrays and all the concepts in arrays also generally you would solve some string based problem but overall I have given extra four days for Strings because you need to uh go with this like at least give it four days four separate days properly on strings okay again uh easy problems are already done in Array so you won't feel that much pain okay but yeah you must go for medium questions of strings because if you are not aiming for very big companies but for normal companies like infosis uh like uh infosis or general companies okay so in that cases they might ask you questions on this okay so very important strings okay sir I'm confused in taking you to me DSA and gfg DSA course in Python please tell me which is the best uh generally I haven't seen UD DSA course yeah but I know about gfg DSA course I won't say uh which one is the best okay that's totally your choice but yeah I would say you can just search on YouTube about the review of the course okay search on YouTube on search on their website they might have provide demo videos okay just check out that okay or check out the reviews that would give you a lot of clarity okay if you talk about me I would definitely Pro promote gigs for gigs but yeah if honest opinion you can just check out directly on that okay right so uh then after that you have learned all the concepts okay all the concepts and you have along with that you would learn algorithms also within them okay while solving the problems okay so after that you need proper 13 days remaining 30 days for solving medium level problems okay assuming that you have solved lots of easy problems before now you need to focus on medium level problems okay to solve at least five medium level problems and at least three to five yeah at least three to five medium level problems if you want to properly be a good ranker in geks for geks or lead code or any other platform go for at least three to five medium level problems and uh you need to practice a lot okay practice a lot and once you get comfortable with medium level questions then only go with hard level questions okay right right now I would say that like in my case I was never comfortable with hard level questions even after 6 months of learning DSA because yeah kind of they are difficult but yeah if you are that much okay intelligent and that much fast definitely you can go with hard level questions also but first be very comfortable with medium level questions okay now you might be wondering okay I have done medium level questions now will Google take me Google actually yes you can consider yourself for giving interviews in Google because now you might have achieved some good level of questions okay you have done some good level of questions it's not like that you have done 500 or thousand questions I have seen people around me who are doing thousands of questions but still not getting placed why because they're not solving the exact problems okay they are just solving red problems or they are just copying pasting from the hint Solutions provided everywhere right so what you need to do is solve minimum problems okay like you can check out sheets of different different YouTubers uh we like gigs gig has also a set of problems you can check out that okay but yeah solve exact problems not all the problems okay your goal must not be to solve all the problems but solve very specific problems you can check out the sheets of different people who are placed okay like in YouTube also you we have different people who are placed in Google or different companies whichever by you like okay you can check out their sheets okay they have problems and the problems at the end take you to gigs for gigs or lead code or any other platform the problem must be there only okay the question must be there only but yeah they have a proper sheet okay which has limited number of questions but very specific questions so it's a very good idea and uh be very comfortable with medium then go with hard okay if you are very comfortable with medium then you can consider yourself okay right now I can go with companies in Fang okay that's the thing right so guys now this is overall 3 months okay this is overall plan for 3 months but it might take you more or less time okay to be this much capable after that after that I would say give at least one year okay to be a master of it okay to be a master in hard problems okay because heart problems definitely need time no person in this world can go for heart problems in 3 months it's very difficult but yeah you can go with medium also medium is fine okay you can go with medium with the help of this road map so kind of very beginner friendly road map if you're just a beginner you can go with this very beginner friendly road map which would prepare you till medium level of problems right so guys this is it so now I think uh your doubts are also clear after taking DSA in Python course is it best way to write notes while learning or you suggest any other method uh like uh if I talk about my method how I learn things okay like if I want to learn what I generally do is I just write everything in my computer only I don't make paper based notes okay if required if Theory based definitely you can do it but keep everything in program based only because at the end it's it's going to be everything in your mind okay things going to be repeated again and again while you write the code okay so you don't need to write take notes uh what I feel okay that's up to you your learning speed is different my learning speed is different my way of remembering things is different but generally what I do is I just uh write a program okay and just save it in my computer and I just also add comments of the points which need to be remembered but generally I don't make complete notes handwritten notes and so on okay I just uh save it somewhere in my computer and maybe once a month I just revise that okay because generally while you're writing the code revision is happening automatically okay so I would say prefer writing code more okay that would help you a lot can I do DSA with JavaScript definitely you can do that I have already done that but don't expect to get played in very big companies because uh generally pref preferred languages as Java C++ python or C language okay JavaScript has a lot of missing Concepts which are needed in DSA okay so that's why so I would say you can go with JavaScript but yeah don't expect to get placed in our big companies because they don't consider that right now okay they consider python C++ Java or C right now guys this is the short road map short and sweet road map which I have shown you okay I hope you understood this I hope you enjoyed this now you might be thinking uh will I get the PDF or uh something for this road map definitely after I end this video I'll provide the link in the description okay and uh what one thing which I need to mention is like if you are trying to look for a course definitely you can check out Geeks for geks official website here right now we have 390 challenge so basically in this challenge if you purchase any course from us okay and you finish 90% of the course in next 90 days then definitely you would get 90% of the refund so it's kind of a very good motivation and like you can take the most benefit out of it right so this is it and you can check out some courses definitely before purchasing any course please check out their reviews please check out all the points we are covering in that course if it matches with your uh requirement then you can go with that course right so uh just check out all of them they are really great okay and uh check out the reviews and definitely I would say give you a maximum participation in this 390 challenge right so this is it right now I am in third 32 semester okay but uh DSA full not done tell me the strategy to learn from this gek gek for geeks Force okay so uh I I have throughout the video I have mentioned the road map complete road map okay can check out the road map okay along with that there are different different courses okay so you can just search uh DSA course you can search DSA courses you can just first of all check out the free material available here then they have also mentioned DSA course you can check out that okay so it's taken by the owner of Geeks for geks S janer okay he's a like he has been educator at uh uh from very long years okay from very past long years so you can check out their course okay and uh they have also mentioned a very specific road map you can follow their road map also but if you are generally talking about my road map which I mentioned I have taken a general road map not not for geeks for geeks or not for any specific course okay I've I've taken a general road map okay you can follow this I either you can go for free resources on YouTube or you can go for paid courses also that's totally up to you whichever educator you like go with that person okay main thing is learn things okay so yeah you can go with DSA course uh like you need to search about more about it okay first read these things and uh like uh DSA course so you can see some videos are also mentioned here then road map to learn DSA and some more things are mentioned here okay so just read about it you'll understand a lot of things all right you will get courses from here okay so guys that's it for today and uh I hope you enjoyed this session so I will see you in the next one if you have any doubts you can comment below I'll be replying that and if you're looking for the feedback so if you want to give the feedback what you can do is you can just uh check out the description okay in description we have this feedback form just check out this form okay you can give a feedback how did you like this uh video okay you can just give your feedback honest feedback okay nothing uh no grudges at all okay I won't come at your house and beat you for that okay you can just give your honest opinion how you liked it and what must needed be to be improved okay so just check out this one and give your honest feedback it would help you a lot us a lot and also you to get awesome content from us okay so that's it for today I will see you in the next one do participate in 390 Challenge and also if you like this road map hit that like button and also subscribe to our Channel if you have any doubts mention in the comment section and also I'll provide you the PDF link of this road map in the comment section so till then see have a good day bye-bye