[Music] so the credit operations are creating reading updating and deleting elements from an empire we have already covered hello everyone welcome to intellipaat's youtube channel in this session we kick off the python data structure series that consists of arrays linked list binary trees searching and sorting algorithms in the first part of this power pack data structure series we will discuss the python arrays and how to deal with them so let's take a look at the agenda for this session before we begin don't forget to subscribe and press the bell icon to get latest updates from intellipal first of all we'll start with the basic introduction to arrays and then we will discuss the python array module to work with arrays moving further we will discuss the current operations on arrays using python and finally we are going to sum up this session with numpy arrays i hope the agenda is clear to you guys so without any further ado let's begin so what exactly is an array we can consider an array to be a storage or a container that will store items of similar type these items can be retrieved later for any computations these elements are stored consecutively in the array and can be identified with the indexes assigned on each of the elements positioned in the array these items can be of any data type and will follow the indexing for retrieval of the elements creating adding and removing elements from the array are the primary operations that you must familiarize yourself with and all the other operations are built on top of these three operations only a simple analogy to explain how arrays work is how you stack books on a shelf now you would want a shelf that would store all your books so this is exactly like an array you should be able to get the books from the shelf without searching through it all and there has to be a system of stacking the shelves so you can stack the books with the same numbers or you know with the same genre or books starting with the same alphabet etc but the shelf will only contain books and now that we have a basic idea of what exactly is an array let's see how we can implement them using python to implement areas in python we can follow the following approaches first is using the list and then we have the python array module and the python numpy arrays so to understand how they will differ let's understand the concept of homogeneous and heterogeneous arrays so what exactly are homogeneous and heterogeneous arrays the easiest way to differentiate between a homogeneous and a heterogeneous array is that the one that contains only single type of elements will be homogeneous and the other that can store elements with different types are known as heterogeneous arrays the implementation of arrays with python array module and the python numpy only allows homogeneous elements to be a part of them while the list can store heterogeneous elements as well and now that we have a basic understanding of arrays let's move on to a few examples to understand the array implementation in python so first of all we are going to start with the implementation of arrays using the python array module now to start with that we have to first import the array module using the statement import array and the alias we are using over here is my array before we start we have to understand there are type codes available for the array module for various data types for example if you're using the integer data type there's going to be another type code for float there is another type code and for unicode characters separately now to discuss more on this we can go to the link available over here which is official documentation here you can see the type quotes are given for c for python and the minimum size and bytes is also given so since we can see in the python types it's mostly integer and the float values available with the unicode character number of sizes available is 2 in bytes and for let's say integer signed integer we have 2 then we have float 4 bytes and for double it is 8. first of all we have to understand the basic operations we have to do inside an array which is creating an array then we have to add elements and removing the elements from an array so starting with creating an array we can use the python array model which we have imported from this statement and using the areas we are creating the array you're providing the type codes and inside the list over here we are mentioning the elements that we want in our array similarly we have another array arr1 and then arr2 with separate values one has the floating point values with the type code d and for the unicode characters we have the type code u now to check the type code we have a method called typecode so we can print the values using the typecode method available from the array module and then again we can print the arrays so which will look something like so the first print statement is actually giving us the type quotes which is i d and u which we have assigned into our areas over here and the next values are giving the array with the type codes now this is not exactly how we want our elements to be accessed so that we'll discuss later on in the session how we access the values inside an array but before that there is another very important section where you have to understand how you get the length of an array so whenever we are computing any value let's say accessing values or removing elements we have to understand how we access those elements to do that we have to make use of the indexing part which we'll discuss just in a while and before that we have to understand the length of an array because until unless we are aware of how many elements are placed in the area or what the length of the array is we cannot specify the range in which we want to iterate over so iteration basically takes place for accessing the values or basically printing the array so here we have done just that we have used the for loop which is in the range length of the array now if we already know the length of the array for example if it's 6 or five we can put the range over here as five or six but for cases where we have uh the array in the length of thousands and ten thousands we don't want that so we'll just use the length uh method over here to get the length of the array now for every value inside this range it will print the index value or whatever element is positioned at that particular index now we are starting from the range 0 because the index starts from 0. now we'll discuss that just in a while so just for example here is how we get the values from the arrays we had just created so when we uh run this code this particular code we are getting the values as 1 2 3 and so on for each of these arrays that we had already assigned all right so we are getting these elements or the elements from an array from each of the arrays array arr1 and arr2 so this is how we create an array and display those values using a for loop now we have already discussed the length of an array and we'll discuss so for any array that is of the length n for example the indexing will be the position at which each element is placed the index elements will start from 0 and go until the end of the array minus 1 so for example let's say we have an array over here which started from 1 2 and 3 only has three elements but the index value will be 0 1 and 2 because the index is starting from zero and going until the end of the array so that is the only significant part of indexing which we have to remember that it starts from zero so automatically we have to understand that the entire length of the array minus one will be the entire indexes that we have for the array now coming back to how we can access the elements from an array using index values this is how we can do that just for how we have done over here just providing the index value whatever element we want to be displayed at now here we have an array which is a list in the range 1 200 it basically has 100 elements just to be a little bit clear over here what we can do is add a step of 2 over here so that we'll have only 50 elements now now after this we have created a new array with the type code i and provided the list over here which we have created just now after this to print the array we are using the for loop again so we are getting the arrays from the index value which we have iterated over from the range of length of new array and this is how we get the array now let's say if i want the value which is at the index number let's say 25 or probably at 26 or 27 so that's how we get the values so this is a very basic example of how you can access values or elements inside an array so now comes the part where we add the elements into an array using the python array module first of all we create a new array inside this we have all these values and we print that array again so this is the array 3 4 5 6 7 8 9 and 10. now we want to add new elements to it there are two approaches to this you can use the insert method or you can use the append method by using the insert method you uh basically provide the index which you want to place your element at the new element and after this the append method is basically going to append or add the value or concatenate the value at the end of the array now when i uh insert two and one at the zero index i get the value as one two in the beginning which is the zero index and after this if i append value which is uh 11 it's just going to add the number 11 or the element at the end of the array now to understand this let's just uh change these values let's say if i want to add 15 at the end of the array it will be 15. and instead of 2 let's say if i want to put 5 add the index number uh 2 or instead of 5 we put 50 over here so the value will be 50 at the index number 2 and after that at the zero index we are adding again 1 so if we comment out this one you'll see that at the index number 2 we have added the 50. so that is how you simply just add the elements into an array and this is how easy it is with the python programming it basically becomes a lot easier to deal with any data type be it array it is if it is a link list or any other data structures that you want to talk about python actually makes it pretty easy to work with just that you have to understand how the logic works so basically you have to understand uh the addition of elements and removing of elements as well so moving on let's talk about how you update these elements inside an array for example we have this array which has one and two is actually twice in that array so now i want to update two into a element which is 3 first of all we print the array so this is the array resulting array and we are using the same approach the for loop and the length of the array after this to update the array basically what i have done is accessing the element at the index number which i already know and after this i update this value to 3 so this is how i have just done it assigning the new value using the assignment operator and then when i print the array again it is updated now to understand this again instead of 3 let's say if i wanted to put 30 over here the value will be updated with 30. and instead of this let's say if i wanted to put it at the fifth index so do we have a fifth index over here since we only have the five elements we only we don't have the index and it will throw us an error which is assignment index out of range when you are going out of the index range it is going to throw you an index error so that's how you know your surpassed the index that is available to you in the area so this is how simply you can just update the elements inside an array after this comes the part where we delete the elements from an array now this is basically removing the elements from the array and for this we can use the pop method so now if i wanted to pop four let's say for example what will happen we are basically giving the index value number four over here so instead of four let's give it as 2 let's see what happens so now we are missing one value at the index number 2 which was 2 over here now let's see if i do this at index number 3 what will happen now we have remove the element at the index number 3 as well so this is how simply you can just delete any elements using the pop method and since we have already covered uh creating an array using the python array module we have updated the values we have added the elements inside the array and we have learned about how we can delete the elements now comes the part where i'll tell you about slicing but so what exactly is slicing slicing is a part of a concept which is also similar to how we use indexes now in the indexing it is not just one element we can get at a time we can get multiple elements so that is how we use the slicing operations basically let's say if i want to get so there is an array x over here which is in the range 0 to 100 and we have taken the step as 3 we'll have probably 33 elements inside the array now if i wanted to let's say only get the first 10 elements or if i only want to get from the 10th index until the 20th index from the array so that is how we use the indexing so inside the indexing we use a colon over here and after this we have the ending index and the starting index so when i print my new array over here which i have got from the slicing operation you will see that this is basically how much values i'm getting or how many values i'm actually getting another important concept in slicing is negative indexing how you can use the negative indexes so let's say if i want to get the starting point will be the 10th index and the ending point is minus 10 which is basically the 10th index from the end and one more thing is we do not really have back propagation inside the slicing operation so we cannot go from back to uh let's say to the front see if i do it like minus 10 or 2 minus 20 so this will throw me an error because we do not have slicing operations our negative indexing will not back propagate and after this we have another important slicing operation which is basically reversing the list over here we have used colon colon -1 and this is how simply you can just reverse the list without using the reverse method from the list so this is all about the slicing operations we have and if you have any questions guys you can mention them in the comment section below and uh we will be quick to help you out in any problems you're facing with the arrays just a quick info guys if you want to make a career in software engineering then intellipaat provides an advanced certification program on software engineering and application development by eni city council of iit guardi and it is taught by iit guati professors and industry experts this course is designed to upskill and land your dream job now let's continue with the session so now that we are done with slicing operations we will also learn about how you can actually search for elements or you know a few searching operations using the index method so we have a list over here which is in the range 0 to i think this is more than 100 000 and we have a step of 2 over here so this is a very big array or a list which we have created into an array using the python array module and the type code is i so these are all integer values now what we have to do is uh let's see we are printing the first 10 elements of the array and we are good to go so these are the first 10 elements of the array so these are the first ten elements of the array starting from the zero index and going until the tenth and you will notice that one more thing i forgot to tell you guys whenever you're giving the ending index over here this will not be included in the result because it will only give the values starting from the zero index until nine so when it comes to ten that's where it uh stops and does not give you the result from over there now coming back to the searching operations so we are basically searching for the index which we want so basically let's say this is the value we want uh to be searched for we get the index from using the index method which is uh we are using to search for the array so if you already know what we are searching for we can get the index and using the index value we can get the element out of the array so this is how easy you can search for any elements using the index method in the python array module now after this i have listed down a few sorting operations as well where we just sort the entire array into ascending values or descending values depending upon how you want your elements to be placed at we will basically use the list methods which is sort and that is going to sort our array so we have a sorted array over here we are using sort method and when we print this so we have sorted this into a ascending order and if you want this to be a descending order we will just type reverse is equal to true in the sort method and we'll get the descending order as well so this is how easily we can perform these operations like sorting searching and all these adding elements removing elements creating the array or updating the elements and deleting elements as well so this is all about the python array module that we already have now coming back to the session we will discuss the numpy arrays so number i am sure most of you must be aware of is a python library and it basically comes up with built-in modules that helps us with computations so python array are also one of the functions or you can say modules that it actually helps us with and we can use numpy for that so basically first of all what we have to do is import array and we are using np as the alias over here to create an array we use the alias npn array module and before we were giving the type codes inside here we don't have to give any type codes it will uh just figure it out itself and we're just using this list of five elements one two three four and five and when we print the array this is how we get the areas so this is as simple as creating any list and uh it actually helps us with creating uh you know custom uh areas as well so here is a part where we create the array of two by two the shape two by two and which is basically all the zeros a two by two array and which are all the values are zero and then we have uh another method once that will create a two by two array with all the values that will be one and you you can also notice that all these values are floating point values after this we have a function called full which is basically going to create uh whatever shape we are providing over here let's say if i provide the shape as three by three and we want the values of the constant that we want inside that area to be five so this is what we get a three by three array with the value five all over as a constant we can do this as ten any constant value that you want to print over here now after this we can also create an identity matrix which is basically the i method and inside this we just provide the number like 2 this is going to provide a identity matrix with the a two by two shape then we have a three by three shape we can just decide which which kind of shape you want with our identity matrix and identity matrix is basically a very useful concept if you are further down learning about dimensionality reduction and you know principle component analysis or time series forecasting that are these are some of the very important machine learning concepts and they make use of linear algebra and in linear algebra you'll come across uh identity matrix and arrays of different shapes and sizes there you will be handling the dimensions to be let's say four five fifth and that's that's how you want to learn linear algebra using numpy arrays so after this we have another method which basically creates array with random values so this is how you simply create it just give out the shape and it will create the array with random values a two by three or a three by three depending upon your requirement you can just create uh random arrays with the random values so these are a few operations how you can create the numpy arrays so we have already covered how you can create the numpy arrays let's take a look at how we can we have multiple dimensions that we can use with the help of numpy arrays so this is how you create a zero dimensional array just provide the scalar value over here it will create a one dimensional array like this after this you create uh i'm sorry guys a zero dimensional array that's how you create a zero dimensional array then for a one dimensional array that's how you create it and for a two dimensional array you have to uh create a nested list or a nested array basically so that's how you create two dimensional array and for the three dimensional array we have a two dimensional array nested inside a array so basically a three dimensional array will consist of let's say for example two or three or maybe four uh two dimensional arrays so now here we have another parameter called n dimensions where we basically provide the dimensions so if i wanted it to be a two dimensional array or a three dimensional array or a multiple dimensional array this is how i can assign the values and get the resultant array so now that we have covered uh creating the arrays using numpy let's let's take a look at how also if you have created all these arrays you can check how many dimensions it has using the n dimensions method so this is how you get the values as so the first one we are getting it as one dimensions and similarly for the ones we are getting the same for a zero dimensional error let's let's just check for the zero dimensional array as well if we can get the value so we're getting that dimension as zero again now moving on let's understand the other operations that we have on numpy arrays just like we have done for the python array module like how we access the elements how we update the elements how we remove the elements and so on so reading from a numpy array we can use the same approach we were using for the python array model we're using the for loop inside which the range is basically the length of the array and then we print the values like this so we're getting all these values again all right so i think we have made a slight error over here we forgot to give the indexes and now let's see if we are getting the values again yes so we're getting the similar values from the array and that's how we read from any numpy array just like we have done for python arrays now updating the elements again we use the same approach if we already know the index value we just use the index value and update the value if we don't have any values regarding the index we search for the index value for that particular element and after that we can update the value so this is how we have done that and now after this to delete the element again we can use the delete method we have from numpy so we don't have to uh use the pop method in any other methods we can just simply uh provide the data we are deleting from and the index value so since we are removing the ninth index so we are getting the resultant array as this so the last element has been removed so the credit operations are creating reading updating and deleting elements from a numpy array we have already covered let's just talk about how we can search and sort from the numpy arrays so searching elements in any numpy array we're using the same approach we have a list over here which has all these values 20 000 values with a step of five so we have a sample search array we have created using the numpy and after this we want the numpy where sample search array is 5500 so the difference between how we were searching the elements from uh the python array module and this numpy array we have this where method which basically helps us give the expression which we want for our element and we basically get that element and just to check if the returning index is true or not we will print the sample array at the index number whatever we have got from the result over here and this is how we are getting the exact same number which means this is basically uh searching the element quite efficiently now coming on to how we sort the elements inside the numpy array we are using uh again the sort method which we have in the numpy and it is basically sorting us the element in the ascending order now let's see if we have the reverse is equal to true argument if we can pass over here so sort dispatcher got an expected keyword argument reverse so we do not have that over here so this is how we sort the elements inside a numpy array now after this let's talk about a few mathematical operations also we can uh perform on our numpy arrays so not just the crud operations we can also make use of mathematical operations like adding subtracting dividing getting a transpose of the shape 3 by 3 matrix and multiplying square root so that's how we do it we basically have these two arrays which we have assigned using the data type integer now to add these two numbers we're using the add method over here which basically needs two parameters just the arrays that you want to add and we get the result like this areas that we want to subtract from so this is how we can subtract two arrays after this we have the multiply method which basically also has only two parameters after this we have the divide parameter which has the two parameters again which we want the number to be divided from and uh after this we have the square root again the square root method will get uh only one parameter so if let's say if i want to get the square root of all elements from an array i can use this method and then again to find out the transpose of a matrix we have created another numpy array so this basically is uh the array now if i want to get the transpose of this method i'm using the transpose method which is the parameter and this is how it will look differently so this is the original array that we had and this basically is the transpose of that particular array so with this we have come to the end of the session guys so that's all for python arrays so that's it for this session guys in the hands-on section we have learned about the python array module how we can create an array how we can read update and delete the values or the elements from the array we have learned about how we can search the elements inside an array we have learned about how we can sort the arrays of the python array module after this we learned about the numpy arrays how we can create them read update delete all these values from the numpy arrays and we have also learned about the searching and sorting of numpy arrays additionally we learn about the mathematical operations that we can perform on the number arrays so if you have any questions guys you can mention them in the comment section below and we'll be happy to help you out in your journey to learn data structure starting from the numpy arrays stay tuned for the upcoming sessions on python data structures and if you have any questions uh don't forget to mention them in the comment section below guys we'll be happy to help you in your journey to master python programming now that we are done with the session don't forget to subscribe and press the bell icon to get the latest updates on intellipaat just a quick info guys if you want to make a career in software engineering then intellipaat provides an advanced certification program on software engineering and application development by eni city council of iit guate and it is taught by iit guarti professors and industry experts this course is designed to upskill and land your dream job you