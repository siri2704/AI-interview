hello my name is ultrafan so today is the 24th day of Boom Marathon Challenge season 4 so today we will talk about uh what are the basic topics or the topics for DSA we have to learn to and getting job ready or we have to learn for interviews so uh first of all we have to learn data what are the data structures types of data services means it's primitive or abstract primitive means yeah it's a data that's come with the programming language and Abstract data which are we have to code for it just like that stack and QR effect data structures and array is there uh basically uh primitive data types then we have to learn about the Brute Force root force is a technique to solve programming without any algorithm we have to solve that by using the nested for Loops or without using any algorithm we can solve the problem by n Square have n square or n Cube Big of n Cube time complexity we can solve that problem so after that we have to learn about the 2D array means uh the array about the Matrix so this is all about the 2D Matrix 2D Matrix 2D array means its Matrix arrays in the array [Music] so it's called 2D array then we have to learn about traversal and diagonals so how to Traverse the matrix by diagonally and by the row and column so after that we have to learn about the object object is the key value pair which is called in the JavaScript object and in the python it's called dictionary and in the Java it's called hashmap table it's so cool then we have to learn about the time complexity or space complexity means uh what is the time is uh well taking the by educational program or code you know just like that if we use two uh Loops if it's a nested Loop and it's going from 0 to n then it's a nested load then its time complexity will be and N into n or n Square okay so this is that time completely and if we talk about space complexity space so complexity is the thing like that uh if we are using extra array or extra Matrix to solve the code so it's called space complexity so if we want to uh decrease the time complexity we can increase the space complexity so it can be done by its so then we have to learn about uh introduction to 2.2 pointer means what is the two pointer how we can solve the problem by two contribution means one pointer in the front uh first point and the second Point can be on the first on the second element or the another element it can be everywhere we can solve it by a two pointer take this so it can be a solution and then we have to learn about sorting algorithm means it can be bubble sort in there and it can be selection sort this can be merge sort so uh we have to learn about the Sorting algorithm basically we have to learn bubble certain selection so we can learn also about the uh insertion sort or merge sort so this is the award sorting then we have to learn about structures uh State data structure or queue data structure stack into data structure is working on last in first out and Q that I expected work as a first in first out last in the first Out means in the structure uh State structure just like that plates in the reference that if we put last plate on the state then we have to uh put a pop out there last one first and if we think about first and first out in this queue the the lines in the ticket system we can show that first men come and take it and first out so it's called First in first out so then we have to learn about that link list link list is not a linear data sector like adding it's uh it has two uh two elements like first is uh node and it says nodes in the link list in notes there are two separate parts one is called data and one is called next in the next we have the reference of the next element and in the data we have data for that for that part so it's called link list so this is about the English plan we have a recursion recursion means a a program or a function which is uh which is called itself means it's calling itself uh uh till the base condition is true so if this condition is pulse then it's uh uh the if the best condition is true then it can be uh and can be terminated but uh before the base condition it can be uh calling one by book one until the base conditions so the recursion is calling a function by itself whenever search on Google recursion and Google also and to this Behavior like uh we have to uh redirected Apex where uh so in did you in recursion then we tap on the recursion then we go back the page that showing that did you mean recursion so that's all about recursion then uh we have uh Advanced option of that recursion which is backtracking back breaking means uh we have to backtrack just like that we are going on the way and if we find that this is not uh best solution or this is the node solution then come back and go to the next way and if we find that this is not the right way then we come back and we go to the next video so it's called backtracking backtracking means going checking that this is the best way or not if this is not best way then come back and go to the another Buffet so that's all about the big treating so these are the basic data structure basic data structure or algorithms which you have to learn for the for the interview purpose or for the job ready developer so that's all about that DSA thank you