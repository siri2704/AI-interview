so for majority of the students already we started this batch but let me give introduction because those days only few members came so let us discuss about the syllabus structure everything the students who already attended just please wait for a few minutes and then see uh just like a revision sir the title of the course is data structures and algorithms with python okay the duration of this course is two months fees for this bat is 2500 the timings is from 900 p.m. to 10 or 10:15 p.m. like that we will take okay and uh this is nothing but rarely I'm going to start DSA with python because um you know python is very easy programming language if we want to implement data structures by using python first of all it is very easy okay that's why less number of registrations will be there so after this batch maybe after 3 months or four months you can expect another batch that's why the people who are willing to continue you can register for this okay coming to the syllabus these are the syllabus topics which we are going to discuss at very beginning I'm going to explain introduction to algorithms introduction to data structures time and space complexities recursive recursive algorithms bit manipulations back tracking okay sorting searching algorithms divide and conquer algorithms dynamic programming greedy algorithms hashing algorithms array list okay and also string up to this okay up to this hashing everything comes under algorithms everything comes under algorithms but whenever you are talking about array list string linked list stack Q priority Q so tree binary tree binary search tree AVL tree red black tree graph these are nothing but what data structures these are nothing but data structures okay we are going to discuss both data structures as well as algorithms so the order I may not follow So based on the situation we will start corresponding topic and we will continue so this is nothing but the syllabus what we are going to cover so if you are having any queries with respect to the duration fees timings and syllabus you can feel free to ask then I will start any qu is uh crude operations on strings or that that is not taken here sir all these things will comes under string only I already answered this question for you okay okay sir okay no math is requ nothing okay okay sir any other questions any other queries no no no okay so now I'm going to start okay uh revision of python actually revision of python is required but revision of python I'm going to take in some other session around 1 hour or one and a half hour like that I will spend to discuss about python revision where it includes array list and strings these things I will include there so now the first chapter which I'm going to start okay is nothing but recursion or Rec recursive recursive algorithms recursive algorithms I request everyone to please be active and please give responses okay because simply if you are listening then definitely we know you want to understand the concepts well so highly recommended to interact then only you can understand the subject very well so my sincere request is highly recommended to interact okay now let us start one by one and topic by topic I'm going to demonstrate sir listen carefully how to define a function in Python anyone can you please tell me how to define a function in Python sir function name empty parenthesis yes suppose assume I want to create a simple Python program okay assume the name of the Python file which I'm giving is nothing but something like a test.py test py so if I want to calculate maximum of two numbers like sir a comma B is equal to I'm going to give 2 comma 3 I want to find out maximum sir how to find out sir print off a is the maximum if a is greater than b otherwise B is the maximum sir is the code is correct please confirm yes otherwise for your easy understanding purpose if the value of a is greater than b then so print a as the maximum otherwise print b as the maximum sir is this code is clear for everyone yes yes so if I run this program what will happen it is going to print output what is the expected output for this program Friends please confirm three three is the output why because we are trying to calculate maximum value the output is nothing but what we will get three as the output let us cross check really is that three is coming or not let me cross check sir py space I'm giving test. py you can see the output is nothing but what three sir this is nothing but a simple function sir what is simple code simple code what we have here sir the output of this program is a three but I have a requirement like I want to repeat this task for three times like this I have so here minus 2 3 is there minus 2 minus 3 is there like that we have a situation okay so then what will happen then what will happen definitely different result it is going to print 3 2 minus 2 like that sir in this case the task is very simple but how many times we are performing the operations three times right three times this is the logic this is the logic this is the logic If You observe the Logics are same if you see the code also this four lines of code is repeating here the only change is nothing but what the values get changed sir instead of writing three times you can Define only one time you can Define only one time so that that code you can reuse that code we can reuse sir the biggest problem the major problem the major problem in the above above code or above program above program is reusability reusability is the biggest problem what we are facing so to overcome okay to overcome so this issue so we have functions functions functional programming is there how to overcome that so I'm going to Define like f function which will take two numbers if a value is greater than b we will return a otherwise we are going to return B that's all now you can call for any value sir I'm passing 1 comma 2 it will give the response I will pass 2 comma 3 it is going to give response I'm passing 3 comma 4 it will give response sir 4 comma 5 so in all these cases we are going to get the result so everyone understood how this logic is working how these functions what is a need for defining the functions everyone got Clarity please confirm yes sir sir if you give negative values yes negative values also it will work okay okay sir sir clear everyone please confirm yes so why we need to go for functional programming this is nothing but the scenario what we have so next and after that very very important thing I'm going to explain now what is mean by recursion anyone having idea repeated function what is mean by recursion anyone having idea continuously recurring function when function call itself within a function very good so sometimes a function can call another function such type of functions are called as what recursive functions recursive functions but inside recursion maximum the students are going to understand only the basic thing that's all but internally internally what is happening in the recursion no one is is going to understand but we need to see the internal part if you understand that internal part automatically so majority of the problem is going to be solved now I'm going to explain how these method calls are going to be happened internally what structure is there I'm going to demonstrate now so please Focus so for another two or three examples which is very very important please Focus very clearly so the first thing first example I'm taking see I have a function is there with the name FU fun inside this I'm going to take sir function execution started like this I'm taking and Sir function execution ended like this I'm taking sir if I run this code it won't print anything why sir because we we didn't made any call to this now I'm making a call what will happen sir simply it is going to print function execution started function execution ended but we know this but internally what will happen sir internally it is going to create one data structure what is this data structure stack data structure in the python there is one person is there called python virtual Mission this python virtual mission is responsible to execute main module in the main module only this function function is there so what will happen that main module is calling one function called efun then what will happen the function execution is going to start so function execution started function execution ended after that sir it is going to complete python virtual mission called this function right this function task has been completed it will delete this entry again it will come back and it will report to python virtual Mission saying the program complete task is finished and you can destroy this stack like that it is giving instruction to python virtual Mission sir three steps I explained python virtual mission is going to invoke the function and function is going to be complete its task before I mean after completion of this execution it will destroy that entry from the stack and it will give a report to python virtual Miss that is the way of executing this function everyone feeling comfortable up to this any quer sir yes yes getting sir I told already interaction must be required I need all the 11 members to please interact clear yes sir but the question is if you if you were to say the function def the function is defined meaning that it is now going to start right so like for example if you say uh if you say that sorry if you say that um uh in know defined function print function function execute started um uh uh so then the function will print the F the that it started or not started it'll print both right yes it will print both because two instructions are there right oh okay okay so then but it doesn't care about the pvm doesn't care which which one comes first or does it doesn't care about the logic there it always it will always follow the sequential only from top to bottom it will execute okay okay okay inside the function inside the function in which order you have written the code in the same order only it will execute but if you use a machine learning library like tens FL then you interpret print Function One print function two then does that does it change is it record the input different that is that that is depends sir that is depends in this scenario we are calling function so how the function is executing inside the function there are only two lines are there which line is there first that will execute that makes sense yeah yeah uh that makes a lot of sense so basically the it doesn't care which line comes first or second right thank you yes okay make sense sir any doubts up to this please confirm so that I will go for next complex right sir next I'm going to take second example please listen carefully please listen carefully the output for this program already we predicted what output we got is the expected output only okay this is nothing but output what we are getting okay fine now I'm going to include some complex code what is a code that I'm taking is Sir now I'm going to take F1 fu1 Function One execution started Function One execution ended but in between this I'm going to take Fu N2 I'm calling another function what is that function F2 so I'm going to Define F2 what F2 is going to do F2 execution started fu2 execution ended like this we have sir please listen carefully my question is Sir python virtual mission is going to invoke which function first please confirm Function One function 10th Line 10th Line is going to be invoked okay so we are initiating a call to function one then function one is going to do its a job what function one is having sir Function One exec started it will print first line as this one correct everyone yes sir then what what is there here function to is it a statement or function call function call that means the redirection will happen from here to some other function correct yes that is the biggest problem here because if it is leaving the control and it is transferring the control to another function so what will happen still there are some instructions but it is invoking another function so what will happen function to execution is going to start how many lines are there two lines this is nothing but a second line what we are going to get in the output this is third line so function to execution completed it will destroy this entry and it will come back sir where we stopped function one is there any other instructions are there in function two please form no sir yes so that pending lines is going to be executed then what will happen this entry also is going to be deleted and it will report to the python virtual Mission saying all function executions completed sir everyone understood this yes sir some coming someone is please be on mute please be on mute everyone sir clear up to this yes sir everyone clear yes sir now what I will do is I will try to execute this program friends have a look once sir Function One execution started okay then function two execution started and ended then Function One execution ended so whatever output I expected same output only I got sir feeling comfortable up to this yes yes so but the question is but the in function um it's a same function running again and again recursive function no no actually I didn't start at recursion just I'm explaining only the functional programming features okay okay that makes sense thank you so much thank you yeah sir clear everyone up to this clear now sir slowly I'm trying to include the another concept like I'm trying to add one more function sir function two is calling another function called function three now this is nothing but sir function three execution in function 3 just I'm going to print function 3 execution started function 3 execution ended sir I will give for easy understanding purpose this is line number one this is line number two just in my point of view I'm giving line number two and this is uh line number three okay and this one is line number four so this one is line number five and this one is line number six now if I execute this in which order we will get the output what is the first line it will print function one extion started line number one then you will jump to function number two L3 then line number three l l then sir my question is after this L6 is going to executed what is the recent method called two fun two that's why it will complete the function to first then what is the next method call last one function got it sir everyone yes sir yes sir so if you see the stack flow how it will be sir python virtual mission is invoking function one it will complete the task and it will invoke function two it will complete the task and it is invoking function three so then function three completed it will come back what is a recent method called function two then it will come back what is the recent method called function one and then it will stop so let me check if this is the output or not so someone is online is Audible and the voice is creating sir no problem please listen please Focus sir Function One execution started so function two execution started function three execution started function three execution ended most recent function is always going to be invoked here okay so everyone understood how the method calls how the function calls are happening inside this functional programming if you are clear then directly I will go with recursion clear yes clear yes clear sir right so now I'm going to take recursion before recursion definition first I will write the code then I will explain the definition for recursion so now listen I have a function is there inside this I'm printing a message saying good evening good evening like this I'm printing then I'm calling the function what is output of this program sir first a stack is going to be created okay fine in that stack multiple entries will be there okay so first python virtual mission is going to call python virtual mission is going to call which function f n inside this function good evening message is there that's all it is completed its execution the output what we are getting is good evening sir now my question is after this can I take like this please confirm yeah we can call like this yes we can take why because f is a function f again we are calling f function can call another function a function can call same function also now see the stack flow sir python virtual mission is invoking fu1 fu1 again invoking F F1 is again invoking another function sir this function again invoking another function this function again invoking another function this function again invoking another function so it is a never ending process everyone understood yes yes sir sir can you run the code on once please wait sir please wait please wait don't hurry without running the code I won't stop right so py space test. py I'm taking sir you can see it is keep on printing it is keep on printing up to certain level so at last there is one message what is that message recursion error maximum recursion depth exceeded while calling a python object while calling a python object maximum recursion depth is exceeded like that I'm getting this is nothing but the problem what we are facing so is it a problem or not yes what type of error message it is recursion error recursion error so why recursion error is coming because continuously it is printing the message sir everyone understood yes sir there is no condition to stop it yeah yeah it just keeps calling another function one by one another function another function just like you said the function call another function C same it's not even the same function it's different functions yes sir clear everyone please confirm sir what is the dep here how many times it's calling or printing no no we can't predict that is depending on the recursion why because internally for every programming so they are going to Define some stack size up to certain entries it is going to hold we can't predict that okay okay it should be in it should be in thousands or in lacks any as of now thousands only not thousands also hundreds only okay okay so minimum limit only will be there but no one is going to write a code like this we have to write up to certain point it should stop like that we have to write assume sir I have a requirement I want to print this good evening message only three times only three times what I will do is I will write a tricky code here if you want three times try to pass three here it is a parameter right so we are passing three so that that value I'm going to consider as a n that value Val I'm going to consider as a n so it will print good evening next time can I take n minus one yes why because observe the stack first time we are calling the function by passing three then what is happening this function is calling another function by passing F value as a two n value as a two then it is calling another function by passing n minus one that's all whenever n value is zero whenever n value is becoming zero we will stop here itself we will stop for that I will write code what is that code sir if the value of n is equal to Z there is one statement is there called written so which is used to come out from the function if you want to come out from the function sir which keyword we have to use return if I use return immediately the control is going to coming out from the function sir like this we have now I want to run the code have a look once what will happen sir py space test.py it is printing good evening it is printing good evening it is printing good evening how many times this message we are getting sir three times we are getting sir is our requirement fulfilled or not yes sir everyone understood it is rning what only return we have return sir I told already python knowledge must be yeah yeah sorry please don't go to very low level Basics return means simply coming out that's sir everyone clear clear any questions from this right sir can I define can I define recursion like this is recursion recursion is a process of calling a function recursion is a process of calling a function by itself by itself correct now correct yes yes sir this process this process is called as recursion and the method the method which is invoked which is invoked in this process in this process is called as recursive function am I right correct yes next internally internally python virtual Mission will use which data structure sir stack data structure stack data structure to manage method calls or to manage function calls clear clear any questions from this there are two types there are two types of recursions existed okay based on based based on stack entries based on stack entries so if there are limited entries unlimited entries can I call it as infinite infinite recursion means what unlimited unlimited function calls function calls in stack what is the second one sir finite recursion finite recursion means what we have a control sir limited function calls will be there so if you take example already I covered for finite recursion and infinite recursion two examples I have taken sir any doubt no sir next one more definition sir based on based on the number of based on the number of functions sir we have two types we have two types of recursions based on number of functions what is the first one is what is the first one is listen carefully direct recursion direct recursion is there second one is indirect recursion indirect indirect recursion I don't want to take executable code simply I'm going to write listen carefully sir DF Fu N1 or Fu I'm taking which is going to call which is going to invoke some some code and it is calling same function this is called as direct recursion this is called as what direct recursion a function is calling same function indirect recursion means what I have function one is there so inside this function one we have some set of instruction inside this I have another function is there called F2 so if you take another function inside these we have some instructions are there it is again calling F1 like this we have so function one is calling function two function two is calling function one it is a NeverEnding process it is keep on running okay so this is called as what direct recursion and indirect recursion every one sir feeling comfortable up to this no no sir once again sir here one function is calling same function means it is direct recursion directly it is calling indirect recursion means what one function is calling another function function one is calling function two function two is calling function one can you give guarantee for this code no because it is keep on redirecting from one function to another function right understood yes sir yes sir this is called as indirect of course we are not going to use these things in the real time but just theoretical point I'm covering everyone clear clear any other questions from this we are not using indirect function in any of our applications that is the you want to see no no we can use but maximum uh less number of uh uh code will be there like [Music] that clear everyone yes sir yes sir clear right so just I have given inputs to the recursion sir that's all okay remaining things we will continue tomorrow so tomorrow also some theory topics will be there around uh for 15 minutes I'm going to give why we need to go for recursion what are the properties of recursion when you are seeing any problem how you can identify that problem can be solved by using recursion how you can get an idea so that one I'm going to explain next and after that sir 20 applications are there on recursion 20 applications are there on recursion but I'm trying to execute so at least some three to four applications in the tomorrow's session this week and all recursion and backtracking classes will be there okay and demos only three days today tomorrow and Day After Tomorrow demos will be there the people who are willing to continue you can start making the payments and join into this course the details I shared in the chat window if you are having any queries about the course or content you can feel free to ask sir I will pay the money today and and the advance logic B also I pay the money to okay oh okay okay sir I have already paid U I have already enrolled okay no problem raes sir one beauty of your teaching is you teach from bottom of a heart for all the student that is where you make exception from all other teachers sir thank you for being yeah thank you yeah thank you sir you're a great teacher thank you sir thank you sir thank you okay guys tomorrow we will meet for the continuation same timings same link thank you okay thank you sir bye bye