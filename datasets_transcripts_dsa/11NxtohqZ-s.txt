[Music] hi everyone today we are going to discuss a problem named distribute candies so let's move to description part here they are saying there are n students standing in a line each student is assigned a rating value and you responsible to distribute the candies to these students subjected to the following requirements each student must have at least one candy because every student deserves it okay so every student would be getting at least one candy and second role is students with the strictly higher rating gets more candies than their neighbors okay so then they asking what is the minimum number of candies you need to distribute to this student okay it can be I mean the numbers can be any okay any big number but still they want the minimum candy minimum means uh one candy less than that won't be satisfying these two situations okay so that's why now input the first L of the input contains the number of test cases which is two okay and then for each test case first and contains the number of students nals to three and then second line of each test case contains the rating of those students like first student have rating one second have zero and third have two okay now let's move to the given Parts okay what is given again we need to distribute candidates to each student such that both of these rules should be satisfied what is the rules first each stent must have at least one candy okay and second is student with strictly higher higher rating gets more candies than their neighbors so moving on let's see with an example in the input part uh one of the uh given is three students and ratings are one2 so 1 0 and 2 and Nal to 3 okay now just to satisfy the rule number one each student must have at least one candy correct so that's why in the candies array or you can name it anything okay just put one one and one initially so rule number one have been satisfied done correct now let's try to satisfy the rule number two what is rule number two a student with strictly High rating gets more candidates than their neighbors okay neighbors here is the catch because when we say neighbors okay when we say neighbors they are two kind and there are two neighbors okay first is left and next is second is right okay so so we are going to check for booth okay check for boo because they have said ratings okay let's see this again a student with a strictly higher rating gets more candies than their neighbors okay so that's why for both neighbors we are going to check now let's move and let's call the checking for left neighbor as to a part okay one was done so 111 was filled now we are checking for the left neighbor when we're talking about left neighbor okay so for the very first item in the array of for the very first student okay there's no left neighbor okay so that's why just because we are going to compare for the with the left neighbor we'll be starting with the second stent till the last student okay so that's why uh second student have rating zero and who is the left number first student is the left neor okay this stent is the left neor so is zero is z strictly greater than one yes or no no if Z is not greater than one so what will happen no changes correct no changes in the candies now moving on to the next student this student is a third student this have the left neighb yes as the second student second student is the left number of third student correct so rating of third student is two and rating of second Str is zero is two greater than zero yes it is so what would happen if the rating is greater okay then this third student would get one more candy than the second student correct so 1 + 1 would become two okay so after comparing the left neighbor the total candies for each stand would be looking like this one one and two okay now moving on let's check for the right neor okay again when we are saying the right neighbor then the last student don't have any right neighbor correct don't have any right neighbor don't have any neighbor so that's why we will start from the second last student the second last student would have neighbor as the I mean last student as the right neighbor correct so rating of second last student is zero and which is and the uh last St is two so is z greater than two no so what will happen nothing no change correct so we'll move on to the First Student First stting is is one and it right neighbor second stent whose rating is zero is one strictly greater than zero yes it is so what will happen this will this stent will get one candy more than its right neor right have one so this will get two candies so total candies for each student after comparing for the right number also what will it be two one and two okay now let's calculate the total R candies would be now first condition second conditions a part and B part means both neighbors have condition have been satisfied so now it's time to calculate the total number of candies because these are going to the minimum candies also okay so 2 + 1+ 2 will become five let's check the output yes for the test case it is five okay so till here I hope you understood the process now let's move on to the pseudo code in the SoDo code here n was equals to 3 and now as AR is the array I have taken to store the candies okay so please don't get confused now step number one one was what the rule number one to fill I mean to fill to give each student at least one candy correct this was the rule number one each stent must have at least one candy so what will happen here is fill this candies ARR 11 one rule number one satisfied rule one done okay now rule number 2 a for the left neighbor how to do that as I said the leftmost student doesn't have any left neighbors that's why we will start from the second student okay so that's why I equals to 1 so we'll be starting from here I is here 1 and two now is the rating of I greater than rating of i - one of I is zero and is 0 greater than 1 i - 1 is is one no so what will happen we will reiterate then because i++ now and then we will reiterate so now this is student last student is the rating of I which is two is strictly greater than IUS one of IUS one is zero yes it is so what will happen s of IAL to S of IUS one + one so left as of I minus one is the candy that this the left neighbor have right now which is is 1 then 1 + 1 = to 2 so that's why this part will become two and uh let me call these array instead of just candies okay because in the sode I have taken so array array and array okay so left part is done and 112 is here now let's try to run it for the right part right NE okay right neighbor so again the last student doesn't have any right neighbor okay that's why what would be doing we start from the second last student okay so again our I would come here second last St is here our I will be starting from here now if rating of I is getting of I + one okay what is the rating of i g is it greatting of I + one which is two no it is not so what will happen reiterate so IUS minus I would be here and then reiterated so again rating of I which is one is it strictly greater than rating of I minus one sorry + one of I + one yes it is because it is zero so yeah and this condition is just for the safe side okay because if you already have I mean the that checking for if he already have candies more than its neighbor now then we don't need to update it or add any candies because in the question is asked for minimum okay so that's why just for the saf this condition and then s of I of I + 1 plus one okay so then what would happen as of I is this as of I + one plus one so 1 + 1 it will become two so finally it will become 2 1 and two okay it will become 2 1 and two so after becoming 2 1 and two what what would be happening 2 and two we will be just counting it okay so total sum to take the sum okay in the count integer count variable 2 + 1 + 2 would become five correct that's what our output is returning five okay now coming to the time complexity part okay this took order of n this also took order of n okay so total time quity would be big of n even summing up also took order of n Only okay nothing more than that and space complexity because we used extra space to store candies okay and what was the size of uh that array same as the input AR so order of n okay so I hope you got it that's all for this session thank you [Music] everyone