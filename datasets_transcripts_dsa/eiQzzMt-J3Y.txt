if you want to master data structures and algorithms it is not enough to just memorize legal problems they're also really fundamental parts of computer science that you should try to master as much as possible just like any other topic that's why it's such a shame this is so many people approaching this topic by just memorizing lead code questions rather than taking the time to actually fundamentally learn and understand these topics sure memorizing some questions can work if you have an interview next week and you get a bit lucky but we might say that studying data structures and algorithms by memorizing questions is a very inefficient data structure and algorithm study algorithm so in this video i'm just going to describe what i am doing i am not claiming that this is the best the only way to do this but many people have been asking me how i am studying this thing so here it is so the broad outline for whatever i'm studying is this first i want to get a general idea of the topics because before you learn something you don't know what you don't know so the first step is to try to understand what you don't know i just get a broad list of understanding of the concepts and the topics that you will need to study as well as a very overview level basic understanding second step is to do a basic course or textbook to really teach you the fundamentals and do all the exercises that that book of course makes youtube and step three is to start applying my knowledge to real problems as you saw in my previous video i'm really have to believe that the only way to really answer something is to repeatedly use that information and to apply it and step number four which is optional depending on what you want to do is to now do an advanced level course or textbook on this topic to really go deep to go advanced step number five is to just keep applying the knowledge keep doing more and more difficult problems and continuously training your brain to really understand things by applying them in practice so in the context of data structures and algorithms step number one which is getting the very general idea is i essentially just went on youtube i think i watched this video i watched this video to probably this video as well you just get a very general idea of the topics that you need to know so after this point you will essentially understand which data structures are out there you've heard the names of tries and heaps and graphs and queues you roughly in a conceptual level know what they mean and you will sort of broadly understand why it's useful to try to find more efficient algorithms essentially you are at the point where if you are at a date with a computer scientist and they tell you that they'd like you to do a death search on them you'll at least know what they mean you might not be able to implement it yet but you'll sort of have a grasp of the lingo the second step which is where you really start studying these things is to do a fundamental course the one that i am doing which i've talked about a lot is zero to masteries eighth direction algorithms path zero to mastery is essentially this is really popular online portal where you're gonna do all kinds of different programming computer science courses created by this teacher who was really really successful in udemy so then he went on to create his own platform with his own courses you can start able to become a web developer you can study python advanced javascript whatever you want and i am the affiliate partner so if you do sign up below using my link i will get a small kickback but the reason i'm talking about them is not because i get kicked back i'm choosing to promote them instead of some other course because it is the one that i use and it is the one that i think is the best and these are the options that i personally use so there's a specific course that i'm talking about is this one called master the coding interview data structures plus algorithms i'm doing it completely it successfully goes through all the data structures some of the most popular algorithms and before that you really get to grasp big o notation which is super super important you don't have to choose this course but whichever course you choose it's really important to make sure that you like the teacher if the instructor is really boring like most of my university lectures for example you'll probably not be very motivated to study so that's really why i enjoy andre's teaching because he is just able to teach in a very engaging way at this point you might even be able to tell your day that you plan to use the dijkstra's algorithm to find the sword's path to love his jokes are pretty bad the only con with this course is that they probably don't make you do enough exercises but that's not really a big deal because then you can just move on to step three which is lead code elite code you've probably heard of it it's just this big online bank of a bunch a bunch of programming and coding disruptors questions and essentially you should start doing these from the easy questions as soon as you're able even while you're still doing the course from what i know for entry level interviews the level that you want to reach at least is where you're able to do medium problems comfortably i'm probably at the point personally where i am able to do medium problems but really to be safe you want to be able to do hard as well and they have whole sections for google interview questions facebook interview questions which are behind the premium payable i haven't got premium yet with them i think the free is fine for me for now uh but if i do end up getting leeco premium at some point i will definitely let you know and then talk about it if it's worth it for me but there is one thing that you absolutely must do if you actually want to learn the introduction algorithms if you don't do this thing you're definitely not going to learn them and that's to hit the like button down below this video if you enjoyed this video go down below and hit the like button science has shown that people who hit the like button on my videos are 700 percent more likely to actually learn data structures and algorithms and to get jobs at google you think i'm lying i mean what if i'm not i you might as well do it it's completely free to hit the like button so even if there's a 0.001 chance but i'm telling you the truth you might as well do it yeah seriously if you are entering these videos do hit the like button down below the video it takes you like one second and it really helps out my channel so do that and let's move on to step four which is going deeper this is really something that's probably optional you're really going deep into the theory the what i'm doing is robert sedgwick's algorithms fourth edition textbook yeah it's probably overkill it's this massive textbook like 900 pages that go really goes into the theoretical foundations behind data structures and algorithms like the fundamental maths behind it and all of that and to be fair to go even deeper i've already studied math for computer science before doing all of this so i have the mathematical background and now i'm studying instructors algorithms from a mathematical perspective long term if you want to be the best programmer the best computer scientist you want to have as much knowledge as possible and you want to understand the fundamentals even if you're not directly applying them in the problems you'll be doing in interviews so i'm of the belief that you probably want to do this but again it depends if you have an interview in two weeks you probably don't want to go and read a massive theoretical textbook on algorithms but if you're willing to take your time like i am i am really taking my time with this really understanding the fundamentals and everything behind it can never hurt i'm also doing the associated coursera course uh from princeton that one's completely free to do so if you want to go a bit deeper at least do the coursera course by princeton is part of my self-talk computer science path which if you want to know more about that you can go watch this video right after this one and yeah essentially i'm still doing that and after that and doing it i am constantly doing recall problems and this is really really i kind of emphasize how important it is because when you're doing these problems you're developing this pattern recognition ability the ability to apply these things to your blood into actual problems and to actually start seeing where you should be using a hash map for example all these things you might know that hashmap exists but until you've solved enough problems where they're supposed to be used your brains won't really understand where to apply it but once you're doing your problems you'll sort of automatically start seeing the patterns and on top of the code i am using uh cracking the coding interview you just sort of assume some foundational level of understanding of these topics so if you're a beginner i wouldn't actually starting with this i would consider doing a full course or something like that to get the fundamentals but then once you're actually studying for interviews the sections in this book are a really great way to sort of rehearse and to sort of remind yourself of the fundamentals but yeah essentially whenever i'm doing problems the best way for me to do it is i will try it first on my own and if i can't solve it in a reasonable amount of time i will just go to the solution or i will youtube the solution there's a lot of great youtube channels that do solution videos to a lot of legal questions i will look at it i will probably understanding and this is super important don't memorize the answer understand the answer and then just go apply that answer to the question but that is essentially it obviously you don't have to use any other resources that i use these are just the ones that i use if you do want to sign up for zero to mastery you can use my gold down below in the description get 10 off if you're studying these things as well let me know how you're doing it let me know if you disagree with something i said but at the end of the day none of this matters if you don't hit the like button below this video 700 more likely go hit the like button anyway the next thing you should do is go watch this video where i talk about how i am self teaching computer science i built myself a self-taught computer science degree gorgeous video next i give you a free notion template to track your progress