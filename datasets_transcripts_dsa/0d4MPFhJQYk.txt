so hi guys welcome back to code Explorer here I am going to do with you and you are watching this video as a part of our new playlist uh BSF full course here in this video we are going to talk about uh introduction about data structures and algorithms and we will talk about about the course path and then we will go into Russian fight okay so let's start the introduction part so basically uh this uh total playlist is going to be a refreshment algorithm complete code for you totally free of cost available on YouTube and uh in this video uh in this playlist I am going to share you the uh handwritten notes by mine and then I will share you the source code which I will write here okay and the prerequisition for this code will be uh basically true language I will prefer one is three and one is the password so the major part I will cover in free and some basic syntax of C plus stuff will become here and uh as I have already started and playlist to teach you a free programming language from beginner friendly level 2 and advanced level so if you have not any idea about key programming language then you can also follow the playlist uh where I will update new videos soon so you can definitely check that there you will learn uh the basically our C programming language from scratch to an advanced level okay and I have already told you there that I will make you a job ready developer and that is basically data structure and you have to learn data instruction algorithm so I am just starting this okay and this video is going to be totally placement preparation so I will teach you and I will guide you the whole data structure in algorithm basically you learn to meet to work in product based companies like Google Microsoft uh that's right so companies Okay so uh I have one more for a person I have to want to clarify that is that's why I am not using Advanced programming language uh basically like python JavaScript so the answer is uh that data structural algorithm uh you have to learn the basics and see where basically Dearborn language so you have to do all the things uh by your own Easy programming language I have already told you that and the video if you have not seen that so please go check it out so language and here you have to default all the problems by your own you have to handle the memory allocation for everything so it is why the C and C plus plus are the best programming language to learn the instructions and algorithms and if you are a beginner so you have to definitely uh learn C and C plus plus to learn DSA and uh if you are an advanced level programmer then you can choose python JavaScript uh this type of language to learn DSA uh and one more thing I want to say that in this video I will guide you and I will say all the things I will I have already mentioned you but you have to make a commitment that you will follow the whole thing and you will not skip a single step otherwise you will not able to understand okay because data structures and algorithms are not so difficult but are difficult okay so you have to keep in mind this so let's start the video so today we are going to learn about data sessions algorithms so I am going to type here so data structures and algorithm okay so basically what is data structures so data structure is a way to arrange data in our main memory or efficient usage okay this is the basic uh definition of our data structures that is data structure is an uh way to arrange our data in main memory for efficient usage here our main memory is basically our Ram our systems Ram uh that is uh as you know Random Access Memory okay so we have some examples about the data structures algorithm uh sorry basically data structure so uh I think you already used something some type of data structure basically like array we have we have linked list we have uh binary tree we have graphs basically these are the structures about data okay so um basically let's suppose array then link list then we have three we have graph basically these are our data structure so in this tutorial series we will learn this type of all data structure we have and uh now you have uh algorithm so what is algorithm so algorithm is nothing but a sequence of steps uh we used to solve any problem okay so what is data structure and what is algorithm first you have to need to clarify the vegetable data structure is the way to arrange data in main memory for efficient usage okay and algorithms are the nothing but sequence of steps to solve a problem okay so let's suppose yeah uh it was feeling sleepy and you want to uh take a coffee okay so what will you do so basically first you will take a can uh then where you will give water then you will add coffee water there then you will add uh so if you want to uh tweet copy then you can add sugar there otherwise you would you don't want to add sugar there so that is basically our steps We are following for which problem we have the problem that we have 50 and we want to uh uh that we want that we don't speak so why we want to take coffee for this problem you have to make this solution but when you are talking to a computer when you are talking with a computer will not understand this language that uh take a can add water add sugar and coffee powder computer will not understand that so computer will understand there's only thing that we are so we have to talk with our computer by the language what did and can understand so they can understand programming language like CC basketball JavaScript programming language basically in today's world we have approximately 700 plus programming languages now so but C is one of the most uh oldest programming language but one of the most powerful programming language so we have chosen this uh for our before so I think now you have got to understand you have understood that data structure from what for algorithms data structure is the uh way to uh store the data for an efficient usage and algorithms is nothing but frequency to solve this problem okay and I think that you have already moved from programming language that's maybe python JavaScript if whatever you know uh there you have used array so as you can see that I have written here uh that we have array you can see that we have array array isn't data structure so I think you know how to what is data structures you don't know what is the resolution but you have already used a digital structure and uh I think you have already solved in some problems that you have I think you have already uh added two numbers I think you have already uh added to arrays if you have done in programming language then the steps you have followed that is algorithm so if you have already written algorithm okay so now what we have to do data structure on the concept of data structures algorithms are nothing but we have to play with our data in an efficient way with the minimum memory uses and with the maximum um efficient way okay so let's suppose uh that we are using Google Chrome browser today so what is let's suppose that Google Chrome browser is written uh in Python and C plus plus and C so what is that uh the Google Chrome browser takes too much time to load anything first of all I want to tell you that how Google Chrome research works when you hit the icon of Google Chrome in your laptop or PC at the time Google Chrome dot that which is chrome.exe file basically load to your RAM okay so your Miram may be for 2GB to 32GB today we have so that's maybe but your Chrome browser first will look to your RAM that is your random access number which we will talk about main menu for now okay so when the Chrome browser.exe file will load there at that time what will happen at the time uh and you can uh start your own task but what is that Chrome dot exe files takes too much time to load at the time Google Chrome browser have too much uh competitors like Microsoft age uh five of Mozilla that is laptop computer they have and they will tell that come to our brother our vulgar is fast developers have to keep in mind that they have to play with these data structures and they have to write efficient algorithms which will uh take minimum space which will take minimum uh time to execute okay so it is why we have to learn about Data Systems algorithm we will go to our any product based companies like Google Amazon Microsoft booking four now one thing I want to tell you that what is uh but what is database okay now I want to write so database is not um uh required to learn data structures algorithms but uh when you are learning about data substance algorithm that means you are preparing for any interview you are preparing for job but there you have to put the company maybe ask you may ask you that what is database then what will you say they can ask you this type of questions also so database is nothing but a collection of information in permanent storage for faster with driver a patient and division okay you don't need to write this uh from stress to your notebook right now I will share the PDF note with you which I have already made for you guys okay so let me show you the what they are who I have already made this for you to as you can see that I have made this PDF for you guys so you can and I will share this PDF link with you in the description box so you can definitely check with you okay so uh database what I am saying about that database is a collection of uh information in permanent storage okay and for faster revisal updation and deletion here we have some type of data databases right like SQL SQL uh one is mongodb one is move SQL one is uh we can use that also uh okay so now I want to move to our next topic that what is data warehousing okay so what if that uh today I am giving you that a few very large data at that time uh the management of huge data uh basically a huge amount of data which is Legacy data for better analysis we use the data warehousing system so what is basically our uh Legacy data so Legacy data is nothing Legacy data data is our old data which we have used previous so let's suppose you are using Facebook right so Facebook Instagram so what they are doing they are uh let's suppose that your friend has uh some of your friends has uh with you in your birthday on Facebook okay so how Facebook can remind that Facebook will not directly store that data to your main memory but when you should want to analyze that data you can access them so that means we don't want to give them in our main memory because uh a huge amount of beta in our main memory will can fire the tower which will increase our space conditioning which will increase our time complexity also so at that time what will you do at the time we will simply uh erase the Legacy data which is our old data from the main memory and we will store it something where else okay this is the Skilling our uh Legacy data and we have to use that latest data form we use the Legacy data for analysis purpose basically okay so as you know that today data is the most precious thing in today's world so who don't want to lose any data and basically today uh when we are using chat GPT this type of AI this is artificial intelligence are the main source of their uh that is data so today we don't want to lose any data okay so this is why we just simply remove that data uh the old data from our main memory and we store it some somewhere else okay so this is our Legacy data now what is Big Data so uh one thing I want to say that analysis of two larger or complex data which cannot be built with traditional and traditional data processing applications are known as Big Data okay so you don't need to write this right now I have already told you I will provide the link a PDF link with you in the description box so you can simply check it out okay now I want to show you that how our um memory layout of C programs basically works so let me draw a picture for you okay so I am drawing a picture right now okay so let's suppose this is our Ram so what will I do I will simply right Ram here I am using the highlighter to write okay not a big deal okay so these are the ram let's suppose this is the ram so how our C programs basically work so when we write C program so we have to use the memory allocation by our own okay so this is why I am I using p and C plus plus to teach you this video attitude this data structures algorithm because here you have to do all the things by your own and this will basically clear your Basics your fundamental will be why I am using C okay so first thing what happens there first thing let's suppose I have another I will go another line here okay and I want to give it a name here which is code loading so okay so what is code loading code loading is nothing but when our code is being loaded in our Ram okay when you hit the let's suppose you are hitting these Throne application that means at the time the chrome.exe file uh has been loaded or Ram this is our code and now I want to move to the next step which is ah that is static and Global variables static and global [Music] you have yourself okay this is our next step which is static and Global variable so in this video we will not discuss this today because uh basically the static and Google variables are nothing but that is initialized and Anonymous data foreign now what will you do I want to create two more lines we have two more steps here in our memory that is that is nothing that is the most important thing you have to learn about so that is uh one is stack one is that and one I have Heap so one is deck and one is here so what is this diagram what is that and what is so uh let me show you the water is going on here um so when I will go to my desktop at the time I have in the programs okay this is my C language folder I have already created this and here I have the I am opening this with my physical Studio code okay and I will simply code this for now and I will also post it also so as you know that you can see that I have my C A 1c4 which is left on stack Dosey I have we let this file already so what is happening here as you can as you know when our sequel our main function is called Fast okay so what we like to do I want to bring this I want to bring this here and then I want to do I don't want to play this day so what we have so let me sorry sorry guys so I will simply take them here okay so now you can see that as you know that basically when RC compiles C code compiles at that time fast uh at that time first what happens first the main function has been called okay so when the main function will be called at the time here you can see that we haven't on school so that is another function where is the function two function is declaring we have declared this here so when the fund in main function will be started Institute at the time when it will start to execute at the time when the function will be called at the time this execution will be stopped and the funk will tell him that wait sometime wait for sometimes let me bring the value for me at the time and I will pass my value to you at the time and then you can exclude okay so at that time the function will go to the one so function will start with you and it will get a value of p and it will get an envelope Q which is another variable which is function so at that time function will be called back so function will come and it will tell to the function that okay let's take some rest right now let me go and bring the values from mind which I have which they have defined in inside of me and then I will pass the value then you can start to execute okay so this is the basically structure of MC programming languages okay uh C uh code execution okay so what will happen so for now no I don't need this okay so I will play and I want to print this here okay and I want to bring these also here because I have to write something there so what will happen first it will create another uh take some space here when the main memory Min uh function will be called what will happen here when our main function will be called this is our main function now this is our main function have been called when our main person have been old at that time there you have seen that we have our func to have been called so what will it do it will simply save to this main function will simply tell this main function that wet let me go and I will print the final control then you can start with so then Kung Fu will go to start execution so what will happen then at the time Funk 2 is starting to execute and as you have seen that when Kung Fu has been started to execute another time there hunk will get another function which is part one so when Funk 2 1 will be called back at the time Frank one will come and fail to uh Funk 2 to wait for sometimes and it will start with YouTube and it will bring the value for him and I will give you the value then you can practice it so now our function has to come so let's bring our Funk one so now our Funk one has been completed so now as you can see that when our function has been when password main function has been called at the time what is happening here so basically this is known as uh factoring or application report inside the stack portion of our Ram the code basically uh when the function is gone at that time it passes back frames okay so then uh when our main person will be called then it will call back the function will start to execute and it will be at its own function it will gets its own stack frame or you can stay say it activation record also and then it will uh call back this one function and function will come and it will create its own uh function it will create its own um stacked him okay now what will happen so when our function has become now our function has been come and it has been successfully executed the code so let's see here that a we have initialized a b c d e f and what are we doing here so we have been applicable the value of a we have declared the value of B also and then we have started some mathematical operations here so c b e would have defined that and then we have defined that it is visible C into B plus e and then we are written if so when function will be executed at the time it will return F and this F will come to this uh Funk 2 and when this funk to we come and found one value will be rooted there and then it will start to execute again and when these uh value we have come here then I will be starting to Institute which will be P by q and then we have written the value of r okay so in the main function it will return the value of R and then inside the main function the inside of our M variable the functions value will be printed okay so let's see once so as you can see uh the answer is 201 so if you want to check but step by step then you can also check it step by step I will provide the reflect reflect link of this code and I will set the source code with you if I wrapped it so inside the description box I will check the link you can check that out there okay so now let's suppose that of Hank one has been here pump one is returning our F so what will happen when Franklin was will return his value is at that time it will go this will go okay this will go now has gone so now we have function so when hunk 2 will take the value of punk 1 at the time it will start to execute again that means its execution will be resumed and when it will exhibition will be completed at that time it will also remove from the stack to our Funk 2 will also go back from here so Funk will also back now we have our main function so when our main function will take the value of pump two at the time it will track its execution what happens it will resume its execution at the time the value final value will come and it will also on so that means when basically our C programs uh have has been started to execute and it will complete the execution at that time what happens at that time it's happened that uh uh it will return the ram empty okay this happens and now what is heat so as I think you have already learned about back so what is Heap right now so in C programming language uh we have and pointer basically so okay so I want to write something here so let me write [Music] um uh I have not written like this so maybe this caused some problem but I will provide the links PDF with you guys so this is showing disgusting so I have to just simply remove it and I want to bring this okay and I will write you that is easier for me so we have ETF for uh we have PTF which is basically our Point app and what is that we want to we want uh let's suppose we are wanting to create an array of four integers so basically hip memory is used to store any data dynamically so now what is basically dynamically so let me show you first so what will happen I want to create an array here okay so let me create one so when we will create this array which will take four integers what will happen will be taking less support for integers okay so at that time when this will take this as input this pointer with this with the help of this pointer with the help of this pointer we can access these so this is the main function main work of all pointer okay so this is uh how we use this pointer okay so pointer is another function defined there to allocate dynamic memory so in our free programming tutorial series I will definitely teach you that what is pointer so don't forget to follow that now I want to give you a quick Syntax for this uh point or something so I want to write 10 function for pointer that how we can use this so uh let me write comment out that pointer so how we can use the pointer so we have to Define an integer which is a pointer and we will use semicolon as you know then we have to Define pointer so pointer will be nothing but it will take and install and as you can see that this is look what is going on okay so install and then we have a good and malloc function so malloc and then we will do and we will use the size of an integer and we have to copy that you know and then we have to terminate this using semicolons so basically this malloc function is used for the wrong with it okay sorry how much I have not defined that so I want four integer so this thank you so it is still string error but why what's wrong with you Google so basically this is not calling any function okay so we have not defined that so this is basically the syntax open uh pointer in C okay so let me pointer in C and now I want to show you that how we can use this in C plus plus I want to make this comment totally now basically inside of our C plus plus we have to make the same in Media you have to initialize this and then what we will do we will simply call a new function okay so basically a new function a new operator will be called new in and then we have to solve 4. basically this is the syntax of a end pointer in C plus plus so I will also teach you this also so don't if you have not know if you don't know this so don't worry I will teach you uh you can all you have to just simply follow this uh tutorialist I will provide this inside of the description box and also in the I button too okay so I am using this pointer function we can access this heat memory okay I think you have got the point okay so now why we need to request the dynamic memory okay let me show you that I want to give you an uh example suppose uh uh you have um 10 Rupees let's suppose you have 10 Rupees but you want to buy a pin which is both of 20 rupees you don't have not going to rupees right now so what will you do you will simply lend 10 Rupees from your friend this is what we are doing here here we are doing this using the pointer function using this pointer we are accessing where we are lending this thing we are Lending this is the simple Landing okay so what is the benefit of this Landing okay so we can access the we can access the using our stack also we can also we can also create this before integers uh array inside of our stack also but what if that we have and left for both 2 to the power 10 numbers uh integers inside of an array at that time if we uh want to insert this instead of our stack memory it will display space until we call back the function that means until the code will not fall back function will be not called back at that time till the time the array will be there but if you don't need that then at that time that time we have to use this dynamic memory allocation system which is our hip memory we have to use this pointer computer so here what we are doing we can use this heat memory to store any data for any data and here inside of this what will happen we can use these uh whenever we want and we also can delete this also after where we don't need this we can simply tell the heat that we don't need this right now to delete this this is too simple okay that means our code will not be so complicated and it will not take some too much memory also okay and it will be fast and it will be 80 0. this is why uh we have to use this hip so I think you have got the point I will share the link I have written all things for you guys so you can simply access it and uh one more thing I want to say that uh I have already started too much playlist uh basically I have already started Phantom 4G content development tutorial series basically that is uh HTML serious JavaScript tutorial series and I have also started C program tutorial series and I have also started on programming uh competitive programming series also so basically I will recommend you to view all the video my simultaneously together that means I will share uh let's suppose I will share maximum food videos okay this is why because I have learned like this that I have learned today uh I have learned by doing this that I have one sided I have learned front-end development one side I have a back-end development and at the same time I have learned also the data system algorithms so this is why I am also telling you and I am suggesting you that when I will take a new video you will get the notification when you will subscribe my channel so if you have not done the Subscribe hit the Subscribe button here then please subscribe my channel so what will you do uh I will post a sequence I will post a video in sequence and like that uh when you are trying to learn something new you I know that you have limited times in a day I have a limited time also if it's 24 hours inside of this 24 hours I have to sleep we have to eat we have to we have some entertainment we have some other ones also so our study time is totally minimum let's suppose so how we can use this minimum time and how we can get the uh maximum output so this is how we can do we have to learn the all things simultaneous okay so I will post uh let's suppose we have now uh three topics one is this uh front-end projects one is this data suction algorithm and one is more and the four topics one is C programming tutorial and one is uh front-end development tutorial also I have so I will share this like a sequence you can follow them and every day I will try that when I will make two videos okay at the time you will get a competitive programming uh solution okay so this is for today so hope you guys have learned uh uh if you have uh if you if this video uh has provided you something value then please subscribe this channel because I have committed to you that I will make you job ready and I will make myself also job ready because I made videos to clear my Concepts and I want to I belongs from West Bengal India okay and I am a Bengali so Bengal is my native language and this is not kinetic language so this is why I am using English only I am not using Hindi it is why because I want to ruin my English skills okay so maybe I am saying something wrong but uh I am that means I am telling something wrong in English but I want to uh uh modify myself also so I think we can do it together so if you want to learn together then please subscribe this Channel and hit the like button and leave a beautiful comment for me that what can I do for you and what types of videos you want uh what types of content projects you want so I will try to bring that type of video and today what we have learned I will share all the support with you guys in the description box so please check so I will see you in the next video that means the next day tomorrow so till then stay safe and happy coding