guys welcome back to the channel so guys inshallah today we will cover about our first data type uh sorry our first data structure that is called the link list okay uh in last video we went over to we discussed um data structures okay what I what is the data structures and why there is a need for the data structures so today inshallah we will cover about some more data structures okay and it starts so this is the outline for our today's agenda I'm just moving one by one to the next one to give you the sense okay so first of all we have statistic static versus Dynamic data structure what is what are the both ones static means that any arrays the structure of the fixed size okay that each element will be efficiently stored in this one advantage is that these are the some theoretical things static means dear static as a word itself static means fixed okay what is the meaning for fixed one which one means once you have defined the number of elements you will never change okay once you define the size you will never change in the program that is called the fixed data structures now what are the dynamic which you can grow or Shrink according to the demand okay which you can grow on or Shrink according to according to your demand or according to your requirement in the program static includes let's say array these are one classical example for the static data structures and for the dynamic we have a very modified form for this array one which is called array list this is a modified form for the array okay so static means that once we Define okay we never change okay once we Define the number of or once once we Define the size we we never change but in the dynamic we can grow ocean according to our requirement okay so an array is the structure of the fixed size that I record that each element can be efficiently located by indexes array array concept uh guys if you remember array contains the indexes this is how we Define an array okay array contains the list is uh sorry array container indexes this is the zero Index this is a one Index this is a two index same life for the other ones okay advantages of quantities allocated array includes constant timer says given uh the index array constant consists priority of data so no space will be wasted with other links or formatting information we remember array always store the same data okay this is a very important difference between you if someone says why we use the array okay or array allows the different data at different data types you say no array only contains the same data structure you cannot store in an in Array every integer with slot number let's say you are stored in one and you are storing 0.1 this is not allowed you only store either the integer or you store either the floor okay array is basically consists of a what is it called array consists of same data type okay address purpose is to contain the same data type okay so this is how your static versus Dynamic data structures next we are moving that is what we call the arraylist array as we discussed at what is array array means uh once we Define the number of sizes we navigate let's say we defined an array for five okay we have defined the size for the five let's say Five Element can be stored in this array let's say array have one two five elements I have defined we we defined here that array contains only five at five verticals or you say five yes okay so once we Define the number of size we never change in the program okay this is the big disadvantages of array okay let's see if you have to find the file size add you store and your requirement is let's say when you use the things and when you finish your program you think that you only require the three spaces it means that two spaces will be wasted okay you need three you need three spaces these two will give a state because you never change now size this is a big Advantage is that a lot of memory will be wasted okay so arraylist is the modified form what is the arraylist arraylist means that you can grow or shrink the size of an array okay of an array list okay according to your let's say install you define the five at five that is sizes twice but when you are quoting okay you think so that you only required three okay so it means you can change the size this is the difference between the array and the array list so error list is basically self resizing array okay it will be resized in other words a dynamic array dynamic means that you can grow or shrink the size according to your requirement this means that the data structures can grow as much as if needed as compared to the classical static array which cannot because it has a predefined maximum size yeah what it is saying it's saying that's in simplerly once you define the number of size you never change throughout the program but in the array list the big advantages of array array test is that if you define the number of size three uh but uh you think that in last you need the five size so you can change the size so this is how you can grow or strength according to your requirement but arrays array will not allow this one to change the size this is not allowed in the array that's why we use this arraylist this is a modified form of the headache okay the need for this data structure is most obvious when you have urge to store item without knowing that how much space you will need in advance let's say I already explained that you are not familiar that how much amount of space you require to store this one let's say you roughly guess that 20 let's say empty space is required okay let's say use post but uh when you executed the things you the the your guess was wrong that's it beautify the 20 empty size in Array okay uh you think so that the space you regard is 20 MB but when you executed the things yours was your guess was was wrong okay and about our space is in a while let's see 60 MB so if you divide in an array you cannot change the size you cannot change this size okay you cannot change this space but let's suppose if you are using the arraylist you can change you can change the space okay you can say you can change the space okay and adjust according to your demand okay or you can grow or you can shrink okay let's say uh you you define 30 MB install but in the last you only need 5 MB so you can shrink the size as well in Harris but in Array this is not enough so this is the differences between the array and the error list this one this is the errorless example let's say these are the digits let's say 24 69 726 and here zero zero zero let's say now we need to add something these three species are empty okay and here this indexes let's say 0 1 2 3 4 are fixed okay but we have the total size that is called the seven that we can store seven in it okay so what we need to do if you want to remove someone okay or you say yeah if you want to remove someone let's say you want to remove this thing so what you need to do you add other elements okay you can remove this one okay the rest will take this place okay 91 9 and 91 okay 97 and then now last will be the zero last phase will be the empty okay because this element you already removed so this next one will take this place this will take this place and this will take this space and same like this last will left same like you can resize the elements as well okay you can add that event so you can remove the elements in arraylist it is very easy but in Array when you are removing something it is very very difficult okay because as I told you that array contains indexes let's say you are removing uh let's say this is the elements including in the array and you have this index 0 this is X one two three let's say you want to remove this index one this once you define remove this index work in this place now you uh you cannot score another element okay you get no store element this space now will be wasted but in the array list you can move that the elements here okay and you utilize this space okay so in the array it is not allowed so next thing if I move true that is what we call yeah that is limitation now arrays we know we know very well arrays are simple and fast because it contains the same data okay if we have the same data type then obviously the that thing will be simple and fast so array arrays are simple and fast but must specify size this is the big disadvantages of array that you must specify the size at the construction Target means at the Declaration time you must uh specify the size that what size what size you require of that array okay according to the Murphy's law that construct an array with the analytics and twice with the largest production yeah these are the advantages but the big disadvantages or big disadvantage that you must specify the size okay at the time of declaring okay once you define the five size it will never see this is a big picture this advantages that you never change the size of the arrays Y in arraylist drawn in English don't use that okay you can change okay you can change the size so this is a big limitation of arrays so let me move next yeah then what will be the result then arraylist is also more modified form of array but in modern in today's we are using the link list therefore there is a need of the structured that dynamically allocates this is for each elements as needed okay that is what we call the linked list linked list is basically a data structure which can efficiently stored okay linked list basically consists of the nodes okay it consists of nodes [Music] the sizes as well okay add very big advantages that insertion and deletion is easy as compared to array okay if you are adding or removing something in an array it will be very difficult for you but in English it's very easy because this contains the addresses okay every linked list is combined and connected with the addresses okay our pointer is used for address drawing okay pointers is a big advantages of the link list is that it contains the pointers okay pointers actually store the address for the next uh number which is stored in the link list which is stored in the node so it is a big advantages so we are now moving to the link list one by one so link this now link this basically remember our link this is a linear data structure okay and with the elements are not stored at contagious memory location that it is not guarantee that let's suppose when stored here one is stored here at 2 will be stored here no maybe here three store therefore let's say here seven and here then two is two okay so it is not necessary that each elements are not stored okay in which the elements are not stored at the contiguous magnifications okay the elements in the dentist are linked using pointers okay as I told you point is why we use a point is because pointers contain the address it notes means that this this is how link list works this is how linked list connects with each other okay and we will cover in the next things that only this contains other things uh the data okay link this contains the data and the next this next is basically represents pointer this data part contains your number and this next one actually contains the addresses for this next data same like this next contains the address for next data okay so pointers entity that point to represent the element in simple word a link list consists of the nodes these are basically the nodes okay I think this consists of the nodes where each node contains a data field and the reference thing that is used to call the pointer to the next to the next node in the list okay so this is how your linked list uh the proper definition for the name list list can be visualized at the chain of the nodes where each large foreign this is how your link is looks nice I am drawing it here let's say here uh this part is called the data part I'm just representing data and here this part is called the pointer pointer contains the addresses for the next one same like here what is it called here it contains the data and here it contains the pointer okay same like this it is consists of the chains okay so as per our illustration forming are the importance points to be considered as you see if the picture is clear this is we remember there is one head pointers in the star okay head pointers in the star this is the head pointer which represents the link list then we have here data then here we have the next hold appointment okay next to the pointer same like we have the data and the next and in last when your node is and then we have I think null yes contains a link uh link elements called the first Peak links carries the data fields and the link called Next each link is linked with this next link uses uses its next link and the last thing comes these are all things that how your link list is made on okay how your chain works so this is all about that so if I want to move next we have yeah working of the working of Link list how your link list works okay link list consists of the notes where each node contains a data field this one okay data field on to the next one as I told you this is let's suppose your link list this contains the data part here let's say number I am just writing a number let's say here 10 is a number and this part contains the address for that for the next uh sorry uh next number okay it contains that does see this is what we call Point here what we call the next as well okay so node link object e node consists of the two parts data and link to the next one next is actually contains the address for that one okay next is points to the next node in the linked list since there there are nodes to uh they are not stored in the continuous frame vegetation okay why why we use the point the reason is that because we are not sure that the next element is stored in the contentious position or not let's say that 2 is not stored in the Cottages capacity in this linked list we store let's say one and it contains that's it it is not containing added let's say 2 is stored here okay two is stored here and here in between we have three in here we have five and here we have so if we use the pointers then it is very very clear to us and very very understandable to us that if we make if we give the address for that one in this uh in in this pointer then it is very it's very easy for us to find the two elements that where it is located or where it is stored in the map so this is how your pointers helps you to find out that where the element is stored in the Cottages uh where the elements is stored in the lab so this is in this way that how your linked list helps you okay point just so it helps you next thing we have that is what we call operational same like in Array when we are adding our social notification okay let's say adding this is called the head pointer first of all we have the head okay we have the head node it contains the 24 as I told you this container data part and this contains the pointer same like its points to the next one these parts contain this pointer contains the address for this number okay this is the data part this is the same pointer uh address bar same like this pointer now contains the address for this one as head node has had node doesn't contain any address we remember or doesn't contain any address okay so it is contained same like they are as you see in interconnected with each other okay now we move to the next one and we need to need some more clarification on it so instead how you insert a node let's say you uh you have this one you have this one and you want to insert A7 in it okay you want to insert seven in this one 780 let's say not included so how you do this okay I'm just drawing for you let's say this part contains 24 and 24 contains some address okay let's say here I'm just using the dot it means address same like uh we I have the next number that is called let's say I'm taking 13. and it also contains some address now I want to add this seven so how I want to add this 7 this is also present uh sorry I want to add one zero four so how we need to add just put one zero four here and give the address to that one that's the about 30 this pointer contains the address for this one once you add 1 0 4 then connect with the last one with the seven now this seven contains no more adjust because here your link list has ended so this is how you add 1 0 4 in this chair just assign that number just assign the address of that number to the pointer so pointer automatically indicates that where you store 104 km so this is insertion and deletion I told you before it's very easy index okay as compared to array so we need to now go next one yeah remove that how you how you remove the elements let's suppose you want to remove this 69 it's ready it's very very easy I'm just drawing it here a little bit for you so you people understand let's see here this section contains 24 and this is the pointer address and we have this 69 and I will draw this again when I remove this is 69 and here that's it contains the 7. okay all right and this one contain no address because here our pointer has closed this is called the head one okay the first node is called the head one okay or it contains head one also this one this is how it's connected okay this is called the head one is not okay so I now I want to remove this 69 how I can remove same like I use the head as it is 24 and now what I need to do I just assign the address for 7 in it because I want to remove the 69 so here it contain nothing so what I I just removed this and this pointer now I gave the address that I gave the address for this portal of Sam okay I assigned the address of this 7 to this pointer so that's it and now it's what so now this 69 has successfully removed from this linkage so this is how this link just works then we have if I want to post I mean tab okay here one we have some operation on the link list we have you can also Traverse a list okay append a new node to band okay inserting everything is very easy okay we have this one data one this is a simple head everything is very easy okay you just have to remember that the link is consists of the data and the point of power pointer contain that addresses for the next number okay and data contains the data section simple so this picture is actually represents.com then we have yeah these are some practice questions okay so things are very easy let's see this link list is 10 15 20. I'm just drawing it here if it yeah I'm just trying it it contains that linked list contains 10 50 20 and 24 and we need to add 5 in front in front means that we want to add the 5 in start of this language so how we add so as we know it says that add 5 in front of that also I'm starting from here so 5 I added in front and now 5 contains the address for the 10 this is now 10 and now 10 contain the address is 4 like other ones 15. and 15 contain the address for the 24 and 20th contain the address for the 25th and in 25 there is no address so here we call the LA load no address okay so this is how you insert the five in front of these numbers 1 10 50 20 and 25 same like if the given link uh link this address is 5 10 15 20 and 25 and we want an item 30 in the hands what we need to do you just add here now this is not enough because the next thing it is present so you just add 30 about 30 section is black because it doesn't contain any other so here this is called the null one okay it contains null address no address okay same like if the keyword name address is 5 10 15 20 and 25 and we need to add 30 after 15 it means that we need to add 30 years so what we need to do just break this one and now make with this 30 here now once you define 30 year now assign this pointer address to this one instead for this one okay just remove from here now first give address to this one now this pointer contains the address for this trend so this is how you connect the list sorry you connect the node between 15 following this version of 10 5 10 15 10 30 10 20 10 is 15 and then this is how your doing this works how you add or insert these things so guys I hope so these things understand it to you that how the link list works okay then this versus arrays advantages of doing this over there is dynamic size and ways of insertion and addition these are the two major flaws in the array that's why we consider this one disadvantages of linked list using random messages is not allowed to be obviously there's some decide what is every we remember that the data structure which you are using every data structure has its own advantage or disadvantages like array we have some disadvantages but we have advantages as well that it is simple and it's false for execution same like if I talk about the link list that link list sorry array arrays advantages that um sorry deletion is very easy as compared to RS while on the other hand if I talk about the disadvantages of Link list is that random access is not allowed okay extra memory space for the pointers obviously no uh node or a linkless consists of the data plus the no uh plus the point is so you need to give an extra space for the pointer as well no cache friendly no cache friendly means that elements are not stored in the continuous position let's say one is suppose one is stored in start and that's it who supported as is stored in last one so this is how your random access code locations are not present okay and linked list as compared to add a while I reckon test stores the element in the quantities position okay you uh yeah that's fine so this is how your link list okay then we have some type of link is simply AWA Circle but we discuss these things in the next lecture so that's all about we discussed about the linked list that what are the limitations for the array then why we use the link list everything I explained and how you insert and delete the link list so guys that's all related to the link list data structures very very easy guys you just try to keep the concept in your mind that howling this consists of guys meet your next video If you like this video can you do like subscribe and share me to next video take care