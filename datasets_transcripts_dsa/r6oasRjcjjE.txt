so good evening everyone okay welcome to durasoft welcome to durasoft online training sessions welcome to durasoft online training sessions myself K prakash Babu having 16 plus years of experience as trainer as a trainer I have 15 16 plus years of experience let me discuss about this course details then we will go for syllabus explanation and then I will give root map okay I will provide root map for this course coming to the title of this course what is the title of this course already you know very well it is nothing but what data structures and algorithms data structures and algorithms with which programming language python in short form it is called as DSA with python sir successfully I completed five batches in our doft this is nothing but sixth DSA with python batch okay sir what about duration of this course the duration of this course is nothing but around five to six weekends five to six weekends will be there means what the sessions will be only on Saturday the sessions will be only on Saturday and Sunday so the people who wants to attend regular classes know this is not regular batch sir this is the weekend batch okay every Saturday and Sunday we are going to take this sessions sir if I want to attend these classes what about the timings of these classes sir very simple the timings of these classes is nothing but sir evening 6 p.m. okay 6 p.m. to 7 p.m. 800 p.m. 900 p.m. okay so 600 p.m. to 9:00 p.m. around 3 hours sessions will be there but in that minimum 2 15 minutes breaks I'm going to provide approximately you can consider 2 and half hours full-fledged session will be there okay please make your schedules available from 6:00 to 9: every weekend Saturday and Sunday we will be having class from 6:00 p.m. to 900 p.m. sir this is nothing but the timings of this session sir what is the fees for this batch rupees 2,000 2,000 is nothing but fees where you are going to get running notes where you are going to get running notes plus recorded videos recorded videos will be having six months access that means what once if you register from that day onwards six months validity will be there for this videos okay videos in the sense whatever okay whatever uh classes we are taking okay those classes videos recorded videos they will upload so especially when you are taking other courses like maybe Java or python these things are very easy almost similarity will be there from the languages which you already known but data structures and algorithms is not such a type of category compulsory so after attending Saturday's class this 2 and a half hours video compulsory you have to watch in the Monday morning itself before coming to the Monday evening class and whatever class we are taking on Sunday that you have to watch in the next day or sir in the first weekend whatever content we are going to cover same thing better to refer before coming to the next class of of course there won't be any continuation there won't be any continuation sir uh one second some people are asking the questions I will I will give answers for your questions uh after clarifying the syllabus okay maruti uh sir can you please confirm is my voice is low everyone can you please confirm is my voice is low no sir clear right yeah yeah Rashmi Rashmi please cross check from you end maybe the problem is from your end okay right this is nothing but fees structure what we have sir if I want to register for this course to whom we need to contact I'm going to give two numbers 9642 212143 this is one number or you can contact to durasoft online durasoft online training at theate gmail this is nothing but what we have sir okay this is nothing but course structure what we have sir anyway I'm going to give this today's session tomorrow's session so today and tomorrow today and tomorrow are demo sessions means what without paying the fee you can attend today's class and tomorrow's class what is the purpose of demo class sir what syllabus content I'm going to explain that I will I will give in advance next and after that how the way of explanation is there those things you have to monitor in these demo sessions because in which style I'm explaining today and tomorrow the same style will be continued in our upcoming classes also okay this is nothing but what is the main purpose of this demo classes okay so I hope uh you people got some idea about the structure of our course what is our root map every weekend we are going to have the sessions from 6:00 p.m. to 9:00 p.m. don't make any schedules if you want to register for this course please make that time available okay sir if you are clear with this I will start explaining the syllabus okay someone is asking uh what is the fees structure for regular uh DSA with python regular DSC or weekend both are same sir okay there is no differentiation with respect to fees also same fees will be there but as of now there is no regular batch we are having weekend batch only okay that's all nothing more than this okay the difference between regular batch I mean weekday batch and weekend batch is so in weekday batch every day we are going to take one hour sessions right so if you say 5 days will be there Monday to Friday how many hours of class we are going to get 5 hours in this weekend Saturday 2 and half hours Sunday to and half hours whatever content I'm explaining on weekday batch the same content I'm going to explain here except that there is no difference sir in the syllabus there won't be any deviation everything goes fine okay now if you are having any queries related to this course and timings all these things you can ask the curriculum I will explain later any doubt printed PDF is not there because Mari from the batch to batch see at very initially in our duras soft only with this low price with clear explanation these classes are there so if you take other training institutes Frankly Speaking if you want to talk about stack one hour they are going to spend they will close that particular topic okay but here that is not the case the stack data structure we are going to take three hours session so that much low level to in-depth knowledge we are going to provide so that if you are very strong in the basics so you can able to solve any kind of realtime problems whenever the application of Stack is going to come that's why so batch to batch I'm going to add some problems and I'm going to remove some easy Concepts like that that's why I didn't prepare any material for this data structures and algorithms with python as well as for Java okay but don't worry this running notes as it is you are going to get clear Mari uh examples of coding problems very good question actually uh see this course majority of the students are going to feel like it is a problematic course but yes of course it is a problematic course but if you want to solve the problem if you are getting any program like suppose I have factorial program is there we can solve that factorial program in N number of ways okay so if you want to solve compulsory programming language knowledge must be required sir there are some realtime areas are there where you need to apply some techniques like divide and conqu okay some like a recursion to improve the efficiency of the program sometimes processing the data suppose if you take bookm show application so it is using something like Q data structure to process like we have different different scenarios are there sir if you want to understand that theoretical knowledge must be required without knowing theoretical knowledge we can't write even a simple DSA program also that's why our main concentration is to explain the data structures concept from low level to the next level that's why in the coding problems we are going to give less priority okay but of course definitely one complex coding problem I'm going to solve in each and every topic if you take stack one complex program minimum five to six examples will be there for every topic apart from that one complex code I'm going to explain suppose still if it is very complex I'm going to to prepare that video and I will share for that you people got it Mari clear and one more thing I forgot to add sir prerequisite okay so prerequisite for this course is nothing but what compulsory compulsory python knowledge must be required can you please show some uh notes of the course yes sure I will show you sure I will show you e I have joined lit can you please tell me how many months of the course will be completed it will be completed by six weekends starting from next weekend not from this weekend you can see the running notes will be like this if you take tree data structure a separate notes I'm going to provide like what is mean by tree how to represent the tree what are the different uh terms that we are using in the tree okay so even we are going to see the implementation of the tree complete program complete program we are going to draw okay next and after that binary tree means what so next and after that binary search tree means what how it is going to work okay next and after that AVL tree okay so all these things will be covered here like this with the help of program I'm going to explain each and every operations for everything I'm going to explain with diagrams because diagrams are the very very important in this DSA you can see what is mean by tree how to represent the tree then you can see how we are going to represent in in order pre-order post order okay like by taking different examples how to represent by using double Linker list sequential representation binary tree means what okay you can see so all these operations we are going to explain with the help of examples so so each and every code I'm going to draw the diagram parall I will show you because this is very very important rotations in the AVL trees okay how you can able to rotate everything with the help of examples we are going to see like not only for this topic for every topic if you take a stack data structure so how you can able to insert from the bottom generally uh stack means what whatever objects that you are storing it will be always added at the first I don't want that I want to add at the last so how you can use what is the mechanism that we have for that okay like parenthesis how you can able to balance the parenthesis like in detail information will be there clear who asked this sua I hope your doubt got clarified can you prerequisites python core or Advance sir for and Advance both sir because we are going going to represent the linked list in the form of classes that's why that knowledge must be required even if you don't have no issues uh if you can able to understand at very beginning first time when I'm using I will give 5 to 10 minutes a lecture on that and then I will start suppose if there is a use of Constructor I will speak five minutes about the Constructor then I will start so if you can able to understand then okay but in detail if you want about The Constructor this is not the course for that got it sir yes sir then can you share the running notes document or no no you are not required to not own anything just with Pleasant mind take a paper and pen and sit along with me for this weekend whatever I'm trying to explain so whatever there in your mind try to write down okay don't write the notes so the diagrams the concept the logic those things you can write sir later anywh I'm going to share this document as it is with you so while watching the video try to prepare your own notes okay so anyway the theoretical points will be added program also will be there in the notes but in your hands if you are writing then it will be easily stored in your mind that is my intention okay anyway I will share everything don't worry sir recorded lecture will be provided or not yes I told right recorded videos also will be included sir if all your doubts got clarified I will start explaining the syllabus what we are going to cover here can I start yes sir right sir coming to the syllabus coming to the syllabus H yeah you can you can uh unmute and you can speak okay no issues hello good evening sir good evening s tell me yeah sir actually I am currently doing DSi in Python there is a m' in my University or she teaching as P their Tech she explaining each and every topic with the help of what is the of will be as example when she explaining St then she is saying what is theity of push operation or pop operation and what will be the approach sir what is your teaching sty so here also I will explain you'll get clarity so here also for every algorithm we are trying to measure time and space complexities see if you want to understand the time and space complexity compulsory 100% proficiency must be required in the programming language as well as in The Logical thinking if if you don't have these two things you can't write an efficient algorithm but we are at very beginning stage that's why what we are going to do is how to measure the complexities I will explain because it is a completely theoretical measurements then while write any function how much time it is going to take orally we will demonstrate so calculation of time and space complexity is a separate concept design and Analysis of algorithms the people who are coming from btech background they can understand there is one subject called design and Analysis of algorithms or analysis of algorithms there they are not concentrating on the coding area they are concentrating only on what is that algorithm how it is going to be expressed what is a time and space complexity by by using recurrence relations they are going to calculate but this is not that course but for every algorithm definitely I'm going to explain what is a Time taken by that particular algorithm got it okay thank you sir right sir some python Concepts will solve I didn't get some python concept will you solve oh yeah yeah definitely but if it is related to our DSA definitely in weekend batch complete topic as normal batch called yes I already told Rahul ready so whatever topics we are covering on regular batch same thing will be there on weekend batch also the only difference is we are spending more time here beyond that nothing okay so let us explain the topics like syllabus syllabus for DSA DSA syllabus DSA syllabus so DSA with python syllabus what topics that we are going to cover let me list out the topics sir the first topic Okay so I already told all these things again why you people are asking you can see so 6:00 p.m. to 9:00 p.m. 3 hours session will be there okay clear mahinder C sir yeah right next sir here the first topic as you know very well we are going to talk about introduction to DSF sir what is mean by data structures what is mean by algorithms how to represent the data structures how to represent the algorithms like in detail explanation I'm going to provide for this course like there are different classifications are there in the data structures algorithm means what how we are going to write the algorithms okay so uh next and after that what are the different characteristics are there for the algorithms properties of the algorithms types of algorithms like somewhat little bit theoretical Concepts will be there here in the second part sir um maybe we are entering into the programming domain some people may don't know anything about programming in Python that's why what we are going to do is we are going to cover some sample okay so basic python programs some sample basic python programs basic python programs we are going to cover basic python programs around some 20 programs to get more clarity some people may ask sir python programs why it is required here because if I'm explaining factorial how we are solving in Python so later in the recursion how we are going to solve you will get clarity such type of programs only like fibon sequence for triono sequence these things we are going to use in the dynamic programming okay as well as backtracking so such type of things we are going to cover here at very beginning so to explain the basic python sir I'm going to cover some 20 programs by covering each and every topic in the python then I hope you know already in Python there are some inbuilt data structures are there so python inbuilt inbuilt data structures inbuilt data structures sir which are inbuilt data structures like we have string is there list is there tle is there set and then dictionary we are going to spend 2 and a half hour to 3 hours of time only for this third chapter like what are the inbuilt data structures available we are going to discuss in detail about the string data structure list data structure tle data structure like indepth knowledge must be required in this if you want to apply the functions in future classes that's why I'm going to cover this particular topic of course it is there in our python as well as DSA with python okay like Java we have collection framework is there right in the same state so after that we are going to see sample okay sample algorithms under implementations we are going to take some sample algorithms and we will Implement that Al algorithms how it will be okay so here also we are going to cover the programs only so next and after that we are going to talk about array module actually there is no concept of array in Python why because in Python you know already list means what a group of objects will be there in the list but the problem with list is it can able to collect different types of objects but ARR means what similar type of objects there are some situations where you have to use similar type of objects for that we are going to discuss array module and here we are going to cover the programs on arrays okay which includes onedimensional array programs two dimensional array programs so you can expect minimum 50 programs in this array next and after that sir there one string module is also there and we are going to see the programs on string modules also here also around some 50 programs will be there okay like indepth knowledge we are going to cover in this nump these things won't come here okay so this is nothing but almost these first six modules whatever we are covering almost equal to the python the people who knows python Basics like core python so you can easily understand these things next so almost scripting program now we are entering into the functional programming like I will explain what is mean by recursion very very important topic recursion and applications around some 20 programs you can expect on this recursion sir it is a very very very very important topic in my point of view sir if you understand this sth chapter 7th module like recursion majority of the problems in the data structures you can solve I will give the names you you will get shock sir merg sort okay quick sort binary search y Queens problem Sudoko problem rattin mes problem okay so strings problems efficiently okay so even in the tree data structure and graph data structure without recursion we are not going to solve any problem so that much important concept is recursion after that continuation of this sir backtracking will be there anyway today I'm going to demonstrate what is mean by backtracking and here I'm going to cover some applications related to the backtracking so as of now okay as of now in my regular batches I'm taking so three two problems like Yen Queen's problem and Sudoko Sudoko problem these two problems I'm going to solve by explaining the concept of backtracking but for this batch I'm trying to plan one more question related to the backtracking okay next and after that sir after completing this backtracking we are going to discuss about sorting sorting algorithms in Python what are the different types of sorting algorithms are there next and after that what are the different types of searching algorithms are there we are going to discuss different types of sorting algorithms different types of searching algorithms as a part of this only we are going to get divide and conquer divide and conquer algorithms also will be there here where we are going to cover merg art okay merg art next and after that uh this quick art okay quick sort uh and this binary search this binary search also will comes under this particular category sir after this very very important your favorite Topic in the interviews ma maximum chances are there linked list linked list we have single linked list is there double link list is there circular single link list is there circular double link list is there okay so minimum some 20 to 25 operations we are going to perform on linked list so anyway I will explain that in detail okay next after this as a total syllabus theoretical and programs will be completed in six weekends yes definitely okay theory part is matter of 5 to 10 minutes sir maximum programs will be there okay concept is very very important here got it Mari sir can I able to solve l lead code questions yes from basic if you understand this concept you can start you can you can solve basic level programs but majority what they are going to do is they will select any one lead code problem which is indepth knowledge of Stack they are trying to solve that program without practicing the basic stack related programs getting the point yes sir so if the functionality of the stack is very clear for you any program not only lead code in the world if any complex problem is coming you can able to and you can able to think and you can solve but for that Foundation is very very important for that this is the best course got it yes sir sir and there is one word in the when we solve a coding question constraints what is mean by constraints I'm not able to graph conditions when we are solving the problem they are going to give the limitation like for example find a maximum element in the array constraint is 0 less than or equal to n less than or equal to 100 means what the length of the array should be from 0 to 100 maximum it can store only 100 elements like that they are giving okay okay sir right sir next after this linked list we are going to discuss even stack data structure and applications sir q q data structures okay so Q data structure and what are the different types of Q data structures are there its applications next and after that sir Hash a table Hash a table or you can also use the word called hashing hashing data structure how you can use this okay next and after that um next and after that we are going to see a tree data structure tree data structure next and after that we are going to discuss about uh priority use okay so priority priority Q data structure how the priority Q is going to work next and after that we are going to see graph graph data structure graph data structure and next and after that we are going to focus on okay dynamic dynamic programming dynamic programming and after that even greedy greedy algorithms how you can able to solve so next next and after that complexities how you can calculate complexities of these algorithms and at last bit manipulations bit manipulations maybe the order may may change while explaining the concepts I may take easiest topic okay first and then one complex topic and one easy topic like that so based on the scenario so I will take but these are the 22 topics which we are going to finish in this total six weekends sir don't don't keep any doubt in mind sir exactly in six weekends is it going to finish sir maximum six sometimes 5 and half okay sometimes 6 and half also it will take don't worry that depends on our interaction and your understanding capabilities everything will be there in this okay but beyond that it won't go sir maybe you can expect another one weekend extra or one weekend before but it won't go beyond that sir please exclude the demo classes this week don't consider as a first weekend whenever we are starting the regular class full-fledged for two and a half hours that is next week onwards you can consider it as a regular class now sir if you are having any doubt in the syllabus you can ask normal it will be from 30 to 45 days hello sir yes yes please yeah sir will practice question will provided or not sir practice questions will be given sir uh actually learning these Concepts itself is very uh tough job for you okay learning these Concepts itself is a very tough job for you but once if you do this we have so many resources are there for practicing the questions we will provide that don't worry so course completion certification ah course certification will be there in our durasoft for every course we will issue course completion certificate no issue at all okay sir can you do one lead code simple question for you means how to use the website what is sample input sample out I will I will explain sir definitely I will explain okay okay sir right any any other queries yes please post all your questions difference between normal batch and how many times I'm going to tell the syllabus is the same in the normal batch we are going to spend only 1 hour okay but in the weekend batch we are going to take 2 and half hours that is the difference except that the duration everything will be same sir okay is the recording videos are lifetime access no this recorded videos will be given only for six months access from the date of your registration if you want by Pro by paying the nominal amount you can extend that you can discuss with our team members okay but I think 6 months validity is a sufficient so after completion of the class you can watch okay right right so let us let us start our first thing okay maybe just I'm going to provide um some some examples okay uh some examples I will provide like how you can utilize as of now I'm not going to start this syllabus so in the next week only we will start but before that uh just how my teaching is how I'm going to explain uh these things just try to grab okay and whatever Concepts that I I'm explaining in today's session so I'm going to repeat these things in our regular classes also don't feel that sir if you are taking any Concept in the demo session that won't be covered in the regular class no okay I will cover that so mainly you can fix that we are going to start the syllabus from the next week okay tomorrow class is there so now today and tomorrow I'm going to take around one and a half hour like that not two and half hours demos will be there for one or one and half hour in this I'm trying to explain some Concepts you have to understand whether you can able to reach my requirement is it is you can able to grab my Concepts what I'm trying to explain is the speed is clear everything you have to monitor in this okay right sir in this course can you explain that how calculate time yeah definitely time and space complexity calculations also will be covered here okay right sir now the first first you know very well uh we are going to write some sample Python program like Python program to print to print so hello world message hello hello hello world message okay on the screen so I want to print hello world message on the screen sir this is nothing but what my first program which I'm going to explain of course even in your regular course also I hope this is your first program I'm taking a simple Python program okay and I'm going to type in the editor like print off within double quotations hello world something like this so our python is going to provide support for scripting level as well as object oriented level as well as functional programming so every concept will be there in our python sir that's why as of now here if you see we are writing scripting level program we have written one small script like print of Hell World print of hello world now I'm going to save this program because you are already from the python background so no need to give any explanation here because um we are not required to write any main method because it is nothing but what a simple uh scripting approach okay now I'm going to save the file where we have to save the file so I'm saving in C drive already there is a folder with name test so here I want to save the file any file name you can give suppose consider I'm giving test. py this python Fe file is already available let us replace that so now can I say in C drive this particular file is available how to run this program sir so you need to move to that C drive from here there is one command is there with name py in the command prompt you can run the python file by using one Comm command called py here I'm giving py space file name what is the file name sir test ppace test.py once if you press enter what will happen you can see there is a message is coming by printing the word called hello world this is nothing but how you can execute a simple Python program already you know about this concept but anyway since we are going to play games with completely python that's why I'm explaining the first program what we have here sir if you are clear with this I'm going for the second application clear up to this yes sir feel free to interact clear so that I can go for next concept clear right right miti please follow me you'll get it okay any editor you can use next sir another example sir can you please write a Python program to check whether the given number whether the given number is even number or odd number even number or odd number we have to write a Python program to check whether the given number is even number or odd number sir I may you multiple numbers so you can't write Logics multiple times right reusability concept will come that's why I want to write a Python program to print so message called good evening okay so good evening good evening for the given for the given username for the given username I want to print good evening messageer whatever username that you are giving okay for that I want to print good evening message how you can write sir in the first program I have not used any functions I have not used any object oriented programming directly I executed the code why because there is a task is very simple but now what you are saying you need to print good evening message for the given user there may be multiple users in your company for every user I want to display that how to to do that sir just I'm going to write DF I'm taking one function called wish which is going to take the username you know already about this indentation all these things now I'm printing the message saying good evening okay so good evening followed by the username whatever you have given now what will happen sir I created one function what is the advantage of this we can call this function any number of times based on your requirement you can call this function any number of times based on your requirement sir can I call wish function by passing prash as the input yes no problem you can call if you run this Python program what output we are getting good evening prash now another new user came the name of the user is nothing but something like Duram sir if you call have you observed second time also the function got executed with different username and it is printing the result now I'm going to give with another name called Ramesh sir is it going to execute yes okay sir like this we can execute any number of times based on your requirement based on your requirement you can execute any number of times sir this is nothing but what by using reusability concept functional programming how we can able to print this message so slowly I'm trying to use the functions in the next program that's why I explained what is the functionality of these functions reusability is the main approach sir okay are you clear with this up to this whatever I covered sir I have a doubt h okay yeah sir when you are calling function then why are you not giving a reference variable to that function and you have called V Pras then why are why you have not given a reference variable and then call it no no no I'm not getting your question reference variable in the sense what where is the reference variable concept here reference variable is not there okay here reference variable is not there so if you are taking X is equal to 10 can I say 10 is the integer object X is the reference variable pointing to that like this here also a function you define what is a reference variable for that wish it is nothing but the name by using that we are calling so where we need to store that not s right got it okay sir I cannot call xal to which Pras X is equal to like this your requirement see the python a function can return a value but in these two lines of code am I rning any value no right no sir then happen so this value will be replaced with none if there is no return value that will be replaced with none but here return type is not re I'm printing that's all right okay sir got it right sir clear everyone please confirm yes sir right so the next approach what I have sir I want to implement a program to check whether the given number is even number or odd number this listen carefully I implementing here why data structure is needed you will get clarity sir I'm taking one function like F1 which is taking the given number n n or anything you can take Let It Be X Let It Be X sir I'm checking one if condition if that X percentage 2 is equal to zero okay then I'm going to return a message saying even even number something like this I'm printing sir otherwise otherwise simply I'm going to written the message saying odd number like this a simple function I Define what is the name of the function f one for each I value in the range of 1 to six if you are writing what is the meaning of this it will generate the numbers from 1 to 5 first argument is always included second argument is always excluded now I printing the value of I and I'm calling a function by passing the value of iser now what will happen if I run the program first F numbers statistics it is going to print I need some space no problem you can give separator is equal to SLT what is the meaning of this it will give some space so you can see is one is odd number yes sir is two is the even number yes sir three is the odd number yes four is the even number yes five is the odd number yes but this logic we know very well from our childhood onwards we are learning this but there is one more logic is there sir if you want to implement that data structures concept must be required I will explain how to do that sir up to this do you have any doubt can I go for that implementation yes sir right let us see what is that implementation sir I'm going to Define another function like F2 sir in this function I will write the code but before that try to take the numbers uh starting from 1 to 5 okay like try to calculate okay try to calculate binary equivalent binary equivalent of these numbers so what is the bin equivalent of one try to represent in four bits it will be 0 0 0 one sir if you take two sir 0 0 1 0 if you take three 0 0 1 1 if you take four 0 1 0 0 if you take 5 0 1 0 1 from this sir can you please confirm by seeing these binary numbers sir are you getting any idea how you can differentiate even numbers and odd numbers any any idea friends can you please check a by seeing these numbers see the binary equivalent are you getting any idea how odd numbers is represented what logic is there sir can I use the word if LSB means what least significant ific an bit is zero then it is even number then it is even number if least significant bit is one so then it is odd number can I use this word because if you take any number sir it can contain any number of values but if last bit is zero I can say it is even if the last bit is one I can say it is OD sir will you accept this particular terminology please confirm so full form of LSB least significant bit and this is called as least significant bit this is called as most significant bit don't worry in The bitwise Operators I mean bit manipulations I will demonstrate okay clear friends up to this whatever I covered yes sir now sir if you want to check whether it is even or odd dividing the total number with two is a risky process more number of calculations must be needed but what I'm doing is try to check only last bit anyway whatever number you are giving it will be internally represented in binary form only that's why what I am going to do is you know about unop operation if you perform so under operation with any number okay let us consider the number is one suppose consider in this example okay the number what we have here is let us take the second number sir 0 1 one is the binary equivalent for the number two try to perform under operation with which number one one means what is a binary equivalent 0 0 0 1 because I'm focusing only on this particular bit since UND operation these three bits are anywh zero definitely it will become zero now one un operation with zero if it is zero means what is the result sir it is nothing but which number even number why because sir if first number LSB bit is zero definitely Z and one will become zero only suppose if you take a number three so forget about the previous number it can have any number of digits so since we are performing under operation with all zeros sir your result will become 0 but you can see the last bit sir what output we are going to get one can I say easy odd numbers so I can able to can can you s can I the how all the three are 0 sir this is under operation sir just look at this because in the bitwise operators we have under truth table is there so if both bits are your voice is low sir is my voice is low no sir clear yeah please check sir please check from your end so if you have one Zer and if you have 0 1 and 0 0 in all the cases it will become zero this is already I think you have studied in your language yes sir yes sir through yes good right okay right so now can I write like this if n percentage 1 is rning is returning one means I can say it is nothing but odd number if n percentage one is returning zero means I can say it is even number sir is the logic for this program is it clear no sir no sir any doubts yes sir I I don't get mean the last significant bit will return one then it is odd and if it return zero then it is even yes then how you will check that last digit returning one or I will write the code n and one just now I have written the diagram right if you take a number n so in the first diagram it is nothing but 0 0 1 0 performing under operation with one 0 0 0 1 what is the result that we got all zeros I got right what is its decimal equivalent zero when you are doing under operation with zero I mean under operation with one if your result is zero then what is that number it is even number if you are taking un operation with one if you are getting one what is the decimal equivalent of this one then it is nothing but odd number got it yes got it right now I'm applying this technique what is a second function sir if you are taking that number and operation that number and operation with one if it is equal to zero then what is the meaning sir just now I covered it is nothing but which number even number it is nothing even number otherwise sir can I return saying it is odd number that's all sir both are looking like same what is the difference this percentage division will take more time when compared with under operation beyond that nothing is there sir okay to improve the performance of the application we need to use this data structures concept sir where this concept will come in our chapter there is one one concept is there within a bit manipulations there again I will repeat this application don't worry now let us run okay I'm calling function two also by passing I now you you can see sir what output we are going to get sir is for both outputs are same right yes the normal way we tried at the same time by using bit manipulations how you can Implement also I explained I hope you people understood this application how it is working internally any doubt up to this sir means there is a difference in operator so it will result differently right yes because result is same sir but percentage operator will take more time so when compared with UND operator because UND operator here you can see because we are performing UND operation with one it will check only one bit are you getting my point yes sir but in the case of second one is more efficient no sir second one is more efficient yes second one is more efficient function two is more efficient clear sir it is very simple Mary just imagine percentage means if you have any number compulsory that number you have to divide suppose if the number is uh something like this is division operation is very difficult right but if you take the same number in binary format it can be anything one Z One 0 dot dot dot anything but last bit is one means we are focusing only on last bit remaining things we are not focusing are you getting my point yes sir So based on this it is going to decide okay clear after this yes sir right this is nothing but what we have today's demo sir okay sir tomorrow also with the same timings we will continue 6: p.m. okay so tomorrow I will explain another few uh six or seven applications related to this DS okay then next week onwards we are going to have our regular classes okay okay sir okay sir right sir so thank you we will meet for the continuation tomorrow tomorrow I will take one and half hour session okay same timing it's 6:00 same link okay okay sir right sir thank you thank you thank you s yeah thank you we will continue in the tomorrow same link same timings thank you