so hello everyone myself KP and I'm studying in sesar College of Engineering Bangalore so in my usn is 1 v23 c075 and the semester is third semester and my section is bascara and role number is Bon and the section and the topic we are going to study that is pointers and the course title under it comes is data structures and it applications so and the course code is uh BCS 304 so let's move on into the video so to see the further uh points on the pointers so basically data structures on pointers the uh the fundamental Point uh the fundamental part of the data structure is the pointers pointers are the fundamental concept of computer Pro programming that allows that uh direct manipulation of the memory address so pointers and in the word itself says the point it points the address address of the uh that location address of the address of the point address of an element or an information so understanding the data structure built built on pointers in The crucial for efficient and lowlevel programming pointers is also called as a lowlevel programming and it also efficient for the data structured users so what are Pointers so basically uh the first question which arrives in our mind is water pointers so memory address so pointers are the basically the three types memory address and IND Direction and a dynamic memory so pointer stores the memory address of the variable allowing the direct axis and its list so in the previous slide I have explained you what is point what is pointers so here it is the information the pointers are stores the memory address of the of a variable allowing the direct address direct access to its value so the IND Direction the pointers enable IND direction to the ability of the a Access Data through its address rather than its name so rather than its name IT addresses the value of the uh value of the variable so dynamic memory pointers are essential for the dynamic memory which which can be used in manipulation so it used in many data structure programs so n null pointers so utilizes the pointers should be set as null to avoiding the ref referring invalid memory address so there are the three types of pointer variables so moving on to the next slide uh pointers arithmetic so we need to assign the pointers in the arithmetic form also so by incrementing or offsets incrementing decrementing in offsets so incrementing in the word itself it's incrementing the pointer can be incremented to access the memory to the next uh next location uh if the pointer is in the A1 and if it want to increment to to we have to use the pointer variable star so decrementing the operator decrements the pointer to access the value at the current memory address so the pointer at the current memory address it decreases to the previous uh address using the star operator so offsets offsets are the pointer arithmetic and can can be can can use offset to do to access the elements as the specific position in memory so basically this uh dynamic memory allocations are are are read by our class teacher so Malo Malo cck free and real loock so these are the three types of four types of allocation which all are similar which can which can be used which can which can all all can be used inm function so the malog function dynamically allocates the requested memory block on on the Heap so the callock function allocates the initialized memory blocks with a value of zero and the free the free function realizes the dynamically allocation memory to prevent the memory leaks uh it's basically used in the allocation of the memory where mck and free and reck are defined in the outset of the program and the realog function realizes a previously allocation memory blocks on the he so basically the point which we use is to is to point the variable on the functions so while while writing the program we have to point the variable at the position example if we want to use the temp variable we have to use a star pointer variable star PTR so is a first short form and recording so okay uh here is the process so uh these are the dynamic allocation of the program so pointer and array so pointers and array so array representation so pointer arithmetic and memory efficiency so so point so array efficiency so AR array representations array are represented in memory as uh contigous blocks which can be accessed accessed using pointer so so pointer Artic can can be used in the native through array elements and by incrementing the pointers so by the way array representation so here array representation in the memory can continuous blocks which can be accessed to the PO so array representation in generally in general form array representation so we want to represent the array through the pointers so we use as in start PTR where we uh if the compiler wants to go to the uh go to the go to the some information Store where the compiler don't know the address so there we use the pointer star pointer where it all it allocates the location of the location of the location of the information so that we use these by these by functions so memory efficiency so pointer allow allows for more efficiency memory usage compared to the traditional array indexing pointers and functions so pass by reference return value call back these are the three types there are many types so basically these are the main three types so pass by pass by reference pass by value return value and call backs so pass by pass by reference a pointer can can use to pass the arguments of to functions by uh referring enabling the functions to modify the original value so pointers can be can be used to point the argument to functions by reference ening the functions to modify the original value so hereby the original value value function can return the pointer dynamically allocates memory uh memory allowing the creation creating the complex data structures so call back call back function in the word itself it's a call back so when when you point the pointer to the specific variable it call backs the it call backs the function and enables the flexibility of the programming uh uh uh return values it values of the pointers so by this last slide I want to conclude the pointer pitfalls and the best practices so here the in this video we we will we understood that what what are Pointers are used in the data structures and why pointers are used in the data structure where point where where and where and when we have to where and when the pointers are used in the data stres so basically there are there are lot lot many to see through the the pointers so thank you for watching this video take care bye-bye