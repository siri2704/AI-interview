yeah so good evening everyone welcome to durasoft welcome to durasoft online training sessions welcome to durasoft onlin online training sessions myself k prakash b having 16 plus years of experience as a trainer so I worked as a technical trainer in various engineering colleges and in our durasoft I have four years of experience and coming to this course course details coming to this course details second so coming to this course details the title of the course is nothing but data structures data structures and algorithms we are going to cover both data structures and algorithms with Java sir the programming language which we are using to learn these data structures and algorithms is nothing but what Java so the prerequisite for this is compulsory you should have an idea about Java so Java knowledge is mandatory friends Java knowledge is mandatory next and after that the duration of the courses we are going to have around two months two months dur ation will be there so approximately I'm going to take sir 60 sessions 60 sessions I'm going to take okay approximately around 50 to 60 it will be there so you are going to get running notes running notes and you are going to get videos also so in this running notes even I'm going to share the images also why I'm explicitly specifying these images in the sense for data structures and algorithms images are going to play an important role because whenever I'm explaining the linked list or whenever I'm explaining the threee data structure there the most commonly used thing is nothing but what images I'm going to draw how it will be so that images I'm going to upload sir without that images if you see the program also you can't able to understand so this information I'm going to share sir all our lifetime validity accept videos videos you are going to get sir 6 months access these videos are not downloadable just you have to play and listen and my sincere recommendation is once if the session got completed maximum on the same day or next day try to refer this video before coming to the next class so if you are having any doubts you can clarify that that doubts in that session second thing sir minimum two times you have to listen this class sir because it is not that much easy what you are going to think but if you understand the co core concept it will become very easy sir that's why I request everyone to please watch this video minimum one or two times every class video okay this is nothing but what we have sir everything is okay what about the Fe Indian currency 2500 Rupees is nothing but the fees sir there is a huge demand is there so some training institutes are taking large amount also but here in our durasoft so we started this course at triple9 sir now this is nothing but 2,500 some people may have a doubt sir already we have recorded sessions are there recorded recorded videos are there can I purchase these videos for offer and can I learn yes you can if it is language sir you can sir for data structures live classes are very very very very important sir okay very very important because whenever I'm explaining parallely you have to write down the diagram parallely you have to understand the Logics so compulsory parallel execution must be required so that's why it is always recommended to attend live classes maybe if you are unable for one or two days it's okay but try to present every time sir okay okay try to present every class and sir not only on weekdays sometimes on weekends also we are going to have the class okay so the actual timings of this class is from 6: p.m. to 7:00 p.m. 600 p.m. to 7: so I will start at 6 maybe 7 or 7:15 like that it will take so on week days on week days okay so weekday in the sense Monday to Friday sir I will take some special topics there are some special topics are there so which are going to be covered on weekends sometimes I'm going to take some special topics which are going to be covered on weekends sir sir what are those topics in the sense easy topics sir easy topics like there is one concept is there called arrays there is one concept is there called strings it is also a data structures internally it is also a data structures internally then linked list linked list next and after that sir tree tree binary search tree binary search tree and AVL tree sir these Concepts these Concepts I'm going to plan on weekends not on every weekend maybe alternatively or 3 weeks once I'm going to take okay so around two and a half hours three hours of sessions will be there only for this easy topics rest of the things are very hard to understand so slowly I need to deliver the content to you people this is nothing but information about the courses sir if you are having any queries please let me know then I will explain the syllabus sir any doubt in this course course details uh hi prakash this is palavi uh so I am an working profession uh I am working by profession but uh the thing is that uh the 6:00 p.m. to 700 p.m. won't be good for me so is there any option like can we like post on by 30 minutes or something or it's like 600 p.m. to 7:00 p.m. only no Madam it is 6 p.m. to 700 p.m. it is confirm there is no change in the timings okay okay uh and this course is not for working professional or working professional also can go through for working working profession also it will be useful because if you understand the these Concepts whatever I'm going to explain your logical thinking is going to be improved so when you are writing the code easily you can able to write okay okay and if any final year pre-final year students are there it is highly recommended to take this because today I have taken one session in one engineering college so there is a drive uh placement is happened so in that so they have asked one question like how to calculate fibon sequence so students have written this those who have written this code they called for second round in the second round can you please optimize can you please optimize this code by using dynamic programming this is the question they asked the people who written this fibon sequence failed in this particular second round almost two students attempted so out of 30 members only two students got selected the dynamic programming is a concept of data structure it is a very easy and simple thing but students because of syllabus criteria so this is the syllabus that we need to cover our examinations because of these things the students are not learning the coding things properly that's why so if any final year pre-final year students are there sir blindly you can register this course please practice every day definitely you are going to be settled in new IT job yeah sir new batch there is no new batch sir after almost uh uh two months we are starting this batch okay this is a new batch only today only we started okay it will be streamlined in the next week so further you can expect after two months in New Batch sir uh this isas here I'm audible sir yeah you are audible because tell me uh sir I'm also like working professional and it's been like more than 6 month I'm in IT industry okay just wanted to know few things like uh I wanted to just tell you one thing like uh whenever I face this this kind of like data structure related question and in my organization so I just face lots of like issue on that so I have lots of Hope about this course sir like I just wanted to know like if I like complete this course I'll give my 100% that is for sure and 100% sir one second 100% you can give but at the same time sir 30% is my effort 70% should be your effort why because see when I'm explaining something if you see just now I covered one topic like DP dynamic programming M for previous batch I have taken five hours to complete this DP okay in this five hours we covered only three problems are you getting my point so if you want to practice more problem problems you need to put some effort because I can't extend only DP I can't take the course right even I have my own criteria that's why similarity of the problems I will give at the same time assignments also I'm going to give like we have lead code website is there in that there are n number of problems are there so you can solve but for that inputs I'm going to give parallely you can practice and I'm going to share my insta ID and I'm going to share my WhatsApp number also whenever you are feeling difficulty you can talk with me there is no issue in that and for working professionals so if there is no possibility to attend these live classes no problem you can watch the videos I hope you can able to understand suppose if any difficulty topic I'm going to tell so I will create a group in that I will mention that mandatory to attend in such a cases you can try to adjust your office timings or any other commitments and try to attend okay preer intimation will be given on the topics sure sir thank you any other questions only regarding course syllabus is not yet started clear right sir coming to the syllabus syllabus syllabus coverage sir what syllabus you are going to take it's a very simple syllabus only the known Concepts only sir first I'm going to give introduction to introduction to algorithms maybe in your school standard or in your btech I think you have studied this what is mean by algorithm uh what are the uh what you can call properties will be there for the algorithm if I want to develop any algorithm what we need to do what are the basic things yogesh please be on mute like we are going to cover introduction see whenever I'm having a problem n number of solutions will be there for example consider so I have given one simple problem statement this is my problem statement I have given this task to some students sir first student came up with one solution second student came up with another solution third student came up with another solution but all these three solutions are giving perfect output for the given problem statement whatever input I'm giving it is working perfectly and it is giving the correct result but the problem is among these three algorithms which algorithm is the best that is the task what we have sir no problem among these three algorithms you can select which is the best algorithm for that some analysis must be required some analysis must be required that is called as s time and space complexities how much time an algorithm is going to take to execute how much space an algorithm is going to take okay like that based on time and space there are some divisions are there next and after that sir we are going to cover some recursive recursive algorithms recursive algorithms next and after that we are going to see backtracking backtracking algorithms what are the different types of backtracking algorithms are there next and after that divide and conare before that so sorting sorting algorithms sorting algorithms and searching searching algorithms next and after that divide and conquer divide and conquer algorithms so next and after that dynamic programming dynamic programming and we are going to talk about greedy algorithms greedy algorithms also we are going to discuss okay next and after that this is related to the data I mean algorithms coming to the data structures first we will start with array data structure then we are going to discuss about strings data structure okay so after covering these arrays and strings then we are going to talk about okay linked list data structure linked list linked list data structure as a part of this linked list data structure so I'm going to take stands for sing single link list so next I'm going to talk about D L doubl link list circular single link list circular doubl link list like four different programs I'm going to explain in every program sir minimum we are going to discuss 25 operations if you take single link list on single link list 25 operations I'm going to cover okay so like you can see this is one program if you take single link list this is the program what we have so how to create a single link list so how to find out the size of the link list whether the link list is empty or not how much time it is going to take how to insert at first so printing the list two string method overridden inserting at last everything I typed The Code by my own so it is not copy pasting so like sorted insertion insertion at specific location display in how many ways we can display search operation next and after that nth node from the beginning ending sorted insertion you can see delete operation okay so next and after that uh removing the duplicates from the list okay reversing the link list comparing copy operation sorting the list like you can see around 500 lines of code we are going to type so on each and every data structure I mean single link list double link list we are going to perform all these 25 maybe I will focus only on single linger list rest of the things I will explain the main functionality is remaining things I will provide in the form of videos this is linked list data structure after that we have stack data structure is there next and after that so we have q data structure is there so next we have priority Q priority Q data structure is there this priority Q is also called as a sir Heap Heap data structure how that Heap is going to work we are going to see next and after that sir here in the algorithms hashing hashing algorithms also will come okay linear probing quadratic probing how you can able to do those things so after this we are going to talk about uh three data structure tree data structure next binary tree binary tree next binary search tree binary search tree next AVL AVL tree something it is related to The Balancing balancing so next we are going to talk about graph data structure in this graph data structure so minimum some 15 to 20 operations I'm going to explain BFS DFS everything will come in that only finding minimum cost of spanning tree okay like that so this is nothing but the syllabus what we have so in addition to that maybe in the beginning okay so we may cover bit manipulations also bit manipulations so in the sense bitwise operators so by using bitwise operators we can improve the performance of the application right like what are the various bitwise operators are there that we are going to cover with some applications these are nothing but the topics which we are going to cover as a part of this course if you are having any queries on this syllabus you can feel free to ask any queries please let me know guys please respond any questions if no please give acknowledgement yeah I have one doubt uh every collections has internally used data structure only will you discuss those data structure as well as collection you asking about predefined collections sir yeah maybe we are not going to cover that if you want I will give videos on that because already some 6 to 7 hours class is there so I will share that videos for you people if you want want to learn that collections just for revision purpose because how that link list and all working here itself we are going to see the internal functionality but collections is providing rade support right yes that's why I may not cover in the regular syllabus if you want I will take one or two sessions no problem in that okay any other questions you can feel free to ask the questions or if you are having anything you can also put it in chat window yeah that's what the duration of the course is 2 months maybe plus or minus one week you can adjust okay any questions tell me guys oh yeah someone is asking in arrays we are going to see the basics okay uh next arrays predefined classes there next array rotations okay array rotations Matrix rotation Matrix rotation everything we are going to cover okay right in graph what we are going to cover sir in the graph data structure we are going to see how you can represent the graph in how many ways we can represent one is by using adjacency list another one is by using matrices by using that we will read a graph and we will print that graph and some basic operations are there like how to find out shortest path and is that graph is is a graph or a tree is it having a cycle or not okay next minimum cost spanning tree okay like that we are going to cover some five to six operations not in detail okay yeah post fix prefix presentations will be there in stack applications of stack in stack we have prefix postfix all these representations yeah Sur is asking one question yes it will be starting from scratch I'm going to begin from the scratch but without having knowledge of java it is very difficult for you to understand but if you follow it will be good okay so the people who wants to attend Java also I'm I'm planning uh tomorrow morning Java demo is also there if anyone willing you can go through our website and you can okay yes can I start the syllabus please confirm everyone right sir demo in the sense uh it is not like a repetitive session so demo means what without paying the fee you can attend some three to four classes that's all that prohibition is given for you so that doesn't mean that demos means whatever topic I'm taking in the demos same thing will be repeated okay same thing will be repeated no no so I'm going to take this session whatever topic I'm taking it will be continued so let us start first topic but in the demo sessions if I'm taking introduction and all it is not correct because these are you know easy topics only anyway once if our regular batch started okay then I will explain the introduction part and all so directly I'm starting one algorithm related topic which is nothing but recursive recursive algorithms chapter I'm going to start recursive algorithms chapter I'm going to start so but I think you know the definition of recursion but before moving to the recursion definition sir tell me what is mean by Method anyone having idea what is mean by method please guide me what is mean by Method method nothing but specification to develop the business yes sir so method is nothing but something like uh if you are writing any code for example assume this is nothing but a simple Java program what I have a group of statements correct sures so assume I have a simple Java program is there like like this I want to perform addition of two numbers how you can do sir integer A1 is equal to 10 A2 is equal to 20 and then A3 or A1 so B1 is equal to 20 and then C1 is equal to a + b then I'm trying to print the value of C1 something like that we have so if I execute this program what will happen successfully the code is going to compile and even it is going to give the correct answer let me check so Java C test. Java I'm going to use IDs also friends but at very beginning I'm taking so maybe there is a syntactical mistakes like A1 and then B1 we have to take the code is working fine if you run the program also the output is 30 sir is the expected output came from this or not please confirm everyone is the expected output is 30 only right please confirm see it is a data structures class more interaction must be required try to unmute and try to speak okay sir clear up to this no doubts right now yes so I want to repeat this task for four times sir I want to repeat this task for four times so I'm going to take like this sir maybe here I'm going to take one and then two expected output is three sir here I'm going to take 100 200 300 sir th000 so 2,000 3,000 like this we have sir now if I'm running the program the program is going to work fine let us take this one as A2 see how many modifications we need to do so A2 B2 and then C2 so here we have to change like so A3 okay B3 C3 A3 + B3 + C3 and here we need to take like so A4 B4 C4 again A4 B4 again C4 like this now the code is going to compile fine and even it will execute perfect but the problem with this the problem with this approach is sir do you know there is some repetition is there what is that repetition this operation you are repeating continuously why you are going to take a separate method why why we can't take a separate method we can Define some method it is nothing but so group of statements group of statements which are required repeatedly if anywhere repeatedly if you are using anything then better to go for a method sir what I will do is I'm going to take a method how I'm going to take sir public static integer add method which will take two numbers like X and then Y and it will return x + y sir so that we can avoid these many things if I want to perform addition of two numbers sir can I call add function by passing one comma 2 or 1 comma 3 so then your output will become four sir if I want you can call like 10 and then 30 sir 100 and then 300 sir th000 and then 3,000 like that we can take so what will be the output 40 400 and then 4,000 are you seeing sir if any repetition task is there you can slowly convert that into a business logic this is called as business logic so can I say a method is nothing but what a group of statements whenever you need you can to call it is something like reusability component reusability will play an important role in the programming domain that is the reason why we are going for methods everyone feeling comfortable with this please confirm it's [Music] fine good right so next what I'm going to do is what I'm going to do is listen I don't want this technical technical stuff and all just theoretically what is happening I want to check sir very simple sir I'm going to Define one method like this public static let me take the method name as ym something like that nothing it is nothing receiving so I'm printing some message like system.out.println off so method so method M execution started method M execution started sir method M execution ended like this I'm taking sir after this if I run the program what output we are going to get nothing sir because we know from beginning of our Java Java program execution always starts from where sir can you please confirm from where Java program execution will start from main method from main method right but is that main method is having any instructions here no no no then it won't execute are you clear with this so how to invoke that can I call M here can I call like this yes yes what will happen it is going to print method M execution started method M execution ended like this sir in addition to this I want to take some message even in the main method in between this I'm taking sir I'm going to take method or main method main method execution started and I'm printing main method execution ended like this I'm printing so now you know the flow of sequence main method execution started then we called some function or method the control this is called as jvm Java virtual Mission first Java virtual Mission will always call main method then what will happen main method is executing this first line from here the control will go here so this will become second line it will become third line and after that control will come here then this will become fourth time like that main method execution started method M execution started method M execution ended main method execution ended like that we are going to get sir is it right can you please cross check same thing is coming up to this are you feeling any difficulty please confirm sir please confirm are you feeling any difficulty no sir clear right yes we have clear right now sir I'm going to make this program a bit complex so what is that complex is I'm going to take sir first I'm calling M1 first I'm calling M1 observe carefully I'm calling M1 sir M1 method is there method M1 execution started method M1 execution ended sir meanwhile I'm going to call M2 then so I'm going to take the same instructions here like M2 M2 execution started M2 execution ended now sir how the flow of control is happening is very very important sir uh tell me first which line we execute first line 16 which is going to start sir Main Line main method right so main method is going to start am I right yes then from here we are calling M1 the control came here sir M1 execution started second line so method M1 execution started then sir after that is Method M1 execution will end no sir no why because this M1 method is doing three operations this is the first operation this is the second operation this is the third operation sir second operation is live it is giving control to some other so from here again it will go to Method two then what will happen third line so method M2 execution started from that is there any other task no then immediately method M2 execution ended then after that the control will come to this place and incomplete task is there right that M1 is going to end at last main method is going to end this is the expected output what we have sir is the flow of control is it clear everyone please confirm yes sir now let us see is is the same thing is happening or not sir main method execution started okay fine method M1 execution started excellent method M2 execution started very good method M2 exec ended method M1 execution ended main method ended so perfectly it is executing all the instructions clear friends any doubt in this program no sir slowly I'm bringing recursion definition sir slowly I'm bringing don't worry sir this M2 method is there right sir this M2 method this bloody M2 method is calling M3 method sir what M3 method is doing is in M3 method M3 execution started M3 execution ended now you know the sequential flow right tell me sir what is the sequence after this M3 is going to be started M3 is going to be ended then M2 is going to be ended so then what will happen M1 is going to be ended at last what will happen main is going to end am I right friends please confirm is it correct yes yes sir now my question is Sir first main method is executed it is calling M1 the Control G came here sir it is calling some other method like that if you see sir M1 is there here M2 is there here M3 is there here which is the recent method called this one only right that one will continue first next recent call is M2 that will continue next next recent method is there M1 next recent method like that the call is happening that means it is always taking the latest method which is the latest method that is executed it is calling sir clear up to this got it everyone the flow of control yes sir yes sir no doubt right okay now sir you people may have a doubt really is the flow of control is happening or not you may have a doubt now listen sir I will show you the proof I will show you the proof here I'm going to print system. out. print Ln of 5 by0 sir is there any problem in this statement yeah I will get the exception we get the exception yes now see what will happen so what is a problem java. lang. arithmetic exception division by zero sir where this particular problem came in which method sir M3 M3 so this M3 method is called by m M2 that's why it is delegating that exception to M2 sir M2 is called by M1 that M1 is called by main method so that entire process is identified or not yes sir everyone feeling comfortable up to this please confirm yes sir so up to this what I covered is what is Method how to declare a method in Java how to call that method how to call that method only these points I covered if you are clear with this I will go to the exact definition of recursion sir clear up to this yes good next so what is the next one that I'm taking here is listen carefully next example I mean how I can say uh definition can I say a method a method can called by some other method some other methods is it right is this statement is true or false a method can called by some other method am I right that's true sir can I say a method can be called by a method can be called by itself can I say s a method can call itself or not yes because that is also a method right so a method which is called by a method which is called by itself is called as recursion a method which is called by itself is called as recursion and the process the process is called as recursive process recursive process and that method that method which is invoked in that process that method is called as recursive method okay that method is called as what recursive method then you may have a bigger doubt sir why we need to go for recursion very simple sir if I am asking addition of true numbers so how you are going to do that operation it's a very simple one + 2 simply result is three sir 1 + 2 + 3 because you are a human being you can think and you can write the result okay 1 + 2 + 3 + 4 you can simply think and you can write the result but how computer is thinking is Sir what is this it is a pattern it is a pattern I identified there is some pattern sir can I apply pattern for these two yes whatever result you are getting consider is it again a pattern or not yes this is the first number this is the second number whatever result you are getting that is I'm substituting here can I say this is a pattern yes sir in this a common pattern is included sir so happily you can go for which one recursion recursion means what a method a function which is called by itself whenever you are finding if there is any uh what you can call pattern pattern in the program then immediately you can choose this recursion there are n number of problems are there which can be solved by using recursion anyway from tomorrow or day after tomorrow I'm going to start explaining that um uh what you can call applications of this recursion there you will get more clarity there you will get more clarity so up to this is the introduction theoretical part is it clear up to this yes sir then sir one one important note or I want to take one important point the main hero the main hero in the recursion is uh tell me sir who is the main hero in the recursion I didn't reveal the name but I covered the concept anyone having idea who is the hero inside recur can I use the word called stack have you observed what is a stack sir what is stack last in first out yes a stack of plates if you arrange some three or four plates which plate you will take first the latest one which you have inserted sir I ordered some four items from the Amazon they put their four items into the Amazon box delivery box once if I receive the person who kept last item is the REM item which I'm going to REM somewhere I told in the recursion I mean in the method calls most recent method call will always execute same thing so the hero of this recursion is nothing but what stack don't worry tomorrow completely we are going to discuss about this stack only but before that I want to take one example for recursion sir I have a main method is there main method is calling some other method like M and M method is there which is having some message like so good evening okay good evening something like this I'm printing good evening something like that right sir it is a normal method call it is a normal method call Simply it is going to execute sir can I take recursion yes inside this method M again you can call what will happen sir internally one stack is going to be created like this sir first some person is calling which method main sir main is calling some other method what is that method sir y that m method is again calling which method M that m is calling which method again M so this one is calling again m is there any is there any limitation no continuously it is going to call up that's why you can't expect the output you can't expect the output so the output is infinite times it will print are you seeing good evening good evening good evening something like that keep on printing but somewhere sir it is is stopped somewhere it is stopped sir where it is stopped sir are you seeing here there is some runtime error came in the main method what is that java. Lang dot somewhere I covered stack stack Overflow error sir the elements which you are trying to push into the stack is Overflow it is it is not it is unable to hold that data that's why we are getting overflow error sir yes in the recursion you will get overflow error only but how to solve that overflow error and all we will discuss sir up to this any doubt friends please confirm no sir everyone feeling comfortable up to this yes sir right now this recursion is called as infinite recursion this recursion is called as what infinite recursion then sir there is some finite recursion is also there how you can stop that process for that we have to take some base condition base condition so then there is some direct recursion direct recursion is there indirect recursion okay indirect recursion is there sir what is mean by direct recursion what is mean by indirect recursion then sir why we need to go for in recursion need for rec recursion need for recursion then sir examples for recursion where we can use next and after that sir steps to implement steps to implement recursion how you can able to identify recursion how to write the steps for that okay next sir there is one more type is there like tail and tail recursion is there and non-tail recursion is there tail and then non-tail recursion easy only nothing is there to feel difficulty okay so after this we are going to see some applications sir for this batch minimum minimum I'm going to plan 20 applications sir means 20 programs I'm going to cover purely on recursion 20 programs I'm going to cover purely on recursion this is nothing but the concept what we have sir clear friends up to this please confirm yes sir yes sir yeah these things I will discuss in the tomorrow's class these things I'm going to discuss in the tomorrow's class tomorrow maybe infinite finite base condition these Theory parts and applications also maybe one or two applications if time is not permitted I will start applications on wedness day so up to wedness day demos will be there from Thursday onwards we are going to have our regular classes now that's all about demo sir okay