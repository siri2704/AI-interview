in the last videos we had a very clear discussion about our course few things we discussed let me revise for a few minutes because this is the last demo session from Monday onwards we will have our regular classes okay so uh the title of the course is DSA with Java duration of the course is 2 months and fees is nothing but 2,000 the timings of this session is from 6:30 p.m. to 7:30 p.m. Monday to Saturday Okay so sometimes you need to be ready to attend the classes on weekends also then one more point so there won't be any change in the timings maximum this timing is fixed maybe on weekends so I'm going to take one and a half hour two hours like that so that will be maybe from 6:30 to 8:30 or 5 8:30 to 7:30 like that it will be differentiated only on Sundays next uh you can contact to this mail ID or to this mobile number if you want to get registration so almost this is the last demo and if any new student is there sir this is my new class or I want to watch the old classes old demos whatever you have taken so for them just I'm sharing YouTube link so in our YouTube channel the complete playlist is available and prerequisite for this is nothing but core Java compulsory you should have knowledge in core Java then only you can able to understand these things and what benefits we are going to get from this course total how many modules are there sir five modules are there okay so different IDs we are going to use and yesterday I have started this course okay and we have seen what is mean by data structure the definition of of the data structure and what are the different classifications are there and even we have seen some applications advantages also after that even we have seen what is mean by algorithm how to develop an algorithm and by using Java program how you can able to provide implementation for that we have taken some examples also and even we have seen what is mean by flowchart so how you can go for implementation what are the advantages of algorithms are there what are the properties of algorithms these things we covered in our previous classes very clearly now in today's session I want to go with some sample algorithms and so even few more things we are going to discuss so in this today's session I want to implement a program I want to implement a program or I can say algorithm to calculate to calculate or to check to check whether the given number is even number or odd number I want to read a number and I have to check whether the given number is even number or odd number how to check whether the given number is even number or odd number very simple sir for that I'm going to write a program the program is very simple because sir in the main method I'm going to Define one special method sir the name of the method is public static the written type of this method is nothing but a string I will take the method name as a method one which will receive one integer variable y now my target is is This n That is the given argument is even number or odd number we have to check I think you know the basic fun rule to check whether the given number is even or OD how you can able to check we have to divide that number with two for example if the given number is five sir 2 two are four REM remainer is one since it is not divisible it is nothing but which number odd number if you take a number called Eight if you are trying to divide with two sir two two are okay two two fours are eight right the remainder is nothing but what zero since remainder is zero it will become even number so any number whatever they have given you have to divide that number with percentage two and if the remainder is equal to 0o then we have to check whether then we have to conclude it is a even number otherwise we have to conclude this number is nothing but what odd number like that we can take the decision so let us write the program for this very simple I'm going to return directly so I'm using conditional operator n percentage two I'm calculating if it is equal to zero I will return a string saying even otherwise I'm rning a string saying odd single line code I have written so I'm dividing the given number with percentage two if remainer is equal to zero I'm going to print the message saying even otherwise I'm going to print the message saying odd like that we are going to return I think the logic is very clear but let me execute this one system do out dot so print Ln off I'm going to call method one by passing the input as a f and I want to call with one more input let us assume eight which which I explained with the help of diagrams now I need to run this program and we have to check whether is it working properly or not in which folder the programs are available in test folder now I'm taking Javas C test. Java is the program is compiled yes now I want to run the program so Java space I'm giving test so what is the output that we are getting odd odd and then even like this so our expected output we got this is the way how you can able to check whether the given number is even number or odd number this is the basic logic sir this is nothing but basic logic what we have so I think everyone got clarity about so how I implemented this particular program do you have any doubt friends up to this whatever I covered please confirm yes please confirm clear a bit of confusion with regard to even and odd how it is taking odd I know the division and all those things got it right the command that's given out there can you just explain that return one what is your doubt now it's actually the line of coding right the return so even here return return type is what string right yeah so string means compulsory we have to take within double quotations am I right so that's why I'm going to return which value either even or odd it will written either even or odd when even will be written this is actually a conditional operator first it will evaluate this condition if this condition is true it will return this value suppose if the condition is false it won't return this value simply it will return this value have you observed here so based on the input based on the evaluation of this expression which value it is going to return will be decided got it okay thanks yeah this is a conditional operator which is available in Java not only in Java Java in every programming language we have this conditional operator okay in our upcoming classes we are going to see so many examples on this don't worry so this is nothing but one one method what we have to decide this there is one more method is there like suppose if you take a number called zero if you convert this number into binary you are going to get four zeros if you take a number called one if you convert it into binary this is nothing but the binary equivalent for the one if you take a number two the binary equivalent is 8421 like this okay so if you if you take a number three okay so the binary equivalent is nothing but 0 0 okay 1 1 so if you take a number four the binary equivalent is nothing but 0 1 0 0 if you take five the binary equivalent is nothing but 0 0 1 0 1 like this so and so so on that means if you are taking any decimal number we can convert that number into binary right of course definitely it will be converted we are not required to convert by default system is going to convert sir how you can able to say like that because because we know a mission can understand only two digits which are nothing but zero and one a mission can understand only two digits either zero or one so zero indicate a bit value one indicate another bit that's why binary number means two bits combination so anyway whatever operation you are doing that will be internally converted into binary and then evaluates but we have some special operators are there in Java not only Java in all the languages like bitwise operators if you take the help of bitwise operators the f efficiency of the program is going to improve because internal conversion is not required directly it can able to execute for that purpose we are going to use the bitwise operators so that is the reason why I converted every number into binary form now you have to see this binary representation of each and every number whatever I have given from this can you tell me any logic are you getting some idea p sir which numbers will comes under even so which numbers will comes under odd by seeing are you observing any pattern in this can you please confirm yes please how we can say the number is even number how we can say the number is odd number are you seeing any pattern here the last one that contains four digit it will be all right yes good so if you see the last bit if the last bit is zero then it is even number if the last bit is one then it is odd number sir can I say we are not required we are not required to okay we are not required to work with the remaining operations suppose if you take the number called five what is a binary equivalent of this 0 1 01 we are going to focus only on this bit now what I'm doing is I'm performing UND operation with zero I think you know already about this UND operator so if you perform under operation with one one and one result is one remaining everything will become zero sir that's why we are making these bits as a dummy we are focusing only on this bit sir one is it zero no if you are getting nonzero value then please consider it as nothing but what OD if you take this number four so 0 1 0 0 perform under operation with one so if you perform under operation with one zero and one result is zero of course remaining thing definitely zero will be there so is it zero right then it will become even number I applying this logic so you can take any big number sir 1 1 1 0 1 0 0 0 1 1 1 1 0 0 0 0 1 1 1 so you can take like this but we are focusing on which bit sir only this bit remaining things we are making dummy by performing under operation with one one means previous all the bits will become zero only this last bit will become one so that what will happen we are not required to focus on the remaining bits based on the last bit we can decide sir is it benefit or not yes how much time it is taking for this number same time will take for this number because in this we are focusing on the last digit in this also we are focusing on last digit rest of the digits we are not at all considering into the logic so this is nothing but by using bitwise operators we can able to improve the performance that's why there is one topic is there with name bit manipulations in the first module we are going to cover this see even in your data structures related problems in the real time if you are getting any problem if there is a possibility to do by using bit manipulations simply you can apply your efficiency of the program is going to be improved okay this is nothing but the conclusion what we have I hope you understood the logic behind this this is the second way of doing solving this problem sir are you clear with this terminology please confirm sir please respond these many people are there only one or two members are responding not correct correct I request everyone to please open your mouth and speak otherwise you can use chart window is it clear yes sir right now sir I want to run this code I want to uh execute this code so same program you solved by using method one can you please give some tab space and solve by using method to here also give some tab space and solve by using method two what is that method two we are going to give same thing I'm going to take here in this method to I'm going to take this operation what is that operation I'm doing n and operation with one if it is equal to zero then it is even if it is equal to non zero then it is odd when compared with this expression the evaluation of this expression will be very fast because here you are doing modul division n should be converted into binary so two should be converted into binary that percentage operator also should be evaluated based on binary algorithm but in this case what is happening n alone you have to convert it into binary ENT will work only for binary numbers one is also a binary number so instead of three conversions we reduce it to only one conversion is it Advantage feature or not yes if you execute the program same output only we will get but efficiency wise there is a difference are you seeing so for the given number five both methods are wring order for the given number six both methods are wring even this is the way how you can able to check whether the given number is even number or OD number a small application don't worry in the bit manipulations again I will repeat this because it it is a demo session that's why I have taken a simple example for this everyone feeling comfortable up to this please confirm yes sir please confirm friends yes right so one more one more concept I'm going to demonstrate like um have you observed uh yesterday maybe we covered about this recursion just I have given the outline let me put some more effort on this recursion recursion means generally uh it is something like uh method calls method calls so calling a method by itself is called as recursion if you are calling a method by itself then that concept is called as what recursion sir okay well and good fine it is it is it is working properly no issues at all I know about this but in the recursion there are so many hidden points are there for example consider I want to print I want to print natural numbers I want to print natural numbers from one to5 this is my requirement can I write a recursion code for that yes sir you can you can take it as a method so method of I will pass the number called five so here so it is not going to return anything I have taken the method and inside this we are printing that number like system do out. system. out. print Ln of we are printing n we are printing n and I'm calling this method for n minus one so first time what is happening here the given value is five the control will go here sir you given n value is five it will be calling a method by passing the input as five then what is output two lines are there first line is what it will print that value which is nothing but five second line is what it is calling the same method by passing 5 - 1 which is nothing but four so one more time it is going to call from here so again it will be called Sir now what is the latest value of n it is nothing but four sir it will print four and then it will be called for 4 minus one which is nothing but three again it will be called it will print three so M of 3 minus 1 is nothing but two it will be called again it will print two and M of one it will print one and M of zero sir can I continue from this no we have to stop sir I have going to write a base condition if the value of n is equal to Z please come out from the function don't stay in the function it will come out from the function that's all sir it will print all these values if you want let me execute this code and see what is happening uh sir here void type is not allowed here because it is not rning anything s we should not take because when it is rning something then only you have to capture the result now you can see Java C test. Java Javas space test are you seeing we are getting 5 4 3 2 1 like this the numbers are coming in the reverse Direction not in the forward Direction okay so whatever logic we have given it is printing the natural numbers okay it is printing the natural numbers from 5 to 1 5 to 1 sir I want to print 1 to 5 so so then how you can able to do do you know whatever recursion I have implemented now is nothing but sir do you know it is called as it is called as tail recursion tail recursion so tail recursion means it is keep on executing it is keep on execute this kind of recursion is called as what tail recursion I think the concept is very clear for you up to this do you have any doubt friends please confirm everyone can you go back to the definition of Rec see at a top level don't go in detail because we have a separate recursion topic is there minimum 3 days we are going to discuss on that there you'll get much Clarity just to see at top level okay thank you clear any doubts right sir this is okay but my requirement is I want to print one to five do you know in the recursion there is one concept is there you can remove this print statement and you can put after this so this type of recursion is called as non-tail recursion non tail recursion yesterday somewhere I covered backtracking backtracking will comes under this situation only now let us see what output it is going to print previously the output is 5 4 3 2 1 now are you seeing 1 2 3 4 5 so how it is working that is the very very important scenario here see the diagram I I'm passing a number number is equal to five I'm calling a method called M by passing n value as a five sir sir is the number is equal to zero no so we are going to call this method by passing 5 - 4 so internally it will maintain a stack in that stack that method call related information will be there so we called a method with n value as what five it will keep it in the stack then we are calling M from this again it will be redirected to three so it will register this values we are calling a method M with n value as a four and this one is going to call M of two so here your n value will become three on calling of three only we got a two and here M of it will call one so your n value will become two so now so it is going to call M of zero your n value will become one but whenever n value is zero it is coming out it is coming out have you observed first line executed second line executed it is coming out previously this line executed from here the control is going here it is not executing this line this is very very important sir we came out from the recursion so so students are going to feel because of the return statement if the control is coming to the main function means again function won't execute that is a false statement sir please make sure that is there any recursive calls after recursive calls is there any statement if any statement is there it will never execute when recursion is going on that's why what will happen at the end it will execute so how many times how many times you call this those many times what is the reent call n is equal to one delete this entry from the stack and print one first time completed second time delete this entry and print n value delete this entry and print n value delete this entry and print n value delete this entry and print n value have you observed like this we are going to get so this kind of concept is called as tail recursion and non-tail so the first one which I explained from 5 to one printing is nothing but a tail and this one is nothing but what non tail don't worry in detail about this we will discuss in our upcoming classes you people are going to get much Clarity but just for example sake I'm explaining at a top level friends please confirm clear up to this clear everyone please confirm clear right sir so with the help of recursion we can able to solve many problems like this we can able to solve many problems like this so now uh do you know if you want I think you have seen this kind of scenario decimal to Binary decimal to Binary conversion next and after that decimal to octal octal conversion so decimal decimal to hexa decimal hexa decimal conversion okay so uh these kind of things will become not only decimal to this decimal to decimal to any conversion any conversion any base conversion any base conversion you can do by using recursion these statements will become very simple sir if you want a simple statement written n percentage base okay so plus so 10 into okay 10 into 10 into so again we have to call the method by passing n by basee we will see this formulas later so if it is decimal to Binary conversion we are going to write the formula like n percentage 2 plus 10 into we are calling a method by passing so n by 2 so if it is octal if it is octal then formula is the same if it is a hexa decimal also same formula if any base also same formula only thing is if it is octal we have to take eight if it is a hexadecimal we have to take 16 the formula Remains the Same this is nothing but the power of recursion here we can take any base like this we can able to implement this is nothing but the beautiful concept which is there in the recursion majority of the problems we can able to solve very easily by using this recursion sir everyone feeling comfortable up to this whatever I covered please confirm clear guys yes sir right right sir so almost uh you got Clarity how I'm going to explain this yes I have a question sir so suppose if I want to convert from ex decimal to decimal this system will work or not recursion logic won't work you have to go with some other Concepts okay yeah right so uh these are the demo sessions whatever I have taken so from now I'm going to start our regular syllabus from this point of time onwards the regular syllabus I'm going to start so before starting the regular syllabus we have to understand some few things nothing but something like introduction introduction to Java because if you don't know anything about Java like writing the constructors assigning the data members these things so in future implementation of the algorithms will become very difficult there we need to focus completely on the algorithms and structure everything not on programming language that's why just to refresh your knowledge I'm giving some sample example programs purely on Java so first example program I think you know very well how to print a simple message on the screen in Java how to print sir very easy we have to write a class compulsory without class we can't write any single Java program so class test so public static void Main and if you want to print any message so we have to take system.out.println off I'm printing hello DSA with Java so this is nothing but a simple Java program which is used to uh print a simple message on the screen now I want to compile this Java program Java SE test. Java Javas space test as you can see the output what we are getting here is nothing but hello DSA with Java like that we are getting a message this is the way the first program how we can able to print a message on the screen how you can able to print a simple message on the screen I think everyone can understand this scenario it is a very easy only there is no difficulty here now I want to go with the next concept the next one what we have here is Sir do you know I want to take one Java program which is going to have one data Member One data member maybe sir I'm going to take a separate class for that like class demo any any name you can take class demo I want to declare uh one data member for this what is a data member I'm taking is integer x x is the data member here data member like this I'm using so I want to set value for this data member how you can set can I take a function method called set X yes you can give some value and that value will be assigned to the current data member can I get the value yes you can use get X which will return the value of current x what type of data X is integer that's why the return type is integer do you know this method is called as setar method this method is called as getar method like this I'm using setar methods and getar methods to set the value and to get the Valu very simple approach now for this demo class how many objects you can create you can create any number of objects assume demo obj1 is equal to new demo I'm creating obj1 do set X can you please set trible one as its x value and I want to get that value how to get obj 1. getx now if I execute this program sir what output it is going to return it will return return that x value here okay one second please wait yeah sorry for the delay sir one emergency call from office so please confirm am I audible yes yes sir right sorry for the delay now you can see here sir uh I used one I created one object like obj1 is equal to demo and by using this object I'm calling which method set X method where I'm going to set the value called Tri one I assigned one value for that X variable and I returned that value I mean I'm calling get X get X is going to do which activity it will return return the value which you have set so this method the method which is used to set the value is called as set method and the method which is used to return the value of that particular attribute is called as getter method I think already you have studied this in your Java regular classes that's why we got output like Tri one sir can I take same thing like okay demo obj2 is equal to demo obj2 is equal to new demo obj2 do set X off I'm taking tri2 obj 2. getex I'm calling so in this case what will happen sir it is going to set the value and it is going to get the value it will set trible one and it will set it will print tri one it will set tri2 and it will print sir I want to create one more object as many as objects you are creating as many as objects you are creating it will keep on setting the values and it will keep on printing the values like this in this example I'm trying to explain how set our methods and get our methods are going to work beyond that nothing is there in this scenario sir but slowly we can remove this setar and getar methods that part I will explain later can you please confirm friends up to this whatever I covered do you have any doubt please confirm clear sir everything is clear please confirm everyone yes sir everything is clear right so now I don't want this getar and setar methods every time generally uh what will happen do you know if you want to assign any values we will be we will be forgot but if you want to get the values we will put more Focus so setting the values sometimes you may forgot that's why Java is introduced default values concept also but while getting definitely you will ask so that's why what will happen sometimes the user may forgot to set the value like this so in such a cases what will happen nothing will be happened if you are not setting any value sir it will give default value like 0 0 but sir I have value how I can able to set without using setar methods is there any possibility to execute automatically yes at the time of creating object at the time of creating object you can pass the values so do you know we can replace this setar method with Constructor what is the purpose of Constructor Constructor is a special method which will execute automatically so Constructor is a special method which will execute automatically okay so we are not required to call explicitly automatically it will execute and it will initialize the values whatever you have given that is nothing but the beauty of Constructor what we have okay so these Concepts also already you have seen in your uh regular Java while learning regular Java set okay so do you have any doubt up to this replacement of setar method with the Constructor any doubt please confirm sir please confirm everyone clear up to this right sir so next example sir I don't want to print this getex simply I will print object it should print the value of x whatever you have assigned sir generally when you are printing the object is it going to print the content no in Java when you are printing object they have implemented some internal structure in such a way that it will return that particular object belongs to which class and memory address of that particular class have you observed demo at the rate 1 DB 9742 this demo is nothing but class name at theate is nothing but what symbol and this is nothing but the memory address what we have like that we have so this is nothing but how you can able to assign the values sir I don't want this I want content if you want a Content there is one more approach is there we have to write code for that can anyone tell me what is that approach friends while printing the object I don't want a memory address I want want to print its content tell me we in Java so there is one special method is there with name so Public public void sorry public string two string method is there so if you override this written x value is equal to plus this do X in this case what will happen when you are printing the object it will check in that particular class this object belongs to which class demo class in the demo class is there any two string method yes it will execute that so in this two string I'm rning the value of x so that what will happen when you are printing the object it will print information like this so this is nothing but uh the prerequisite for this DSA course what we need in our upcoming classes we are going to use these kind of techniques continuously this is nothing but what we have sir up to this do you have any doubts please confirm everyone clear please confirm everyone so that's all about today's session sir so with this all the demos has been completed all the demos has been completed from Tomorrow onwards from Tomorrow onwards I mean tomorrow there is no class so from Monday onwards we will have the regular class those who have paid the fee we are going to share share a new link for you people so don't delay don't delay uh for this registration because if you register on Monday afternoon onwards so it may take some time for verification all these things so try to clear the fees due by uh Monday afternoon before Monday afternoon so that so our team is going to share the new link for you people by Monday afternoon okay yeah actually I have some uh few doubts yes you can one second second sir paa paa sir um those who have paid this uh fees so today I'm going to share the uh uh uh details for them okay today we are sharing videos as well as material so as you have seen in our previous class how we shared in the same way you will receive okay yeah sir please carry on who is asking question yeah yeah this is Rakesh yeah tell me sir so the doubt is regarding this explanation you know the basics are fine you know up to the basics are fine whatever the things that you explain is clear but moving forward to the another topics like IRAs and deep diving the concepts so will you explain in the same way that you're explaining right now because we need a promise from you concepts are so clear to explain like this sir 100 100% sir see demo means that is the RIS that is that is called as demo right so because uh see in the demo what you people are going to expect not subject yeah right you can't expect subject in the demo because directly if I enter into the subject then already you know DSA because you don't know anything you are coming from zero knowledge background so like that we are going to feel and we have to start the course so these demos are going to be you have to concentrate in this demos how faculty is explaining can we able to follow that faculty teaching so that diagrams the way of explanation the communication is everything is okay or not these parameters you have to check okay in which style I explained these four or five Demos in the same style the classes will be there sir some topics still slow I'm going to explain and there are some topics which I'm going to increase some 1.0 x speed okay so easy topics with little bit point five like that I'm going to increase the speed but there are some topics which I'm going to explain little bit slow don't worry you can get that I can give promise on that in which style I explained the demo in the same sty it will be there clear Rakesh yeah yes thanks any other queries small clarification so I know only basic Java is it good to take this continue this course or still uh sir whatever programs I explained in the ending like five programs you can able to follow it right yeah yes that is sufficient sir okay I mean need to brush up the set getter I'm not sure so no problem problem now you got some idea right yes yeah method how to create object these things if you know then sufficient okay when when you are getting anywhere struck you can feel free to ask that sir I am not getting that point can you please tell me so that I will take one or two minutes time I will explain so that next time it won't be there in your mind okay okay so another small clarification since we have three days of time to go for these classes do I need to brush up any concept before we start these classes nothing nothing is required sir I will start from the scratch okay thank you uh sir one small clarification are you able to hear me yes yes yes tell me yeah so now what you're telling it is clear but uh can I get the promise like till end means like whatever up to trees and GRS can we expect the same Clarity because uh somewhere earlier I felt like not uh recently long back some of the people will give demo nicely with whatever the things they prepared once it started the class in between it might be time constraint or might be lacking of the understanding of the concepts over they like it is like uh byting something and telling something it is not like that much clear I can I can understand even uh uh I got some feedback like this uh uh uh from the students of course regarding other faculties so not in oura somewhere else but please make sure every code with my own hands I'm going to type and I will explain in the diagrammatic manner uh that's what I'm giving if you are feeling anywhere difficulty you can interrupt me again I will re explain that don't worry at all so it will be like that only okay so till graphs means like whatever the course you promised entire thing will be covered with clear I understand aray like you might go with Foster weend think because because of the time con that I understand but data structures what you promised everyone will get the Clarity by end of the class that you can give the promise right defitely I can give that promise no worries at all and actually I thought like by this demo you might uh cover uh some time complexity kind of thing based on that I can assist and I can uh come actually I'm not focus completely focusing on time and space complexity okay I'm not completely focusing on time and space complexity space complexity maximum I will ignore one or two problems I will cover on Space complexity time complexity just we are going to provide only theoretical part and in upcoming algorithms whenever I'm developing any method so for that how to calculate time complexity in the oral manner I will explain because if you see insertion of an element at the middle in the link list so first I will explain that algorithm I will write the code so for that how much time complexity is required we can able to assess directly so theory of computation calculating the complexities Astic notations this is a separate agenda sir theoretical part correct we won't deviate and even so I can able to explain that in the demo sessions but the bigger problem is if I explain that in the demo session so at last only one or two members will be there in the class because the people without knowing anything they are going to comfor demo right okay the very beginning if I'm giving such type of complex things like some sometimes I need to draw the diagram like f ofx g ofx and how the function growth will be so definitely they want to come because something like they are feeling it is a mathematics okay that is the reason so I need promise from you because so many times I felt that demos will be nice because they want to Acra the people that is their attention right no no no I think in duras sa such type of things are not there sir paa sir paa sir is there right paa sir yeah I am with with right I did P so I'm in his current Java course and right now I'm in D course so he explains things clearly that's why I'm here I'm right now in Canada yeah so he is my student actually for the almost four batches he's there so he registered for python DSA with Java DSA with python and like that okay okay okay yeah right okay guys thank you I have another batch at 7:30 thank you so much see you on Monday for the regular class thank you guys yeah actually there is one doubt yeah please so up to how many month the recorded sections will be able to access six months from the date of you making the payment from that date six months okay these things will be available in the YouTube no no no we will share a Google Drive for you okay Google Drive Drive can expectance data structures when we can expect that uh sir as of now no sir maybe in the month of August or September like that we are planning okay not immediately means what you will cover as part of AD data search problems problems will be there in that because if you see in the stack we have some limited 10 to 15 topics with examples so on stack we have more problems are there right real time problems all these things that we are going to elaborate that's all so means like based on each concept you're are going to uh cover more number of problems there might be competitive problems which are coming in the as part of the interviews outside yes yes 60 to 70% problems will be there in that so and if we miss any class then we can get the video of that particular one right yes yes you will get it any we are uploading see videos by default will come into the your drive once if the class got completed supp if you are missing today's class before coming to the next class you can watch that video after completion of the class with within one or two hours that will be uploaded okay okay you can just you have to check the date and time uh time I mean sorry not time date suppose if today's date 1 1 12 2024 they will give the title as this date suppose if you are missing today's class just go to the date and then you can watch okay okay okay so you're are going to upload this to also to the YouTube today right yeah this video will be uploaded in today's session okay okay thanks right sir thank you sir