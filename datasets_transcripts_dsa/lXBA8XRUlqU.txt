hey guys it's greg i'm back with another course review and today we're going to be looking at the data structures and algorithm specialization by the university of california san diego on coursera man that was a mouthful so essentially this is a set of courses that is going to really teach you data structures and algorithms other words that you might have heard around this are like lead code style questions or hacker rank or maybe algo expert if you've heard of that paid program by clement you know competitive programming there's many different terms for this it all means data structures which is like you know data how do we store data and algorithms you know a set of rules which we perform on that data some data structures you may have heard of are say hash maps and dictionaries lists arrays you know there's so many different types of them you're going to learn about all of those and the algorithms like you know divide and conquer greedy algorithms there's so many different algorithms as well and they're going to teach you about all of this stuff to the level that you need to know and i don't think past it and regarding programming languages for the specialization they're going to teach it generally and then allow you to do the algorithmic assignments in whatever programming language you want python c plus plus and java i think are the three that they have and those are you know that should be easily enough i bet most of you are probably going to do it in python and then the other ones of course if that's your tool as well then go for it so you may or may not have heard of these terms runtime complexity space complexity or big o notation this is essentially a set of ideas and mathematical tools that is used to analyze you know how long an algorithm is going to take or maybe how much memory it's going to consume they're very important ideas which is used throughout all of like leap code problems hacker rank needed by the fang level companies in those interviews to solve those problems and just to be a better programmer because you will need to write optimized code and without knowing what it really means to write optimized code and the data structures that are being used to do that well this specialization is going to really help you learn all of that and let's take a look at it in depth now so over here they have master algorithmic programming techniques advance your software engineering or data science career by learning algorithms through programming and puzzle solving ace coding interviews by implementing each algorithmic challenge in the specialization apply the newly learned algorithmic techniques to real-life problems such as analyzing a huge social network or sequencing a genome of a deadly pathogen so that sounds pretty cool they give you a sneak peek into some of the projects that you'll be doing and let's get into it so essentially straight to the courses so course one the algorithmic toolbox very good ratings this online course covers basic algorithmic techniques and ideas for computational problems arising frequently and practical applications sorting and searching dividing conquer greedy algorithms and dynamic programming we learn a lot of theory this is a theoretical course okay keep this in mind it this stuff is a lot of theory but it's really important theory and doesn't go into the useless stuff so we will learn a lot of theory how to sort data and how it helps for searching how to break a large problem into pieces and solve them recursively when it makes sense to proceed greedily how dynamic programming is used in genomic studies you will practice solving computational problems design new algorithms and implement solutions efficiently so that they run in less than a second okay that is hands down the best description i've ever seen for a coursera course they very clearly tell you yeah you're going to be learning about these various algorithms and the algorithms that should be looking at it's not too much into the graph stuff you didn't see the word graph here and that's because graph algorithms will come later but this is a very very awesome way to start it out people loved it very high ratings if you cannot get through the entire set of courses i would at least recommend doing this course it's going to really really help no matter what kind of programmer you want to be next up in course 2 we have data structures now just to look at the ratings for a second you can see they both have an average of 4.6 stars which is probably the average on coursera in general it means it's very good and don't be worried about the number of ratings drop off like we have 7000 or so less ratings here but that just means that many people did not get through this course because they gave up too early and never saw this course so people love this as well a great course a good algorithm usually comes together with a good set of data structures that allow the algorithm to manipulate the data efficiently in this online course we consider the common data structures that are used in various computational problems you will learn how these data structures are implemented in different programming languages and will practice implementing them in our programming assignments this will help you to understand what is going on inside a particular built-in implementation of a data structure and what to expect from it you will also learn typical use cases for these data structures sorry for the jump that description was not very helpful so i had to jump into the course here and show you we talk about all of the com data structures so it starts with arrays and linked lists then stacks into queues and then trees and then you can implement those in your favorite programming language for their assignments that is all in just week one week two goes a little more complicated dynamic arrays and amortized analysis very important stuff and we do an assignment there so week three priority queues an introduction heaps of course which is pretty much priority queue we have heap sort for priority queue and you know i'm not going to go into the rest here so sorry for the jump again essentially you're going to look at all of the common data structures and algorithms in course 1 and course two so what could be left well actually a lot still they didn't really include the idea of graphs before so i don't want to get too into this but basically what a graph is well if you take the word facebook here or also network basically a graph is a good way to generalize the idea of a network and so a social network like say a person they have friends with all of these people and each of those people well they have friends with all these people forming what we call in math or computer science a graph now that might be confusing especially if you've taken some of the analytics courses you would know that a graph generally a two-dimensional graph has an x-axis and a y-axis that is not what we're referring to a completely different idea a graph is essentially a network or like a social network we have nodes which are not like say a person and they have edges which is say the relationship to their friends that is a graph and that is what they're referring to here also graphs you really do see all over the place when you're coding anything you will find much of the time hey this is actually a graph and you wouldn't really know that and you wouldn't know the tools to perform with that unless you were to take a course like this so i definitely recommend getting this far to course three it is really really useful moving on to course four algorithms on strings now it's kind of a weird one because like well a string what actually is that well generally a string is just an ordered sequence of stuff and you might be surprised at the very vast and extremely difficult at times algorithms that you would need to perform on strings to get the most optimized or fastest answer and so they're going to talk a lot about that these are also one of the most common things to ask for any level of company actually especially lower level companies kind of easier like medium level jobs they are going to really commonly ask algorithm type questions on strings so definitely try to get this done as well okay course five advanced algorithms and complexity this is where i start to see a little bit of a drop off in my opinion as courses one to four i'd pretty much consider essential and from there you can probably go to league code or hack a rank or whatever kind of platform you want to use to practice practice a lot and get pretty good at this stuff course five here you know i would say that if you're doing this whole specialization that you might as well go through it of course there's some material in here that is interesting and you will learn and get a better programmer out of this but i think there's a little bit of a drop off and so if you aren't planning on doing the certificate getting the whole specialization here then course five may be a bit of a drop off for you and i would mostly just practice after course four but with that being said you know this uh some of this more advanced stuff is what can really take you know uh that extra step to get some of these jobs so just letting you know that's my opinion and course six to finish it off not gonna go into the details you do a cool genome assembly programming challenge i'm not really going to worry about that it's cool stuff so what do i think about this you know really good courses one to four i think it was phenomenal getting a great introduction to the algorithmic toolbox and all of the common algorithms and then data structures all the common data structures after that they give you a dedicated course on graphs and a dedicated course on strings as well this is going to really really help you on your pathway to getting a software engineering based role and i think it's a great set of courses and in terms of the certificate it holds a lot of value to get a data structures and algorithm specialization that actually has this much there because most of these sort of data structures and algorithms courses don't go that much in depth but this one goes pretty in-depth you're going to know this stuff really well at the end of it and you're able to take that go off to leak code and hack a rank and whatever so again in terms of software engineering jobs pretty much all of them are going to greatly benefit from your skill set here many of them are going to ask sort of leak code or hacker rank style coding challenges in which you can take the skills that you've learned here go off to leak code and hack a rank and really practice this stuff so that you can nail that portion of the interview process of course the link to this is in the description below if you're interested in it otherwise you know have a great day i really hope that you have a good week or weekend or whatever it is and see you later guys