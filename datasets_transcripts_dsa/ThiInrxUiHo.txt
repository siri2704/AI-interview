Hello friends, welcome once again to what is data structure, how will data structure be implemented and what is the . you want then you also come. Many times children ask me this question that Sir Top Most. If we consider MNC or top 10 MNC, then how can we fulfill their requirements for internship or interviews, what are their requirements , what type of interview questions are asked in the top most cases, then you see do not understand what is the reason for reading this paper. We understand it from the name like No Doubt, Data Structure and Algorithm, so often children get confused that Sir, where will we implement these subjects further, so let me. Let me connect this a little bit to AIML Deep Learning or Data Science. You know that Machine Learning is the best among all the algorithms of Deep Learning. Data plays an important role. Without data, it cannot be possible that you can implement any algorithm of AIML and it teaches you how to manage data. It teaches you how to manage data. The name of data structure is clear like structure of the data inside the memory. So believe me, this is a subject which is required for you to go into any field, be it the field of AIML, whether we talk about web development, whether we talk about mobile application development, you must know the data structure and algorithm. And for this reason, every top most MNC, be it product base or service base, like the companies, like is the only concept on the basis of which you can crack your dream company very easily, so let's start with the great course and here. But we will decide how to decide our path to reach our dream company. Now you see one thing here, listen a little carefully and understand that if you are preparing for internship or interviews in a company. If you are thinking that I want to do an internship in a company or I want to do a job in a company, then here you will have to keep some things in mind because to reach the company, you will have to be focused, dedicated and work hard. And most [Music] Our schedule for today will depend on three major factors viz data structure and sec. Step by step, once we are clear from why, then we will come to what is data structure, how will we define it, if we are asked in an interview because tell me what is data structure, then in what efficient manner can we explain it? This will be our second concept which we are going to discuss today and the third most important concept is how to learn it is using Java, how will it be learned with Java, so the first question is whether data structure is a language or data structure is any other. What is hardware, data structure, software, what exactly is this? So today we are going to talk about all these concepts, so here you see, if we divide this entire topic into two different parts, then individually we will know the meaning of both of them. Right, we know what data is and we also know what structure means. Right, any individual entity is called the data. Every individual entity like your name can be a data, your mobile number can be a data . Your roll number can be a data, your address can be a data and you see data is one of the most important entity in now a days you can imagine any software without data every software requires a data you understand why data is stored This is done so that when we have a requirement, that data is quickly available to us. So, in how many different ways can the data be saved in the memory? What will be the structure of that data in the memory, when we save the data in the memory and you See, there is no concept of language in this because every software saves data in memory, whether it is implemented in Java or whether it is implemented in .NET, after that you will understand that when you do programming, when you develop software. No matter in which language they do it, you will understand how data can be stored in memory efficiently and when we talk about storing data in memory, the most important concept here is what is the Structure of the data, with what structure is that data properly saved? Think for yourself, if we arrange any item at home, then we arrange it in such a way that when there is a requirement in the future, we can easily search it. Not like this. That we have not posted anything anywhere and if you store it in this way then you know that next time when you have a requirement, you will have problem in searching, then this same concept is implemented in the IT industry and you understand this whole concept. I am going to explain to you with real life example that where in real life example means where in IT you will get the implementation of this concept, then in the first step we talk that this entire paper is only about It only talks about how the data is to be stored inside the memory and this is all about this paper so why read this paper I hope you have understood okay what is the data and what is the structure of this data Inside the Memory, this entire paper will tell you multiple ways: You store data in string form, you store data in queue form, you store data in are form, you store data in linked list form, so these are so many different ways. You store data in tree form, you store data in graphical form, you store data in hatching form, you store data in variable form, then you have to understand that when you have so many methods, then what is the efficient manner, where and who. This method would be better to store the data. start studying any subject and especially if you start studying data structure then do not be afraid of the algorithm. In the beginning this algorithm has to be of little complexity, continuity has to be maintained and just keep reading. Now you see here. Let me tell you one beauty of this subject, one of the most beautiful thing about Data Structure and Algorithm is that here logics start becoming automatic. See, many times children come with questions. Many times students come to me saying that Sir, you We understand what is being taught but our own logics are not able to be built up, so if you have studied this subject honestly and with full concentration and focus, then I am sure that After completion of this course, your logic will start becoming automatic because all the algorithms and concepts that we are going to study here are implemented somewhere in real time applications, so what happens when we study the data structure very honestly. Let's take it and when it comes to its implementation in real time application, then you don't have to think, then automatically the logic will come in your mind that okay man, we can implement this algorithm here, we can implement this algorithm here but There is only one thing for that, you I hope you will understand why data structure and why this concept is most important in the industry that why every software. Data structure implementation is required in OK, so we just talked about Y, that is, Y data structure, OK, but now if we come here, what is data structure, now you see, I will come to Java after some time. Because in the first step you have to understand that see, this is not a language, data structure is not a part of Java, it is not that we are studying any topic of Java, data structure is only a concept, you must have heard it many times in the classroom. Friend, if your concept is not clear then data structure is a concept, what does it mean, data structure tells you ways of thinking, concept means thinking, thinking, so what is data structure, when we define it, then you see in a single line. The most important definition about which I am talking is how will you define the data structure in a single line. So immediately comment in the comment box and tell me how will you define the data structure in a single line. So let us define the data structure in a single line. Let's focus on the most important second word : How the data is to be stored inside the memory and what is the relation of the data with other data. Data because unless the data is related to each other, there will be no data structure implementation. Now what is the meaning of relation? Now let me explain to you with a small example. Suppose if I told you that I stored a data 100 b. = 200 c = 300 Okay, I have stored one data. Okay, if I had to keep the data, then I have declared three variables. Right now we are going to talk about data structure multiple. It is divided into categories: Primitive Data Structure, Non-Primitive Data Structure, Linear Data Structure, Non-Linear Data Structure, Static Data Structure, Non-Static Data Structure or Static Data Structure, Dynamic Data Structure. We will come to all these gradually but first let us understand the concept which is the definition. Now I have said, what does the definition say about the data structure, how the data has to be stored inside the memory, so sir, the data is also stored, but again again the definition also says, what is the relation of the data. With Other Data: So you know that whenever you use a variable in any language, for data storage, whether it is Java, whether it is C or C+, when you use a variable, then how is this variable allocated in memory? Let's assume that if this is your memory then when will be the memory allocation of a, then assume its address is 1028 because when every variable stores memory, it has some address and it is in every language, this is also confirmed python2 28 But when B is stored in memory, its address will be 9016, when C is stored in memory, its address will be 8176, so you see what is happening here, these addresses are not connected to each other, so implementation of Data structure here I can't say yes data is being stored in memory but there is no relation this variable has no relation with this variable so searching will be very difficult for me that if I am here and I have to reach c So how do I access it because there is no relation between the data, so storing the data in variables is data storage, but you will see that when any bulk amount of data is stored, suppose if I told you suppose 10000 products. If you want to store key information, then variables are not used in any language. We are going to use true type of structure where we get relations where searching is easy. Can we declare 10000 such variables? If you have studied technologies, if you Know the CCPP concept If you know the core Java concept if I tell you to store two numbers then you will use variables but if I tell you I have to store 5000 numbers or 5000 pieces of information you will never go For the variable because you know that if you use the variable then the management of this variable is very complicated then the data structure also does not talk about this because this definition itself is not fulfilling the data structure because what does the definition of the data structure say? How will the data be stored in the memory and what will be the relationship between them? So if we talk about the relationship, now see if I do the same thing by creating 'are' in any language, if I declare 'are' as 'right' then this is the memory allocation of 'are'. Do you know how it happens? We know that whenever it allocates memory, it always allocates memory in sequence. If its address is 1012, then 100% it will be 1014. If we consider the address as two byte by byte, then 104 will be 1016. It will be 1018. If you consider the address of two bytes, if you consider it to be of four bytes, then the memory allocation will be accordingly. It is important that this is the sequence memory allocation and if you have done programming then tell you how easily we can do it. I can move around, if I am here and I have to go to this location, then it is very easy for me, but five variables, 10 variables, 50 variables, 100 variables, how will I move, how is the data to be stored inside the memory and what is The relation of the data with other data, so I can say that it is an example of data structure. It fulfills the definition of data structure, but with its limitations, now see if we talk about it in Java, then what is it in Java? How is the nature? Hey, memory is allocated at run time. In C, memory is allocated at compile time. In Java, memory allocation is at run time, but the nature is completely static. Be it C, C+, or Java, whether the memory is allocated at run time. Do it, but before storing the data, you have to tell the size, then it will store the data in the relation form but of a limited size, no matter what language it is. You know that even in Java, when we declare Hey, then how is Hey declared? We write something like this: Integer a, then you have taken the limit in n, then we write something like this, a = new integer of n, then no doubt you have allocated run time memory, but the size is fixed, isn't it? memory is that of five The advantage of allocating is that the exact memory is allocated as per the size you specify. No doubt, this is an advantage in Java which is not there in C that in C you have to tell the size in advance but there is a disadvantage too. The disadvantage is that the size has to be specified in advance, but if I want to implement such a data structure, where the data comes at run time, run time means I have given data, memory is allocated, I have given data, memory is allocated, then we Will give data, memory allocation should be right, so in this way, if you want to keep the data in memory where there is no pre-defined size, where there is no pre-defined size, as soon as my data comes into the memory, it will do the allocation thing. If you understand, then here again it is said that you should store your data in the form of link list. Store your data in the form of link list. Right now, you create a space of your own and store the data, no matter what the type of data is. It can also be an integer, it can be a string, it can be a character, it can be a decimal, but you do the implementation in such a way that the data comes and you create your space, store the data, then the data comes. Create space , store the data, then the data came, you create the space, store the data, but the space creation that we are talking about, when this space is created, then it is obvious that I will create this space at run time, right that this Space CreateDrawNavigatorNode Actually okay, so this note was created. Now when you created this note, you see here, if you understand, it is okay, then every note of yours has an address in the memory, but you are also seeing here that I have written even though they are together. But all the addresses in the memory are different, sir, then how can you say that Linklist is an example of data structure. Look at this, try to understand both Linklist and Linklist because when we implement the data structure, then So the background data structure will be our array or the background data structure will be our include, but what is the limitation of using array? Have you understood that the head size will remain fixed? No doubt, we will also see some other implementations in Java. We will talk about collection, what are the methods of collection? They will see how it works, but first understand the concept, you are fine, so here when you are talking that sir, if I allocate the data in this way, create memory and keep the data, then I am not actually creating memory, what to do? I am node but on this also I have to implement the definition of data structure, how the data is to be stored that is ok but what is the relation so what will we do for the relation, we will give this address to it, we will give this address to it, okay We will give this address to it and the last 8 will be 1 and the address of the last one will be null. Suppose right, so now I can say that all these nodes are connected to each other and keep creating nodes like this, keep storing the data, a note will be created and the data will be stored. A note will be created, the data will be stored, there is no limitation, there is no pre-defined size, you have not told but just want to confirm here that sir the list is starting from here or from here because I know that the first element is at zero index. So what we will do here is that we will name the first node as start, so this has become my list and I have created this list dynamically, so this is also a way to store the data in the memory. It is a list and is interconnected with each other. So that is why it is called link list, link list is again a concept by which we can implement the data structure, no matter what the language is, I am telling you again and again that here we are talking about language. Not only this, it is no doubt one of the best concept to implement the data structure using Java, now you will understand that when we implement the concept of data structure in Java, what are the best advantages we will get from it and it is a very interesting concept. It is going to be a lot of fun to read, just once we understand the concept, we will move ahead. Got it and that is why when we define the data structure, you see, we define the data structure exactly that we say that the data structure should be of primitive type. Maybe the data structure will be of non-primitive type and even in non-primitive, then we have the option of linear data structure, non-linear data structure and then after this there will be a story about static data structure and dynamic data structure, meaning we will discuss all these concepts one by one. Read what is stack and what is link link There is tree, there is graph, there is hash, these are all the ways by which you can store data in memory, apart from this method, you also have integer, float, double character, string, variable, object also, but here you see if I talk about primitive data structure. Talking about if I write integer a = 100 then what you did is store 100 in a variable named a but this is not the efficient way to store the data. Primitive data structure we use to store but minimum amount of data . For storage but when it comes to bulk amount of data storage then you have options there you will go for non primitive data structure and when we talk about non primitive data structure then we have these methods that we can use tree. We can do implementation, we can do implementation of graph, we can store data with stack implementation, we can store data with queue implementation, these are all the ways, I am telling you again, stack queue, link, graph tree, all this is nothing. But the concept stack does a different thing about storing data Why does it do a different thing about storing data Graph gives a different option of data storage Tree gives a different option of data storage A small introduction to everyone Now we But then a question comes in the mind that sir, why is this a linear non linear data structure, okay why we should say that the stack is a linear or what is a linear data structure, why you say that tree is a non linear then You see, when we talk about linear and non-linear data structure, then when will we call any such data collection as linear data structure where you know where it is starting from and where it will end, if we assume that I store the data, I know it is okay, why do we call it linear data structure? Linear data structure means sequence. You know very well that your first element will be at zero index, your last index will be n - 1 index. So you know that when the data is stored then it is allocating the memory in the data sequence form. Okay, whatever the data may be, be it string, be it character, be it float, be it double, but indexing is the same, right n -1. So you know, when you have to do traversal in it, we will start from zero index and will travel till n - 1, no matter what type of collection it is, then we can say, this is an example of linear data structure, just like this, when We do the implementation, now I have told you the link list, so what will you do, you will create a node, now node means space, actually nut means space, you are creating your own space at run time, look, you are here and the major difference in the link list is this. Hey, you have got a ready-made data structure, you did not create it, you just made a declaration and you got it in the memory and you went and started storing the data in it, but when you get it, whether that memory is allocated at run time or not. You will get the idea that you can increase its size internally at compile time. There is an option in Java too but initially its size will be fixed that it will initially be of this size, so I don't want it to happen sir, I don't want that. Make such a data structure which allocates memory of fixed size. I want the memory allocation to be according to the data that if I have given one data then the memory should also be allocated only one, then when you go to the option of link list, then when you When you went to the link list option, you came to know that here also we will have options: Single Link List, Double Link List, Circular Link List. Okay, so you went to the Link List option, but what did we see in the Link List option that here too I You will know that all these will be connected to each other and at which position the first node will start. So here also I know that I have to go from the start and go till such a note which is null if we talk about single link list because right now types of link. When we read the list, we understood both the methods. Both are linear because you know the starting and ending. So such a data structure where you know where to start from and where you know where the ending will be is called. Linear Data Structure Sequential Data Structure But now look at the definition, this also fulfills the right, I have kept the data, this is the node, I created the space, created the node, then connected it, let's say I wrote 25 here, then I wrote value here. Take 65 and then write it here. Suppose I wrote 60 again. Here I have written 85 so data storage is also happening son how the data is to be stored inside the memory and what is the relation so the data is also stored there is also a relation and this is called starting note here pe root root so It is known that it is starting from the root, but children, where is the end happening, what do you expect it to be, is it ending or is it ending, or do you know where the end will go, but the data structure is there, isn't it? Data to be stored inside the memory What is the relation Every node is connected to each other I know this is on its left This is on its right This is on its left But don't know the end Son End is multiple of this And this is still I made a small one, this is also a data structure but non-linear and what is this, this is my tree, so the tree again is an example of data structure but it is a non-linear data structure, okay, what is a non-linear data structure, where you No that from where our implementation is start but you don't know what is the end sequence so this is also a data structure and similar to this is a tree, similar to this I will have a graph, similar to this we will talk about hash table, we will say googleapis. com of the graph that if suppose I have to go from here to location It is starting but late and there is no ending. Okay, it is starting but ending is not known and you look at the graph, suppose A is destination, B is C is handy, e is okay, so here you also get a cycle so that after turning around you can come back. If you can come, then this is a graph, but what kind of example is it non-linear? Again, it is a non-linear data structure, tree, graph, hash, all these are examples of non-linear data structure, right, but when we talk about data structure implementation. You see what I told you here that you have two options to implement the data structure, linear and non-linear and the implementation of both of them will be done in the background either by using array or by using linked list if you want. Hey, if we are talking about data structure, then it will be static because its size is fixed, even if it allocates run time memory, but the size will be fixed. But if we talk about dynamic, then dynamic data structure means. Where you are talking about data storage at run time, then the data structure can be implemented in static form as well as in dynamic form. Then here it comes that sir, you told about linear data structure. In linear data structure, link is explained, but these two are also stack, why now what is this stack, see, you are seeing the small definitions of all of us and then the big bombs will be hung, then when the stack comes , we will see all the options of the stack, what is the stack? Stack is using is stack using link is multiple stack we will implement all these concepts right but now first let us understand one concept that speaks data structure you also have a method stack you can store the data in the form of Stack Now, if I store the data in the form of a stack, then what does the algorithm of the stack say or what does the concept of the stack say? The stack simply says that when the data is stored, it will follow this rule and what is that rule LIFO Last In? Fast out, if you have to collect data using this rule, then you do stack implementation and I will tell you now the example, I will also tell you the real life example, if the plates are kept somewhere, then you see, we pick up the plate which is at the top, right? Have you ever gone to a wedding, have you gone to a marriage party, have you gone to a birthday party, and if you have gone for dinner and lunch, then plates are kept there, steak of plates. We are talking about the buffet system, so what will you do with those plates? You will pick up the plate which is kept at the top first, the one who kept it, he kept it last but the one who took it is the first to pick it up. This is a real life example to understand this is the concept. Yes , I will tell you right now what to say in the interview. In the interview, give real life example only when they ask. Ok tell me what is the real life example of stack. Keep the clothes for the press. Stack is the packet of biscuits. This is the real life example. But if you think of this, Sir, what is the implementation of stack? If it is in the IT industry, the computer field must be using this tech, there must be some memory, it is definitely there, you see. If you look in any language, okay, any language, let's say if I talk about Java, I talk about C, then we use the function, right? Suppose I called a function xy, okay, in aqua, you have a In the proposal of method call pqrs7, assume this is my stack, okay this is what is my stack, okay now in this stack you have this stack, this is the memory stack, so first of all which methods will come in the stack, main then the base of main. Second Method ​ Will come out from xml, then from root and then from main. If you understand the execution, then where is the implementation of stack used? Function calling. In any language, if there are function calls, there are method calls, they use stack implementation. Recurs is an example. Off stack, so this is the concept which is already implemented that background stack is used in function calling, stack is implemented in recurse, okay so this is the example where already stack is implemented, menu driven application, if you see the menu in any language. Not that suppose if you see the menu in Excel point then such popup menus open in the menu. Okay, you came to file, went to new, went from new. If you went to popup menu, now see here, you went from new to a popup menu. Open then popup menu open again but when you close then this will close first then this will close then this will close then this will close last in first out main driven application is an example of stack. Look at your menu of Windows. Stack is an example, so here when the developers are implementing these concepts, they don't know that we have a stack concept, there they implemented the stack, now there is no barrier of language here, what did I tell you, this is a concept, this is an algorithm. This is one method, how can it be implemented then there is another method that if there is a head then q means that we talk about normal q, right q means you know that q means line then q. It means first in first out, first in first out, where you have to store data, we will implement the queue using the logic of first in first out. The incoming calling facility of your mobile is an example of queue, just like suppose, I have purchased a new mobile. Now suppose its incoming calling capacity is 20 calls or 30 calls. Right, the first call was made by me and a call came from one of my friends, right after Rajesh, the second call came from Deepesh, right after Deepesh. Third call, Fourth call, Fifth call, but when 31st call comes, if the capacity is 30, then these calls will go down, Rajesh's call will go down and then down again, but as soon as 31st call comes, Rajesh's call will go out from the history of that memory. First First Out is the implementation of the queue. Here the queue is implemented. The operating system uses the scheduling queue. The client server technology uses the queue so that when a request comes to the server, in a web application, when a request from a client comes to the server. When that client's request comes, requests from multiple clients can also come simultaneously but the one whose request comes first will be responded to first. Why is this the concept of first in first out, but here also there is a concept of priority because many There is priority in the bar queue also, suppose if you are standing at the traffic signal, now you are in the queue, your number is the first, but if the CM sir's car arrives after that time, then the priority will be given to him instead of you. CM sir is standing. But just after that, if PM Sir's car arrives, then priority will be given to PM Sir. PM Sir is standing and if the ambulance arrives, then leaving everyone else, priority will be given to the ambulance first. So there is a queue here too, but there is priority in the queue too. Circular Q, Priority Q, Linear Q, all these concepts will talk about which concept is first in, first out and its positions. I just told you and in the real life example, you can see 25 places. Q is standing anywhere, Q is on the pizza heart. There are lots of places where you see queue implementation in a cinema hall. In real life, I hope you are understanding all these concepts that when we implement data structure, then implementation of data. Structure can be done in multiple ways, all these algorithms What is a Stake? What is an Algorithm? What is an Algorithm? What is an Algorithm ? What is an Algorithm? What will be the method of implementation? Okay, the algorithm of the queue will tell what will be the method of implementation of the queue, so this is what the data structure that boss says, in this you read each algorithm and you see that the algorithm has no connection with the language. When you read any algorithm. Now, it is your choice as to which language you use to test that algorithm. So in this paper, when we talk about data structure and algorithm, we will read all the algorithms one by one, but when it comes to their implementation. So I told you that in the background it will be either in static form or in dynamic form. When we have to implement it in static form, if we have to take fixed amount of data, then we will use it. When we have to make its implementation dynamic at run time. That I don't want sir to have fixed amount of data, so we will implement dynamic data structure, okay and dynamic data ta structure implementation, we will do it by using linked list, that is why here when I will teach you the stack, I will say using the stack. Stack Using Link List If you are understanding the matter, then here now we have to talk about the concept, sir, you have explained it, I have understood, everything is clear, I think it is clear, but now the matter comes. How will it be implemented ? If I tell you how will you implement it, then here you have multiple languages. Here now comes the role of language that when it comes to implementing the data structure, then the implementation of the data structure is called C language. You can do it by using c+, you can do it by using java, you can do it by using python, okay, you can do it by using C shape, so what is data structure, there is a concept, there is a way to store the data. To store in memory but its implementation can be done with different languages ​​but out of all these the language we have chosen is Data Structure Using Java that here when we will talk about implementing the data structure these algorithms So the best choice will go with Java but now the question comes sir why only Java is good then you see there are multiple reasons for it, the first advantage is that Java is such a user friendly language that where a beginner One can also very easily implement the concept of data structure here and the second and best advantage is its rich library collection framework where we have been given implemented classes to implement most of the concepts of data structure, so it is very easy. It becomes possible for us to implement the data structure with this language. Java is one of the most demanding technology in the industry. Also, okay, one reason is because the industry is in demand. We should go for a Java concept. If you are interested in data If you implement the structure with Java, then one of your requirements will be fulfilled because most of the industry requires the people who know the concept of data structure using Java is a versatile language, it is platform independent, it has a lot of features, now we will discuss it further. If you start then you will understand but it is my opinion that this is one of the best choice to learn data structure using Java. Now here you see that if you want to implement the concept of data structure in Java then it is obvious that you should If Java is compulsory, then here you tell me what is your knowledge of Java. Give yourself marks out of 10, okay and after that we will decide whether you are perfectly ready for data structure or not, then comment immediately in the comment box. Tell me out of 10, how many marks do you give yourself we will do it using Java, so I hope till now you have understood the introduction concept, why data. Structure What is data structure How to implement it I told you in the beginning itself that we will first talk about data structure, which we did. What is data structure? What type of concept will it give you the options to instantiate? In how many ways data will be given. We have seen that it will give you the option of storage and then how it will be implemented. We have talked about how to implement the algorithms of data structure in Java. Till now we have discussed the introduction concept. Now from this onwards our one We will start by one topic, we will understand each concept, we will understand the algorithm and then we will see its implementation. So just stay with Java, keep reading in this course Data Structure Using Java and if even a small doubt comes anywhere then please. Please comment and tell us, children often have a question that Sir, when you are teaching, when we are watching your lectures, we are understanding everything better, but when we solve the same problems with our mind, then We are facing the problem that we are not solving that problem and you see, this is a very common problem, not only you, we have also faced this problem when we were in our learning phase, when the faculty is teaching you. Then you are understanding things better but when you are going to solve that problem by yourself then you are facing the problem. Okay so here today I am going to give you some small tips so that you can improve your DSA. If you can improve it at a very good level, then stop your focus a little and understand it carefully . In the first step, the most important thing is to completely remove from your mind that data Structure and Algorithm is a very complicated subject, it is very easy, it is very interesting. Okay, the second most important thing is that Data Structure and Algorithm is actually a concept. It is a concept, so in this entire paper you will have to think logically. You will have to study this subject with imagination because This entire paper tells you how many different ways you can save data in memory. Like Stack, you have one option, Q, you have one option, Linklist, you have one option, Tree, you have one option, Hash table, you have one option. The only option is graph. If you have the option, you have to imagine it. That's why if you have seen my course on Data Structure and Algorithms, you will see that I have explained every topic diagrammatically in the entire course because you do not know what is happening in the memory. It will work but you will have to take imagination from the diagram that ok this is what the stack implementation is, then when you take that imagination then you will understand a stack because the stack is working in the memory in this way, its diagram is allocating the memory in this way. However, how it is allocating the memory is a different thing right but from the diagram you will understand the stack, then you will be able to think about multiple stacks. When you understand q from the diagram, then you will be able to think about d. If you will be able to think about circular q, then try to read this entire paper by imagining it a bit, you will understand the topics very easily and the most important concepts. Whenever you learn data structure and algorithms once, then read it again the second time. Try to understand again but now you put a watch, now you try to solve these problems with time bound presentation that Boss, can I solve this problem in two minutes, 3 minutes, 4 minutes because when you are in interview? If you go for the same, then the most important thing for you there will be Time Mountain and you see , it is not at all necessary that you should be asked the same question in the interview as you have read, if a question similar to that comes and if you are from the Time Foundation. If you have learned to solve the problem then you will definitely solve the problem which you have not even studied because your logic is clear and I always say that programming is very easy for the one whose logic is clear, no matter what . Once the program comes, you will solve that program very easily, then just understand these small tips, implement them and then see how easily you can gain proficiency in data structure and algorithm. I hope you will be able to understand things. And you see, all the tips that I am giving you, children have cracked the interviews of top MCs by using these tips only. Believe me, there are many such children who often used to face the problem of data structure and algorithms. To Solve But When They Followed The Tips Right Now They Are In Top MCs Company Like Microsoft then one thing should be clear in the very beginning that here we will study the concept of data structure, we will not study Java, that is to say this. Have we seen Java as a We will use Java language to implement the data structure, that is why if you want to implement this entire subject with Java, then there are some pre- requirements and today we are also going to talk about what topics we will cover in this entire paper. Those are fine, although we will talk about almost all the topics but in the first step you should understand that if I have to implement the concept of data structure and algorithms of data structure with Java because I also told you last time that boss. Implementation of data structure can be done in C language also, can be done in C+P, can also be done in Java. If you want to implement it with python.kv, then in the first step you should understand which major topics I have to focus on in Java. However see, what is required for this entire paper is only core Java concepts . We do not require any advanced Java concepts. We do not need any advanced Java to implement the data structure in Java. We only need our proficiency in Core Java. Right, we do not require any servlet. JSP Concept and JDBC Concept and if you have heard their names then this is not our requirement, our requirement is only Core Java. Now the question comes Sir, is there any specific topic in Core Java also, then it is a request to you that you can learn about this Data Structure Algorithm using Java. First , prepare these topics of Java very well, but without these topics, if you come to Data Structure Implementation, then you will understand the algorithm. Now when I explain to you the algorithm of the stack, I will explain the concept of the stack that the stack is a LIFO list. But when it comes to implementing it, we will have two choices because as I said, data structure is static, data structure is also dynamic and here in Java we also have, we also have collection, so here you have You should know why there is a collection, however, don't worry, I will bring a complete specific topic of vs collection for you, where we will tell you what it is, what are its limitations and why to go to the collection, but the whole Java, sorry, the whole data structure when we in Java. If we talk about implementation, our major focus is on payment or collection, it depends on whether you are implementing static data structure or dynamic data structure. Now see here that if you are implementing data structure. If you want to implement the concept of Java in Java, then it is obvious that you should know Java as compulsory. So here you tell me what is your knowledge of Java. Give yourself marks out of 10. Okay and after that we will decide whether you If you are perfectly ready for data structure or not, then immediately tell me in the comment box. Out of 10 , how many marks do you give yourself in core Java but apart from this, the major topics are right , you must know the data types. You should know the data types of Java. You should know because when we create 'Hey', 'Hey, ours can be of String also, Hey, ours can also be of 'Integer', 'Hey, ours can also be of 'Double', okay, so Core Java, you don't have any doubt, you should know Core Java a little. You should understand the specific topics which are there in Core Java also. Data type looping concept is ok. Third wheel talk about exception handling. Again one of the important topic of Core Java. You must know the exception concept because when we will implement Java then no doubt exception will come. There will also be a probability that when we implement data structure algorithm in Java, exceptions will also come and if exceptions come then I have to manage this exception also. Okay so here exception handling is again one of the important topic which we required for data structure. Okay, that means for implementation in Java, then we will go for wrapper classes. Okay, wrapper interface is even, classes and object class is interface, not this should be written first, although I am okay with classes interface, so almost you understand that I am covering all the mostly important topics. What I am talking about here is that we will require are one of the most most important requirement you must know the are concept in Java you must know the package concept in Java okay apart from this the other topic is collection we required collection framework right These are the two most important topics that you should know about Collection and Hey, okay so Collection is also one of the most important topic to implement data structure in Java and are you should know about these two. And if there is even a small doubt between these two Or if you have not read it or have not read it well, then my request to you is that first go to my Core Java lecture in which I have explained the Collection Framework very well. In almost three to four lectures, we have talked about one dimension. And how is Java different from C and c + plus, we talked about these, so these are the major topics, package collection is fine, apart from this, exception handling, looping concept, data type, classes and interfaces, what is abstract data type, what are abstract classes? There are some topics which are the requirements of data structure but like I told you we do not require any advanced Java topic, we neither need any servlet nor we need JDPC nor we need any JSP concept nor we have any requirement of IO right now. There will be some requirement of IO, if you understand further then these are not major swings, we do not need any desktop application, we have to create, we are specifically focused on core Java to implement data structure concept and these are the major important topics which I have just written to you. Okay, although I have already told you that these are the major topics of Core Java, but there are very small topics in Core Java, so first of all prepare your Core Java well and if your Core Java is prepared then most Welcome to implement data what is the requirement for data structure in Java. Sorry, when data structure is implemented, what topics will we talk about in Java, but now the question is this. Now it comes that sir, which algorithms are we going to study, here we will see which algorithms of data structure are implemented because you see what is the meaning of algorithm, you know the textual representation of any problem, have you told the steps that If I talk about the stack then the stack will work on these steps. If we perform push operation in the stack then what do I have to do. I have to take the input. Okay, input from the user. This is how we actually tell in the algorithm. Input from the user then we need to check. The top position, so I have explained the algorithm to you step by step, but now its coding implementation will be done by using Java and if you talk about C, then you can do it by implementing it in C or c+. But we have specifically talked about data structure using Java. Okay, so now the point here is that sir, you are talking about algorithms, you are talking about concepts, then which concepts should we implement in these? Which means which algorithms of data structure are we going to study, so here you talk about the syllabus, what are the topics we are going to cover, so we will start with the stack, okay actually we will start with the concepts of So, first of all we will see, okay, then after that, I will give you a little introduction of the second concept of collection, what is a collection because whatever algorithm you will implement in Java, you will find these build classes and methods of all the algorithms in the collection. So we have to understand that if I am implementing link list then how can we implement link list using collection so for that you must know the collection classes concept you must know the collection interface concept so complete understanding. We read that when we implement the collection, in the first step we will talk about how it will be implemented in Java and you have read it so well and good but what will be its use in data structure or how can we use it in data structure. Which method are we going to use to implement static data structure because when we talk about array, whether it is in C or Java and the only biggest limitation is limited data that your data is always limited . If you have made it out of 10, then you will give the number from 10 to 11. Java will throw an exception, right? There is an exception in Java, index out bounds exception, that is why I told you about the concept of exception handling, so we will discuss it, we will discuss the collection. Okay, apart from this we are going to talk about the topic of data structure, we are talking about stack concept and in this I am writing the major topic, then we will talk about some implementations regarding this stack, like using stack we will What kind of applications will you develop or what kind of applications will you develop? If we talk about implementation, then how can we design stack implementation with these fix prefix postfix expressions, this will be our discussion. In stack, we will talk about multiple stacks, why we use multiple stacks, why there is a need of multiple stacks. Stack Okay, so here is the collection stack, although all these topics of yours will come in the collection now, but okay, we will talk further then we will talk about why, what is right, what happens, why do we do the session and you see all these concepts like I told you for the first time also that every concept of data structure is implemented somewhere, when we will read the stack, then I will tell you the implemented concept of stack, where already you get stack implementation in the system, when we talk about memory in the system. Regarding memory, we say that there is a stack memory, there is a heap memory, so what is stack memory, it means that somewhere the operating system has already implemented the stack concept of data structure, that is why we call it stack memory. Now the most important concept is that after reading this paper, what kind of jobs will be offered to us, what would be the salary structure, so here you see, I believe that if you want to reach any top most MNC then the data structure. This is the best CD to reach that top most MCS because in every top most company like googlethalli.com etc we googleapis.com it comes in the child's mind that sir what will be the salary structure that if I read the data structure then in what ways I will get Will I be offered jobs? What will be my salary structure? So see, I am saying that you should not compare your salary structure with this paper at all because I think that if you are good in data structure then salary is no bar for the right. Candidate your minimum salary would be more than ₹ 10 lakh. This is my suggestion to you but at that level you will have to prepare the data structure. Get it and then I would like to create a stack of my own, a collection which uses the rules of stack. There we will talk about our stack implementation, we will talk about queue first in first out because I told you last time there are lot of technology where you will see queue implementation in mobile system is fine in client server technology but now I have to talk about my To implement a q then I have multiple choice whether I want to make q static or q I want to make dynamic if I want to make q static then I should go for are concept if I want to make q dynamic then there But we will talk about q using link list q using are q using link list in similar way we will talk about circular queue, what is circular queue and how to implement circular queue in Java, how will circular q be implemented in Java, isn't it? You should understand the whole concept, we are going to implement it in two ways, one in a static data structure where there will be limitation of data, you will find that when we read the stack, the question is often asked in the interview, what is the overflow condition of stack? What is the condition of overflow? So when will stack overflow happen when you implement it with static data structure? When will overflow happen when you implement it with static data structure? And the concept of static means hey is there in Java even if the run time. Allocates memory but its nature is static. If you have read Hey in Java then you would know that we are limited. Just like we declare Hey in C, then what is our declaration of Hey in C? We already tell the size but in Java. We create the array at run time but the size has to be specified, before the data arrives you have to tell what is your number of elements and if more data is given than that then it will cause an overflow condition, so this is the implementation that the data Those concepts of structure which are implemented on limited data where there is a probability of overflow condition are called static data structure but when the same data structure is implemented on unlimited data that there is no limitation of data where you can store the data. In which way insert and delete can be done then it is a dynamic data structure and when we talk about dynamic data structure then to implement it we will use collection framework in java we are implementing why dynamic we are implementing why static format Right but then the same will come in circular queue also because when we will see the concept of q then it will have its own limitations and to overcome that limitation we will go for circular queue concept then we will see D The concept of 'double handed' is correct. What is double handed? We will talk about 'D' because the single ended 'K' allows insertion from one side and deletion from the other side but 'D' allows insertion from both the sides. So we are going to see this concept of DK, so believe me this every concept is very much important and you understand, think and see why data structure is the primary requirement of top MNC, why are you asked about data structure because once you have studied data structure. If you have understood these concepts, then when you implement a project in any technology, memory management will become very easy for you because this entire paper teaches you how the boss should do memory management and how you can manage your memory . Manage data: Data management is the most important part of any project. We had also discussed this last time. You have to manage your data consistency. You have to manage data consistency. You have to manage data in the format, your data rules and regulations. We will allocate memory according to and this is what this paper teaches us. Friends, if you want to reach from learning to earning, from classroom to corporate, if you want to reach then placement ready courses are available for you on Tech Scholar where we have given every This entire course has been prepared by matching the pattern of interview questions of top most MNCs, so all the courses on Take With One are available for you at a very low price, so enjoy these courses and get ready for crack the top. In most MCs, how can you manage the data properly? In the format of queue, in the format of stack, in the format of circular queue, in the format of DQ, in the format of priority queue. Here we will also talk about priority queue. What is the priority queue because you see, there are two things in the queue, one is that there is a queue, okay, the common man is standing in the queue, so he will go one by one, but at the same time, if any VIP person comes, then he will be given priority. It will be given that even if you are busy in the queue, it is called priority queue, if there is priority in the queue, then why is it there, what is its use, where will you find its implementation in the system, we will talk about this when we talk about the concept of priority queue. Okay, so we will come to the stack, why circular queue, why priority, why then we will talk about link list concept, then we will come to link list, what is link list, how is the implementation of link list, what are nodes, what are they versus nodes, what are they? What happens when a data element is stored? What happens when a data element is stored in a node? So there we will see the LinkList implementation. In the LinkList also, we have the choice. We will go for Double Link List, which we call Double Link List. Double link list is ok, after double link list then we have the choice and will go for circular link list. We will see the circular link list. Ok, what is circular link list and this circular link list is also implemented in two ways . One is a single circular link list and the other is a double circular link list so we will also see what is a double circular link list okay so this is the linklist implementation which will tell you about dynamic data collection because when we are talking about again I am repeating that when we If we talk about data, it is stored in static format but when data has to be stored in dynamic format, link list comes to our mind, there we talk about dynamic data location, such data where there is no limitation. Such data whose insert and delete should be under my control because the controlling of keys is not in your hands. If you have read 'Hey' in any language then you should think that 'Hey, I may insert an element in the middle, maybe not in the space of 10'. If I delete an element from , it will become of nine. What is not possible? So here it works in the background, then the link list is where you want to insert it according to you, delete it according to you, if you make it of 10, then three elements are left remaining. Memory will be wasted. What does the link list say? Make notes of three memories for three elements in unnecessary memory. Why do you have to waste data in memory? Why do you have to waste memory? When there is no data then what is the need to allocate memory but it will do it even if it is done at run time but if it does then we have to understand this concept in this paper. Why are we reading link list when we already have it for data collection? Then why should we go for a link list concept? So we will talk about link list. We will talk about circular link list. We will talk about doubly circular link list. We will talk about stack link list, we will see stack implementation, using link list, we will see queue implementation, using link list, queue link list. Okay, so all these are the concepts, I told you, boss, in this entire paper you will understand data structure in two ways. Uses the background and this question is always asked in the interview that if you have created a stack then what is your background data structure. What is your background data structure? So the background data structure can be Hey and the background data structure can be Linklist meaning. Whenever we implement the concept of any data structure, our background data structure can be Array and our background data structure can also be LinkedList and Java supports both. In Java, we can also do with data structure implementation. And in Java we can do data structure implementation with linked list also because we have linked list also available, we also have array available but when we implement with array then this is called static data structure and when we do linked list. If we implement it with , then this is called Dynamic Data Structure, where there is no memory limitation, where the controlling of data will be in your hands, then try to understand your point , how we are going to implement these algorithms, then stack. Link List Q We will talk about link list then our next topic will be where we will discuss time [music] complex important important questions of interview time complex what is worst case best case average case what is big notation what is bigo notation in which way Time complexity of any program because you understand, for any application, I always talk that if you create any software then unless you focus on two things in the software, unless you focus on two concepts, the users will not understand your The user will not just like the software, the user always likes the software which is made with space and time complexity. Space complexity is the focus on these two. Whenever a project is made, you see what actually happens when we are in the learning stage. No, we are college going students, we are studying, then we do not focus on these things, what we do is absolutely simple, we make a simple application, even if its space complexity is not known to us sir, we were told to make this project, we made it. But boss, when this application goes live, then one has to keep in mind that space complexity is time complexity. Let me tell you what is the meaning of space, what is space complexed by a program to execute this program, how much time is taken by a program to execute that program. To do this, you should think for yourself that if you have created and given a software to someone, the loading process of that software is too much, then the user will not use your software at the second time. You should think for yourself and see if you use any software. And by that software time you mean it is taking unnecessary time. Let me give you a small example to display the result. Let me assume that you have google3, now you have many search options, you will not do [music] because it is so time complicated. And if your internet speed is fast within a second, it is too much, your data will be searched and fetched, this is time complexity, it is searching the data, this is called time complexity, sorry, time complexity space, your software has taken so little memory. I probably have to complicate the space at the initial level and you are on your mobile data. Okay, now if someone told you that this page is very good, download it, you went, but when you saw that the total size of this page is 3GB, you would not do it. You will think, leave it, download it for free only when you see someone, but if the total memory size of the same app is 20 MB then Maybe you will do it because less space software is always liked by the user, then the data structure also tells you that the boss should be space complex and time complex. How will you find out the space complex, how will you find out the time complex, this will be our topic. We are going to cover Data Structure in Java Using in Java Now you see here the most major question that comes to mind is that Sir what positions will be offered to us if we have studied Data Structure if we have joined Top Most MC If you have done this then see, you also know that the position completely depends on your experience but yes, you will start with software engineering, you will become a software engineer, after that you will become an analyst, you will become a system architect, so there are a lot of Positions Available for the Student Who are Good in Data Structure Then we will come to the next point Searching and Sorting Then we will talk about searching and sorting, we also have multiple options in sorting, we will talk about linear search because searching When it is done in a collection, the most important factor here is also how quickly you can search. Same as I have just mentioned, time complex structure gives you two types of searching options that from the collection you can search your element in linear search. In linear way and you will go for binary search Can you go for linear search Can you go for binary search We have different options for the same sorting Let's go for different types of sorting But we will talk about linear search OK, we will talk about bubble sort, OK, we will talk about selection sort, OK, we will talk about insert sort, OK, we will talk about quick sort, so these sorting techniques are linear sort, bubble sort, selection sort, OK, ready sort, ready sort, OK, shell sort, many sorting techniques. We are going to see and see the difference in all these that if you look at any collection and you look at all these, whether your background data structure is Hey or Linklist, it will not make any difference because from the sorting and searching algorithm they want that collection. The collection can be yours. That collection can be your link list. Binary search is also implemented in the link list. In the selection short, I can also apply in the link list. In the selection sort, I can apply in the link list also. When we talk about searching and sorting, it does not matter at all what format your data collection is in and I am going to tell you the implementation in both the ways so we will see what is the searching sorting technique then we will come to the Next Topic And That's What Tree Then We Will Talk About Tree And In Tree Then We Will Talk About What Is Binary Search Tree What Is AVL Tree Okay And There Are Lot Of Tree Topics Binary Search Here We Will Talk About Tree Traversing When traversing a tree, what is in order traversing, what is preorder traversing, what is post order traversing and its implementation, we will see how to apply in order l preorder post order algorithms in tree, what is binary search tree. What is a binary tree? What is a tree? Binary tree, Binary search tree, AVL tree. Okay, there are many different b-trees, we will talk about b-tree, we will talk about b+tree, we are going to discuss almost every topic of all the trees. We will see what is Red Black Tree. What is Red Black Tree, meaning these are such topics that if you pick up the data structure syllabus of any university, you will get these topics. If you look at the questions of any interview, you will get these topics. And we are going to cover all these topics in our upcoming lecture, the only concept is that first we will understand the algorithm and then we will understand the implementation of that algorithm and for that we will have the requirement of Java and that is why I have told you to prepare Java and come. First prepare those topics of Java, prepare Core Java, after that you learn its implementation in data structure, how the concepts of data structure will be implemented in Java because if you are comfortable in Java then the boss will be a little If problem is going to come then first read well and then do implementation of data structure. Ok then Binary Sts Tree, AVL Tree and right now I may have some topics which are slipping from my mind but yes we will see when we come to the tree. What is Threaded Binary Tree? What is AVL Tree? What is a binary tree? What is a binary tree? We are going to cover all these topics. Okay, meaning the tree is almost all about the tree, not just this, almost all the topics of the tree. Right and then we will come to our next topic on graph, then we Will talk about graph concept ok where we will understand the concept of graph where we will talk about algorithm of graph Prims Algorithm Dis Gust Algorithm Shortest Path Problem What is it ok How to find out the shortest path in concept of shortest path Okay, what is Prim's Algorithm, meaning all these algorithms are Prim's Algorithm, Dis Gust Algorithm, okay, we are going to see all these algorithms right now, Dis Gust Algorithm, Prim's Algorithm, and almost all the topics are graphs, when you open the graph, then the graphs. How is traversing done in a graph? What are the methods of traversing a graph? We will talk about them. How many trees are traversed in a graph? In order, pre-order, post-order. Similarly, if we talk about graph traversing, then this is Topics Almost means these are the major topics which we are going to cover in data structure. Apart from this, there are many more also. Apart from this we will discuss the concept of Shashi. What is Hash? How to implement Hash Set. What is Hash? What is Hushing Technique? What is Hash? What is a table, okay, what is the meaning of hash collision, hash table, hash hash table, sorry, hashing collision, we are going to talk about these, then we will also see Shashi technique, we will see the concept of dictionary, we will see what is dictionary, okay and how to implement dictionary concept. How can we implement the dictionary using Java ? So almost in my opinion, all the topics that we are going to cover, the complete data structure, we are going to cover here, so let's start from the next lecture and talk about data. First of all, on the most important concept of structure which will be related to Java a little because before implementing the data structure algorithm, as I told you that we will implement it either in static form or in dynamic form and if we do it in static form So We Should Know Are concept and if we do We Should Know Collection concept in dynamic form then you should read both the topics in detail but I am going to give a little overview in the next lecture but interview questions are often asked in data structure. When we implement it with Java, we will talk about the difference between array and collection versus collection in the next lecture. Just stay tuned to this course and if you like the video, then please share it with your friends [Music]. So now see I have two choices so till when can we take support of green one and when do we have to go to collection like I told you no the complete data structure you can implement using collection but we have to take both of them because interview Also you have to clear it, so if suppose he asked you the question in Java, Can we implement stack using are in Java, yes you can but what is the limitation, what is the problem, then you see actually when we talk about data structure. I also told you last time that you will implement data structure in two ways, right? We implement data structure in two types, one we call static data structure and the other we call dynamic data structure. Right now let's study this. Dynamic data structure means whenever you implement any concept of data structure in static form then here we will use are that will go for are concept right and if I have to go to fully dynamic data structure then we will go for a collection. Concept here then we use collection concept right now what is the difference sir difference between both is that whenever you talk about static data structure you will always get an overflow condition whether you do stack implementation whether you do what I am saying right now I will tell you by doing, don't worry, I am not going to tell you the data structure only from the collection, we will see this because this is the prime concept but we will also see the implementation of the data structure with some levels so that you can understand that yes we Can Also Implement Data Structure Concept Using Are in Java But then there we will also talk about the limitations and today we are going to discuss the same with Are when we implement the data structure. What is the problem we face? What kind of problem we face? Then why should we go for a collection concept and why is it suggested to always go with the collection concept when you want to implement the data structure in Java but when we want to implement the data structure in C? When we talk about C+, we use it. So sir, it is there in Java too, so you see, when you use it, we call it static data structure, that's why. It is said because it has its own limitation. Whenever you enter an element, before that you should not tell it what is its size. Without size, it is not declared in C, nor in C+, nor in Java. Yes that is a difference that Sir in Java the size of the array is decided at run time. Of course in C and C+P then Sir we decide the size of the array at the compile time that first we have to tell the size. In Java also you know the size. Even if you tell it at run time, you will have to tell the size before the data comes. You will have to tell first what number of elements you are going to enter in this array. You can tell that size at run time, but you will have to tell the size. If you give even one element more than that size, you will get Index After Bounds Exception. Hey Index After Bounds Exception right, but when we talk about collection, we know that collection increases its size according to the data and here There is no limitation so whenever we implement data structure with collection like the day I will teach you stack that day we will see stack using are stack using and when we see stack using are then you will see us stack overflow. We will get an overflow condition of the stack, but when we implement the stack using collection, we will not get it because there is no limitation of data, you can store any number of elements in the data. If you can then you will have to first understand this concept that why we should go for a collection is not a concept. If asked in an interview then you will get stuck. If you read the entire data structure only from the collection then because the concepts of data structure are So we have to understand the same and understood that static means fixed element where you have limited elements and with those limited elements we are implementing the data structure but when you want that no sir I don't Want any overflow condition in stack queue circular queue any topic so that go for collection concept there then we will implement the collection concept now you see a very interesting thing I share with you here I often get mails from children Calls come, okay, children come to meet me and say, Sir, we have purchased the Java course from XY root place. Sir, I have completed the course and one more question which is very interesting is that Sir , we have purchased this course for lakhs of rupees there. But how are you providing this course at such a minimal cost with GST and with such a low cost, will this course be able to meet the level that is the requirement of the industry, so see my direct discussion with you here. There is only communication, only one say, boss, this is the minimum cost, this is just a small Guru Dakshina because we also have to run our company because the motto here is not to earn money at all, the motto here is only and only to the students, top The moto here is only to fulfill the dreams of the children. The moto here is only to take those children to the dream company and if you reach your dream company then my dreams will be automatically fulfilled. Now see when we data. If we implement the structure with Array, then we understand some concepts of Array. What we read here is Array is a collection of similar data type. Collection of similar data type is a collection of same data type. Okay and collection of same data type if your Hey, which is the definition, we know that Hey is a collection of similar data type okay homogeneous data type okay so if you think that you should implement stack in data structure because see again and again I will say one thing every concept of data structure will tell you the same. How the Data has to be Stored Inside the Memory and What is the Relation of the Data with Other Data Whenever you are storing any data in the memory, that data should have some relation with the next data. And the region when we Talking about collection of data, in Java we also have Array and we also have Collection. The common thing in both is that both store data by maintaining internal relations and the difference in both is that they use limited amount of data. Whereas collection talks about unlimited or amount of data, okay, you see the examples of both, if I talk about it is a collection of similar data type, same data type, then how have we taught in Java that if I told you That I have to declare n number of elements in array so what do we do? First of all we declare an array and in Java how should we use array in Java. How do we use array in Java. Once you Try using it, okay let's revise it once, if you have read then well and good and if you have not read then I request you to please attend my Core Java lecture and watch the videos of my Core Java in it. Hey, it has been taught in a lot of detail, we will not go into the data structure but you will have to understand the concept, so I request you to please go to the core Java lecture and if you do the entire core Java, then you will get the well and good details in the description box. If not then at least sen to at least one lecture, I have taught it only on Hey, so my request to you is that you read the entire collection once, once you read the entire collection, after that you come to Data Structure Implementation, it will be better if you have If you have read then it is good. If you have read then you know that when we use array in Java, what we do is declare the array, then in this array I have to define n number of elements, then you see the difference. You understand that this will be used for a number of elements, so what do we do? Here we say to the user, OK, enter the limit, right now I am going very short, enter the limit, then we access it through the scanner. For that we declare scanner scanner scan equal to new scanner okay and for scanner you have to import header file we know that sorry we have to import package that we know okay that for scanner we have to import util star That package has to be imported then we take the limit of n scan dot next int scan dot next int ok this is the limit you got and after that we define a i the new integer of n so you see understand what I am saying. I am trying to tell you, what do we do in s and c, we declare the maximum size in advance, the problem we get is that sir, it is of 500 and if you enter 10 elements in 500, then There will be problem of limitation but what is the plus point we have in Java that the memory allocation of each object is done at run time. In Java there is an object and behind these objects there are factory classes. Behind every object there is some class which we can call. Factory classes are called factory classes, we taught you this concept right, so when we declare array in Java, the advantage is that what will be the limit, it is decided at run time, but before the data comes, the size had to be told, right? Imagine you are doing such a data collection where you do not know the number of elements that are going to come. Imagine an e-commerce website where you are purchasing a product and whatever product you are purchasing, you are adding it in the box. Are they getting cut? Oh, maybe not, because if they are cut then you will have to tell in advance, do not buy more than 10 products, whereas this does not happen when the user makes a purchase on the e-commerce website. The card in the background, the collection which is collecting your products, is already pre-defined as to what number of elements you will decide to purchase. Here you will have to pre-define that if you have used Hey, you will have to Define the size of Array. Understand that when we will implement the data structure with Array, you will have to tell in advance that your stack will be of this size, your queue will be of this size and if you give more than that, then overflow messages will come and If you do not check the condition then index after bound exception will come which happens in 'are' ok so if you think yes sir I want to use are for data structure implementation with this limitation then best go for are concept then we Okay, so did you understand that when you declared, you told science, now this size is yours. The advantage built into the regular memory is that it has allocated as much memory as is required, whereas what happens in C is that it declares the maximum size of memory. Now if you give the number 10 in an array of 500, then 490 memory would have been wasted. There Java said this, Hey in Java this is an object and if it is an object then memory allocation will be done at run time. I understand you are right then if I do stack implementation in the data structure then why implementation using Hey? So we have to take care about this thing that boss we have to define the pre defined size of a collection. Will your collection be of a fixed size and if your collection is of fixed size then this is the static data structure. Why did you create a stack, why did you create a circular queue, why did you create a D, but your collection is of the fixed size that you told in advance that 20 elements, 30 elements, 100 elements, then you do not expect that you can add more elements than that in that collection. Will you be able to add ? Will you be able to add to the stack ? Will you be able to add to the stack? Right, the second limitation that we get in Java is that once we allocate memory, we will not be able to disturb that memory. What this means is that If I have made it of n size, okay, I have given the limit as 10, then how many sizes have I made in the memory? It is very nice that sir, it has been made of fixed size of 10. Now the size of yours has allocated memory. off 0 a offv a off 2 a off 3 a off 4 to a off 9 Now tell me one thing can I insert an element in the middle of this array can we can is it possible that I took a collection and You have given the element in it 10 5 70 30 40 Okay, now you have collected the data in this entire array, now you think that we have to insert an element in the middle, so can we insert the element in the array? Absolutely not. Absolutely not. Can't because once it is created, it is static. Hey, it may have taken memory at run time because it is an object, but the behavior is static. Static behavior means boss. No, am I able to insert elements in it? I can delete any element from this at run time. Okay, I thought boss, I have to delete this element and as soon as it is deleted, the size of one changes from 10 to nine. Is it possible to do this? You can do no from 10 to not possible so neither I will be able to insert any element at run time nor I will be able to delete if you entered more data than the limit you will get overflow exception index after bound exception so if you think that We need implementation and you see this is the difference that when we implement data structure with c, we implement it with c+ps, there when we do stack implementation, why do we implement, then we check the overflow condition. It is okay and you will have to do that here also but if you are in Java and if you are using Hey then you know that these limitations are going to come because neither will you allow insert nor will you allow delete, the size is fixed in this. You will not be able to give data more than the size but still you have to do the collection so of course we will do it because I have told you that we will implement and that problem when we will see that the overflow condition is coming in the stack so that we will implement the same. Concept Using Collection Now you see here when we talk about implementation in Java, I have discussed with you earlier also that here we have two options that either we write our code by ourselves like we are using concept. Implement it or we implement these concepts of data structure with collections, then here you understand that you will see this entire course in two ways because in the interview if you were asked that OK stack implementation by implementing it with Hey. Tell me whether you have to implement the stack with Linklist or whether you have to implement this technique with the collection, then I think that when you study all these concepts very well, then your logic will start coming automatically, that is, then Here you will not need any real time project and if you are asked whether the implementation here is better than Collection or better than Hey or better than Linklist then you will be able to answer it very easily. That's why you have to be very focused in understanding this entire course. Where is the implementation happening? Where is the implementation happening with the link list? Where is the implementation happening? We have done the implementation with the collection because see, in the interview, anything can be asked and implementation can be asked with any concept. Then we will come to the collection. And you know, when we come to the collection, which classes do we use in the collection, don't worry, I am just showing you an overview of the collection because the request from you is boss, without collection in the data structure, I mean according to me. Reading data structure without reading collection means it is very difficult to understand the concept in Java because when we implement data structure in Java, boss collection is required and my request to you is please read the topic of collection, if you have not read then you will get details. You can find the complete collection in the description box. Read it very carefully. I have taught the complete collection topic in about 10 to 15 lectures in which we have discussed each and every concept of the collection. Here I can only give you an overview but after this We will start the implementation using are using collection, so if you have read the collection then you know very well that collection has its own set of keys and in that set of keys, which one is at the top, iterable, okay, treble is at the top. Treble is extended in another interface. The name of this interface is Collection. Okay and you remember this collection. I have taught you in two parts. One we read the collection and one we saw the concept of map dictionary because we read the collection in two parts. We read the core. In Java, what we are talking about now is the collection, we are not looking at the map interface or the concept of map, that is a different concept, right, so when we read the collection, we read that just the topmost in the collection. Inter interface iterable then collection then extended from this collection, what I am writing in white color, I will write the name of interface and class in orange right, so you understand what this is, meaning white is interface is fine and this one is class. I had said this at that time also, if you remember, then it is okay, so what is iterable, it is an interface, collection is extended from collection, list is extended from list, interface is extended from list, set is extended from set, q is okay and then we have. Here the options are classes implemented from List, remember Hey List Hey List Hey List implemented Sorry List implemented from Link List Okay Link List We have After Link List we have the next class Vector and from Vector we have the extended class. What is the class extended from Stack Vector? Stack is the class of List Interface. Hey List Link List Vector is extended from Vector. Stack then we have the classes of Set. Remember in Set we have classes Hasset After Hashset you have Next One is Linked Hashset, OK, Linked Hashset, we have classes of collection, then from Linked Hashset, there is another interface extended from this set, which we call Sorted Set, Sorted Set, this is the interface and class implemented from Sorted Set, we have remember. Do which tree set tree set and then with the why we have the classes called d k we have na d k we will go for d k ye q pe to abhi ham aayenge d k and there are some more classes ok right now You see, this is a collection, so Java says that I have given you a class for every implementation of data structure. If you want to implement data structure, then in Java, there are in built classes available and all these classes are generic classes. These are generic classes. I can use any type of data, I can create a collection stack for string, I will create stack for integer, byte, short, long, float, double, even, boolean, so these are all the classes. All the collections are given to you. Okay and remember what we read. Why are three types of classes given? All the classes are implemented from the list. What is common in them. All the classes are implemented from the list . You have to use them only then for data collection. For means if you are implementing any concept of data structure like if you are implementing stack then you will read stack when we are using stack so we have to write the code we have to write the code we have to push we have to write the code we have to write the code of pop We have to write the code of display because there you will convert array into stack and there also problem is there will be limitation but this is a fully dynamic collection which does not talk about any limitation. When we read the collection code in Java then also I Told you that collection is a complete dynamic data structure collection is a complete dynamic collection where you will never get overflow where you will never get full message but when we do the same implementation with every then overflow is full and MT so well both. In the case it will be empty, it may also be an empty collection but when we come to the collection, we get the options that we have a list, an interface where we have those classes, let's see this, you can see the link list implementation. For Already There Is A Class Called Link List For Stack Implementation Already There Is A Class Called Stack For Queue Implementation Already There Is An Interface And Classes Available In Queue For Tree Already We Have A Tree Set Class So This Is For Hash V Have Hashset is fine, Linked Hashset will come on the map now, remember we read the collection of the map, then it becomes very easy for us when we implement the data structure with the collection. It is very easy now because now you do not have to write any code. Everything is ready, your stake is ready, your class is ready, you can just use this class and apply push pop display operation poll operation sorting, all these will be ready available for you. Now you see one thing and here you try to understand a little that your Technical skills will improve after completion of this course. You will understand how to develop the right project, but apart from this, there are a lot of things which you will have to improve, which will improve your resume, which will improve your profile. Okay, how to improve the resume? Follow only on social media platforms. Okay, why did Java give us this collection by dividing it into three parts? Do you know that all the classes in the list will have their insert order preserved, meaning the You will give data in the sequence to these collections, they will return the data to you in the same sequence, they will not change the sequence of any data, meaning if suppose I have collected the data say ABC DE, then I will also get the elements AB CDE, there will be no changes in it, duplicate. There is evidence in these collections, so if you see, I have told you again and again that every concept of data structure is a unique concept in itself, but everyone will talk about the same thing, the stack of data collection says , collect data in the form of last in first out. Q says collect data in first in first out form Linklist says collect data in dynamic form Circular Q says collect data in circle form Tree says collect data in tree format Each has its own advantages and types. We are going to see that here in the pay tree also we will get multiple types but the concept is that when you will implement them then you will have to understand which class you have to use when if you think that you are making such a collection. Where duplication should be allowed, the stack says, I have no problem with duplication, I allow duplicate elements, okay, if there is never any problem in the stack, then with duplication but it comes in the tree, okay, then there we will talk about the list. List is the collection which allows duplicate elements which will not change the insert order of the data. You are going to get the data in the same sequence in which you have inserted the data. So here again we have the choice Hey List LinkList Vector Stack In this remember we read That Vector is a legacy class in Java is a legacy class because this collection framework was introduced by Java in the 5.0 version of its JD. Before that there is no collection concept in Java but vector used to be a class earlier also but when vector was earlier then it was It was not generic, it was not in collection format, it was a class which you can use for dynamic data collection but it is only allowed to store only a single type of data but here when you mean that, it means that Time we can use vector for any type of data collection that you did not have all the type safety in one collection but here Java created the collection and gave me the concept of data type safety that you can collect specific type of data and for that it By reading all these classes as generic classes, the story has become very interesting. Hey son, that's why I have talked about this collection, I am giving the overview here, but you will get the complete post-mortem and complete details in Core Java. Friends, if you really want, you have to read this topic in detail. Prepare for its interview questions. If you want to do something and take your career to a new height, then once you see these concepts in Tech Scholar's premium course, you will understand how many hidden tips I have explained these topics to you there. First of all complete the core Java then come to the implementation of data structure because if the name of the topic subject is Data Structure Using Java then Java is a language which we are going to use for implementation and for that we are talking about how many ways we If you look at the implementation of the data structure, you will understand the list, but if you think, No sir, I don't want to allow a collection where I don't want duplication, I don't want to allow duplicate elements, you want a collection like this. Talking about the data structure, if you do not want duplication, go for the set classes, instead of the sorry list of a list, use set. If you use hashset, then these are the classes of set, Hasset and Linked Hashset, these are two things. Will do two things, will not allow duplicate but will not preserve the insert order of the data. What I mean to say is that you will get the data in the sequence in which you give the data. There is no guarantee that the data will not be found in the sequence, then if you feel it is okay. Sir ok I have to do data collection, don't want duplication and even if my insert order is not preserved then there is no problem. If I have given A B C D E, if I also get D C B A then I have no issue because The reason is that data structure is implemented behind each of these concepts, then Java has implemented the concept of hash table behind them, behind which the concept of hash table is implemented behind the linked hash set class, which we will read further. What is a hatch table but all these classes are already implemented with the rules of data structure and we will use them for the implementation of our data structure but when we read data structure using C then you do not have any such collection there. So there we convert array into queue in stack as we just talked about we create link list here you are getting link list class ready there we cut our own link list so complex class is available Use it and perform your operations. No need to create the stack from scratch but I will do it so that you can understand the implementation of stack with array and understand what are the limitations when you create a stack using array. Should go for this stake class thing is being understood that is why I have told you that we will implement the concept with Are also and we will implement the concept with Collection also, so have set gender has set. Have you understood what these two do? Do Not Allow Duplicate Element But Data Insert Order Is Not Preserved But If You Said No Sir I Don't Want Duplicate And Secondly Whenever I Get Data Always Get It In Sorted Order Then We Will Go For Tree Set Concept Because Tree On The Day We Will Read. We will read that tree is binary search tree, tree is AVL tree, tree is your B tree, B plus tree and there is traversing in order preorder post order and all this is implemented internally in a class called tree set that trees. Are already a class and follows the tree rule which follows the rule of BST which will not allow duplicate whose data element will always display the elements in sorted order Then we will go for a tree set collection like this on which day why to implement first According to the rule of first out, if I have to collect data then only implement q interface where we will implement the classes of q, so what I mean to say is that this overall concept means that in Java we have a two choice choice like Both the choices will be implemented for Ars and also for us. We will see the collection with Ars also. We will see the stack implementation with the collection as well. We will see the queue implementation. And here things will go very easily because all these are already implemented classes. These are all already created classes. We Don't But That's Why I'm Trying to Tell You What is a boss developer, understand his pen, you will make the steak yourself, only then you will understand how much hard work is put into making the steak, push function, pop function, display function and when you make it in 'Hey' then overflow is also coming whereas here you When the stack is ready, you will see how easily things will be made if you use Java classes, so we will start with both the implementations, but later on we will shift to the collection, then we will talk about the collection. Why should we use only Linklist implementation because in Java we Don't have a pointer concept, so there we will have some limitations. Okay so don't worry, if you have read Core Java, then you know its limitations, you also know its concepts, if you have read Collection, then you will know all the things I have just said. It is said that if you have read it before then it has been revised a little, okay so the concept of vs collection, I hope you have understood that when, what is the limitation, and why collection, because data structure talks about data collection. And when it comes to data collection, both are valid options in themselves, Arabic and collection, but when is it and when is collection? I hope you have understood from this lecture, okay, so let's talk about the stack of our first implementation and We will see what is stack implementation, stack using are stack using collection, we will see the code in both the ways, we will start with both the ways, then the choice is yours, I will tell you both the lectures, if you want to read only collection then avoid the are concept but then keep in mind in the interview. That if he asked Can we implement stack using Arj Java then you will remember this lecture, so study it in sequence, do not skip any lecture, do not rush at all because the subject you are studying is a highly demanded subject of top MNC. Data Structure Using Java and what type of interview questions will be asked by top MNCs, we have been talking about all those questions and will keep talking about them, we will talk about interview questions, assignments, I will give you the quizzes we will talk about, just keep reading, keep understanding and Be happy the most important data structure concept and that is stack implementation. Now see there are a lot of places where you can already find stack implementation. You will get that in the system itself, I will also tell you the example where you will see the stack implementation and believe me this is one of the most important topic in the interview room that what is stack and how you can implement stack in Java that stack implementation in which ways we But now let's see the simple story that if you want to implement any concept, then in the first step you will have to understand what is a stack. Okay, after that we will come to how to implement the stack and where is the stack. Which type of example is already implemented, we will tell where we will say OK this is an example of stack in real world in technical example OK so now here we talk about the definition of stack first of all so what do we say stack is a Order List Stack is an ordered list. Stack is an ordered list in which element is to be inserted. What do we say? Stack is an ordered list in which element is to be inserted and deleted. However, we also use the word inserted and deleted. Will change but for now to understand we are talking about the stake is an ordered list in which element is to be inserted or deleted from one and from one end is right and that which end is from which end element is inserted or deleted in mistake. Let's Do That Is Called Top and That's Stake is such a collection Stack is a collection where whenever we insert or delete an element, we will always do it from the same end and the end from which we talk about inserting or deleting an element, actually when we insert an element in a stack, we call it Push and when an element is removed from a stack then we call this operation pop. To insert an element in a stack is called push and to delete and remove the element from a stack is called pop operation. So when we have to do this type of data collection. Where we want that we should have a collection in such a way that suppose this is my stack, this is what my stack right and in this stack you see the end from which you will insert or delete the element, what do we call this end? Top End Right now, do not bring any programming concept in your mind. Now in the first step, you should understand what a stack is, such a collection is called data structure. If you are implementing the data in stack form, that means you have to implement such a collection. In which insert or push and pop will be from the same end, so when we talk about pushing an element, then suppose I said that I have pushed 10 20 30 40 50 60 elements in a stack, but when you will be asked to pop the Element from stack so you don't have to ask the location means you don't have to ask which element you have to pop automatically this 60 will remove from this stack then after 50 will remove from this stack then 40 then 30 then 20 and then 10 so this The concept of stack says that the element will be pushed from the top and the element will be popped from the top and push means insert, when we talk about this, look, you have a standard definition. If we talk about stack, then what do we say that stack is a Order List In Which Element Is To Be Inserted And Deleted From The One And That Is Called Top End And There Are Three Operation And Will Perform In Strack In Strack We Perform Three Operation And These Three Operation Are Actually Push Pop And Display But When we talk about implementation, there are some other operations that we can perform on the stack like push pop apart from display you can sort the stack you can poll the element from stack right if you want to see whether your or Sorry pick the element from stack ok so what is the difference between pick and pop now we will talk about pop means whatever is your last element will be removed and after remove it will tell you which element is removed but if you If you want to only view the last element of the stack then we call it pick. If you think that your stack collection is your sorting then we will go for a short operation. If you want to view the elements of the stack. Then we will go for display talk about stack implementation in data structure, then in the first step we understand that boss stack is a data collection which works on a rule which has its own rules like generally if we use any collection. Let's talk in Java, you can insert an element at any position, you can remove any element, but when the same collection starts applying the rules of the stack, then that collection comes into a foundation that no one knows. Can't insert the element in between. If the element is pushed in the stack then it will be in the last. If the element is popped from the stack then it will be from the last. The end from which it happens is called top end. Okay and the operations that are done on the stack are push pop display short. And peak operations which are general operations, apart from this, we can perform multiple operations because there is a collection, you can search the element from the stack, that is, you have to search a particular element from the stack, you can search it, so this is the concept, now see I have told you. On Day One it has been said that data structure will tell you the concept and algorithm will tell you but then in which language you have to implement it is your own choice but the language we have chosen to implement these concepts is Java and in Java. We can have two ways of implementation of these concepts either using array or using collection so we will talk about both ways now but I have told you the best option to understand the data structure concept in Java is a collection because when you have The collection is greater than why you should write the number Off line of code, but we will write some code so that you can understand how the code written behind these collections, the already implemented stack given to you by the collection, is working. Gut it, this collection, this, sorry, this. There is a concept of stack that the person who speaks stack talks about this method of data collection but now the question comes that sir when we will push or pop or display the element in the stack, it is ok but what can be the examples of stack. What are the examples of stack, if suppose I have to do stack implementation or you said that there are lot of places where stack is already implemented, then you see, I will tell you the examples of both the ways, where will you see the stack in real life. In the stack you will see that if you have been proposed in a marriage or any function and there is a buffet party, there is a buffet party and in this buffet party, because nowadays that system has ended that earlier we used to sit comfortably and eat food. But what is the matter nowadays, you go, pick up the plate and start your work, start eating right, but when you see that plate, that is a stack, why is it a stack, because the person who has arranged those plates has applied the rules of the stack. Okay, how the plate which is at the top will come out first, last in first out, so here we can say this is an example of stack implementation. Okay, so here I also told you the definition of stack, last in first out. Now pause the video. And quickly comment and tell me any real world example of Last In First Out where you find stack implementation in the real world. See, I am going to tell you multiple examples but see how much interaction you keep in this session. One way communication anytime in studies. It is not very fun. There should be two-way communication. If I am speaking, you should also speak. Now if you cannot speak, then type it. Tell me by commenting. So let's quickly tell me an example of a stack. What examples can there be of a stack in the real world? It is okay that the element which was inserted last is the one that came first. Okay, suppose the packet of biscuits is a real life example and I always tell you that in the interview, when you are asked the example of the stack, then you should try to give a real technical example. Life examples can be there for us to understand but the interviewer will expect you to tell the places in the system where Already Stack is implemented. If you tell the location of the method where Already Stack is implemented then real life example can be called biscuit to understand. The packet is an example of a stack that if you are given a packet of biscuits then you will pick the biscuit from the top, last in first out, gut it, so this is the concept of keeping the clothes for the press, then you will pick the topmost clothes, then if the bottom shirt is If you want to remove, the plates are kept then first of all pick up the plate, do not pull it a little from the bottom, I understand, this is the collection, it indicates the stack, but sir, real life is fine, but we find the implementation somewhere in the system. Is there anywhere in the language we can see its implementation? Yes C This one function calling is an example of stack which function. If any language implements a function then we can also call it a method. Well, in Java we actually call the function a method. function is an example of stack recurse if you have read recurse is an example of stack ok when a function calls itself then it is called recurse read we have also read in core java sci + if you have read then there You must have also read, Function calling is an example of stack, Recursion is an example of stack, Variable declaration, Variable memory allocation. Now let me tell you how. Look, Variable memory allocation is an example of stack. When variables are allocated, you know that any When language allocates memory to a variable, there are two types of memory, one we call stack memory and one we call hip memory, so you know what is stack memory, what is hip memory. Let's talk about don't worry right, so variable when When we allocate memory , we allocate memory in stack format. I will explain it to you now with an example. Function calling is an example of stack. Recurser is an example of stack. So you see how it is. If you suggest, see a simple example. I will explain it to you. I suggest that if you have created this class, then in the sense of Java, if we talk, suppose you have created a class, Class B, OK, this is Class ABC. In this you have three functions. Three methods. Suppose you have one method. Void first. Okay, you have one method in class named first. In class ABC, we have method. Function means we are talking about method. This is some code in first method. It is written Then you have another method Second method is ok In this also suppose you have written some code And then you have another method Third method ok First second third I have these three methods first second third ok Now you tell me when I I will call them in main if I call this method that if I call them in main you have created a class class test public study void main is ok public study void main or you can understand it like this if let's say I have called the first method three different methods If you suppose I called in the second in the first, the first method is right. If I will call in the first method, then in the third you called in the second method. In the third, you called in the second method. If you understand it in a simple way, then You can understand in this way that suppose there is a main method, in this main you called ABC , okay, in ABC you called Suppose In Xva root you called a method pqrs7 Yes, we say that main in Java is a parent thread. We say that main will start its execution first but main will complete its execution last. The reason main is that it works with stack implementation, so in threading also internally. What does your program do? Stack implementation does that it will close the main last but the starting thread is the main first. We say main in Java is a parent thread. What is the reason? You see, leave this example here, you see from here. Which function will end first pqrs7 first out then function calling method calling, we can see this by implementing it in the class form also, haven't you created different methods in the classes, you can call this method that in the main you have In the main call, if you call, say third, second, first, then internally your program will run according to this rule. Okay, what will your program do internally, whether it is a function or a method, when internally it is a method and a call, then it is a function when called. There are methods when they are called then what rules do they use internally Stack Implementation This is what is Stack Implementation So I hope you have understood the concept Now you see the most important here is a concept anytime you want to introduce technology in your Don't let it dominate you because technologies will come and go but the concept should always remain the same, this is my belief and if you want sir, technologies will change but the concept will not change. I am not able to understand the meaning of all this sir, what are you trying to say. Now see, when you come to Tech Scholar, when you come to our premium course, there I have explained to you how not to let technology dominate you, now navigate the phone like you sometimes sit down to use the phone. How easily we run the phone, in the same way it is easy to learn technology and in what way technology can be learned easily, come to Tech Scholar's premium course once and see how easily I have learned the concepts of this method. It has been explained to you there, okay, if you have read recurse, however, what Infikill says is that suppose there is a method named first, right now I have called first again in first, then it is recurse. What is your program doing internally? Called first, then called first, so what does it do internally? What does the stack implementation do? It will implement the stack. Don't worry. Now we will see the concept of recursor in data structure, then you will understand this concept very well. If you can understand then recurs stack implementation is done by function calling stack implementation is done in the same way let's C If suppose I create a class here, okay class A B is supposed to have a method in this class A B is void display okay now. Tell me in this display if I declared a variable int ger n or int ger a suppose its value is 50 then in this I created another local block here I declared a variable int ger b suppose its value is 30 then I created another Local block made whole. C Suppose its value is 90. Okay, so we have read what are local variables. Okay, those have scope within the block. So if you understand this, then the memory allocated by your program at the compilation time, you can see how it is done in the stack form. First A came into memory, then B and then C, but first of all, if anyone's scope ends then it would be of C. Let's look at C, you understand here that the scope of A is till here, the scope of b is till here and that of C. The scope is only in this block, so first of all the program will terminate s, then b, then a, then last in first out, this is what stack implementation, it uses the internal memory stack, so we say that when a variable is allocated memory. If there are variables, then they allocate memory in stack form. That is to say, the variables which allocate memory in stack form are of local block, those which are global, they use hip memory only then their data is accessed through outside the application. Because the variable which is in hip can be used through out the class like you remember if we declare instance variable then instance variables will be accessible in every method in the whole program because they use hip memory but the local variables. They always use the stack memory, that is why their scope is local because their scope ends, they go out of the stack, low scope ends, they go out of the stack, last in first out, so this is what is the stack implementation that here the program implements the stack internally. For which type of memory does it use local variables for memory, global variables or those which are instance variables, these are the hip memory used, got it, so here you understand that these are already those methods, this is the concept where already Stack is implemented. If you look at menu driven application, it uses the concept of stack. Like, have you ever seen a menu? Like file, a menu is proposed in the file. I design it as per my own. Suppose this is one. Internal sub popup in one. The menu is two, it has a popup menu, three, it is okay, it is a popup menu, now you do one thing from the file, move your mouse to one, move it to two, go to three and from here as soon as you remove the mouse cursor, First three will be closed then two then one then five this is what last in first out so man driven application is an example of stack so see here now if you are asked this in an interview question ok tell me the example of stack then brother try Don't say a plate, don't say a packet of biscuits. Because being a technical student, he will expect you to give a technical example, then you should tell there. Function calling is an example of stake. Method calling is an example of stake. Repeaters are an example of stake. Local Variable. When memory is allocated, it is done in stack form. If a man-driven application is an example of a stack, then you will get the impression that yes, you are talking to a technical child. Okay, what did I tell you? Real life example can be used to understand. But there is always an expectation in the interview that if you give a technical answer, then this is the concept that right sir, this is already stack implemented. Here when the developer did the implementation, he has used already stack memory right but the concept you told is this? We can implement the concept, so now if I want to implement a stack of my own, I should have a data collection which uses the rules of the stack because we have done data collection in Java but not according to any rule. Did not collect data by applying any algorithm but now what we want is sir this is already implemented concept if I want to create my own stack I want to have a data collection which implements the rules of the stack so here But you have two choices like I told you earlier also that either we see stack implementation in Java in two ways. Stack is using stack. Okay and second concept we will talk about stack using collection because we have read page. Concept of collection vs array, so when we talk about stack using array, we will perform the same operations. Let's talk about push, pop, display, sort, searching, pick, all those operations, but we will have to implement all those concepts, but when why because hey, he is the boss. No, it is not applicable on any rule, there is no rule, the boss says, my job is to collect, now you will say the data in stake form. If you collect then I will start collecting data in stack form but for that you will have to apply the concept of stack, it is not already implemented, you will have to create it. Got my point, when you create a stack using array, then it will be called static data structure, this is your Now why would there be static? Now why would there be static stack? Because there would be an overflow condition in it because it talks about limited data, no matter what language it is. Even in Java we have read that memory allocation is done at run time but the behaviour. Its static is that it will ask you before the data, if you tell the size, then you will have to define the size of the stack, we will have to create all the functions like push pop display sort, but when we talk about implementing the same concept from the collection, then we get everything ready for you. You will get ask function, you will get pop function, you will get short function, you will get poll function, pick function, all the methods will be ready because already in the collection there is a class called stack class. I told you in the last lecture where we talked about Hey vs Collection. See, I also told you last time that it depends on us whether we see the direct implementation collection, there is absolutely no problem, we are going to do more in the future, but my suggestion to you is that instead of doing direct, if you are the first one. Time see what happens, I tell you this if you are implementing data structure for the first time because many times this happens, the child is a student who has studied data structure using C and then he has studied data structure using Java. It comes that sir I have to implement data structure using java so that is the better option you should go for a collection because there you have read stack implementation with array in C and there you know how to convert array into stack. You know the logic, but if you are reading the data structure for the first time and seeing the implementation of the data structure for the first time, then my suggestion to you is that my opinion is that you should first see the implementation of the data structure and then after that. Come to collection because when we see the data structure implementation with collection, there is no logic because all the ready-made methods are there, you will not even know how the push function is working internally, how the pop is working, how the sort is working . But when the same thing we are trying to implement with Hey, so we write the code and this is the time to write the code. If you understand the thing then my suggestion here is if you are first time implementing data structure concept. These are okay Java is not a matter because see again the thing is the same concept is the same language has changed if you have done the implementation then you can directly go with the data structure concept implementation using collection but there is no such foundation if you want then with You can also read, but for those who are reading for the first time, Boss, there is no choice for you, you will have to understand the implementation in both ways, so here we will see the stack implementation, first with Hey and then I will tell you the implementation of the same stack using collection. Also, as I promised you, because I will go for direct collection, you will get a little confused in the logic, which means there will be confusion in the logic, so we will look at both the ways. When implementation is possible, we will do it. Where it is not possible, then there is collection. Here we have, we will talk directly about the collection. Got it. So when we implement the stack using array, right, what we are actually going to do there is we are going to apply the concept of stack on an array. We are going to apply the concept of stack on an array. Will convert and are are then we will also check the overflow condition because what happens when we create the stack using are so I have this are is this is what my are but in this are I know n number of elements enter The size will be fixed, right, then here we write the coding to tell in which way the element will be pushed from the top, okay, in which way the top will pop the element, okay in this, if your element exceeds the total size, then the exception should not come, hence we will overflow. Okay, we check the condition of MT, but we do the coding for all this ourselves . We will check when the collection MT will happen, when it will overflow, how it will push, how it will pop, but when we talk about the same concept of collection. So in a class named stack, we have push method, we have pop method, we have we get mt method ok we get pick method we get sort method what did i tell you choice judge yours directly go with this stack using collection no need to write any code you can directly get all the method in this this is the beauty of Java which we speak is boss, there is no overhead, if you are coming after studying previous languages, if you know logic, then do not worry at all, come directly to stack using collection and use these methods directly, overflow condition will not be found, why because collection data overflow. He does not even talk about overflow, it is a dynamic concept, talk about implementation of stack using, then We have introduced the concept of stack Last time I understood that stack means a data structure which follows the algorithm of last in first out. Right, but now the matter is about its implementation. Sir, you told me last time that recursion is an example of stack. Last time you said. Tha function calling is an example of stack, menu driven example of stack, but sir, I want to create my own stack, so if you want to create your own stack, then either you use a ready-made stack in Java, which is a class in Java. Which you will get in the collection but then what will be the logic there, nothing will be required, all the methods will be ready, or else let's do some hard work and try implementing our own stack, where we have a collection, hey and I, hey. Which is to be converted into stack, meaning we want that what I have for this particular application should give the behavior of the stack and you see when any code is implemented by itself and after that when you see any inbuilt classes. So you will understand things very easily, won't you? When you make something by working hard and get something ready made, then you know what is going on in the background behind it and here I have told you on day one. That there are two types of data structure implementation, background data structure is array or background data structure is linked list, so with array, now in which way we have to do the stack implementation, what will be our sequence, so here what we will do, see you first output. Understand that we will do our coding according to what output we want, first you have to understand what is the result, then coding will be done according to that, neither, I want that when my result comes, I will get a method like this. Get a menu on which it should be written in this manner. Stack menu is fine and in this stack menu I want the option Push. This should be one of my menu applications. Push pop display which are the major three operations of any stack. After this we will increase the operation in it. Because I told you that sorting is also done in the stack, searching is also done, MT is also checked, okay but all this coding will be our hard work, we are going to convert green into stack right and this static data structure. This is an example because in this we will also check the overflow. When we come to the collection then things will change. It is okay to understand but in using stack you will have to check many conditions, so for now this is a simple menu, then going forward we will increase the options in it. Don't worry. We will talk about the right of searching and sorting, but right now, with this option and these four options, I have to create my menu and here the user has to say enter your choice and you understand one thing, it means that you can create this menu very well once. Understand it in the stack because whatever implementation is going to happen next to it, whether it is a stack, queue, circular queue, linklist, doubly linked list, tree, everywhere, if you have to design a menu from it, then menu application, if you have already studied core Java. Okay if you have read Menu Driven Application in Previous Languages ​​CC BY So this is not new for you but once we will understand the complete Menu Driven Application in Stack Implementation that how you have to design the menu so that these types of menus We can take it in queue because what will happen is that when we create queue, only the options will change, like here push pop is displayed, there insert delete is displayed, there will be some more options in the link list but the menu will remain the same, so in the first step we think that How will this menu be created and what will be my requirements for these three functions ? Okay, so here it will be implemented in two ways. Listen carefully, in a sequential manner. Two classes will be created, one because we are making a console application. Okay, right now we will not Web application is not going to complete data structure in Java. We will read console base and we know that when any application console base is made in Java, it has main and main is our main method which executes first, so main The work will be to give you this menu and call the function according to your choice. Call the method. Sorry but where will these methods be? This method will be in our own class named Mastek. We will create a class of our own. In that class we will have the method of push and pop. The method will be the method of display which will perform the operation on a stack, so in the first step you have to think about this menu, after that in the second step we will come to the implementation, right then this menu. Well, or we can also do reverse engineering, first let 's see the complete stack implementation, then we can see how to call it in the menu, so both of them are our own choice, so let's do one thing, first we come to our stack implementation. Sir, you are saying that we have to create this method ourselves, we have to convert it into stack, so first we see the implementation, then do now? First of all, I have to import all the packages that we require, so there is only one major package, one class which will contain the methods of your stack and one class in which we will design the main in which we will write the main. It is clear, so here is my first class. First of all, we created our first class, I named the class My Stack. Now understand the reason why I am naming it My Stack. Because the class named Stack is already in Java, so we do not want any confusion. Stack is already in this. Build class in Java which is available in collection but that is its own implementation and here we are creating our own stack right now what do I need in this class my stack so let me create private something they are an array Right, so here we have cleared an array, okay, first of all, what have we taken here, we have taken a private final final variable, integer and named it, I have max underscore size, max size, this is the max size, whose value you have kept as 10, okay, excise means. Whatever your stack is, the one you are going to make, okay, what size will it be? Okay, what is the size of yours, we will create one in the class named Mastek, we will name that stack as stack, okay, so Mastek. Or you can do it like this, Mastek is fine, now in this class named Mastek, you have taken one final variable second, we have taken a private variable, private integer ger top, what is the initial value of top, why did we keep -1 top? Because you remember last time I said that stack is the implementation where the element is pushed from the top only, the element is popped from the top, so what will be our top here, a variable using which we will push and pop the element in the stack . What is the size to be kept, we told it the max size, right, and now what we did here is, OK, we created one, I named this one as Private, we kept its data type as Integer, I named it as Stack, right? Stack is fine in small letters. You have declared this stack as private integer. Stack is equal to new integer. Of max underscore size. You have told what will be its size, what will be its maximum size, so these are all three, we have declared instance variables. Why are we taking instance variables in the class because with these three we will push, pop and display, so I have to create methods one by one. Got my point, these three are private variables because their accessibility is limited to me only by the three of the class. You have to keep it in the method, you understand, okay, so what did you do here, you created an array, but you see, keeping the name of array as stack will not make it a stack, now we have to convert it into a stack, now we have to apply the rule on it which Are applied on the stack and why is this state because you have told its size, the maximum size of your stack will be of size 10, so here we will also have to check the overflow, if the stack overflows then what will you do, right? Now in this class, my first method which will be our public method because it is to give me access to the user is public void push method, the first method which we will create in this will be push method but I define it as On the next page, but you will let the class run continuously, meaning you have to run continuously, I understand that space is less, on the next page we will create each method on a new page and everything is going on inside the class. Right, in the class you took a variable named maxize, took a variable named stack, you made it, this is your stack, now this is your stack, now the stack will be formed on this, now the rules of the stack will be applied on this stack, now this mantra is blown on this and When this mantra is cast, it will automatically convert into the stack. If you understand, then what we did to do this is to create our first method, which is public method. I named the public method as it means return type is its void method. Now what should be the function of this push method? Whenever we call push method from the object of class, it told me by pushing the element in the stack, right, but you see, imagine, this is yours, what is stack imagine, what is the meaning of imagine. What to do in that and this is the stack you have made 0 1 2 3 4 5 6 right and 7 8 and no this is yours okay and above this is your max size okay now if I have to convert this hell into a stack So this means that the rules of the stack will run on it, hey, you have made this, or yours is ready, you have told what will be the size of your key, max size and don't worry about each and everything, we can apply practically also, in the complete code, you have to run it on the system. I will do it and tell you, but understand the concept, this is the hard work of a child, when he makes his own, then it is hard work. In the collection, the stack is a child's play. After all, you have understood how to make a stack by yourself, then when I am with the collection. If I implement this then you will understand that no push method has to be written, no pop method has to be written, everything is ready but it is important to understand what it is doing behind that, that is more important right here, if you see then push method is now this You see in push method, understand what will be the work of push method. When your menu comes, what will you say after seeing that menu? Enter your choice push one, then this push method will be called. Push method pushes only one element at a time in the stack, so push. What is the job of the method is to take an element from you and push it into the stack but listen carefully you will call push method for the first element also you will call push method for the second element you will again call push method for the third element like this If your stack overflows, then this push method will tell you that the stack is overflowing because you will call the push method every time, so here in the first step, what you have to do in push is to check that when your stack overflows, then you will see. Whatever element will be pushed in this , where is your top placed now? Your top is at -1. Right ? Hey friend, look at this. This top is placed at -1. Through this, operations have to be performed on the stack. Yes, say yes, absolutely yes sir. So this top will move forward, elements will be pushed into the stack, so children, when the top reaches nine, the max size reaches -1, then the stack will overflow. Max size, you take 10, take 20, take 50, but when your top max. Reached size-1, it means that is an overflow condition of stack. So, if you are ever asked in an interview, okay, what is the condition of stack overflow? What is the overflow condition of stack? Tell me directly, Sir, when top reaches to max. -1 when top reaches max -1 that is overflow condition of stack write so here what you did here first of all you checked if your top is equal to whose max size -1 if your top max size When it reached -1 then we wrote system d add prital n stack is overflow stack is overflow ok but if stack is not overflow then what to do then sir then you have to take element from a user and push it in the stack then from the user If you want to take an element, it means that you will have to create an object of Scanner class, okay and for that we have created Utilman, first of all I create an object of Scanner class, so what we did in Else is Scanner Scanner Scan equal to new Scanner Scanner Scan equal to new Scanner and Here you have written system D and you see that scanner is the object which will be used in push, pop and display, so you better do one thing, that is, wherever we go, it is fine, now we will make it the same, but we will You could have declared it at the class level too, couldn't we have made this the object of the Scanner class, then I would not have to define it again and again, that if you ever have a requirement for a Scanner, you can use the Scanner, but in our case, see in Pop. No choice is to be taken from the user because last in According to first out, the first element and the last element which you have pushed will be popped, so it is better than this, we declare scanner only this. Right, so what we wrote in else, here in else we created an object of scanner class, scanner scan. Equal to new scanner is fine and I wrote it in brackets system dot in system dot in ya because you have to scan the element from there. Now I have given the message system add print enter element enter element for push that just to push you have to one element. You have to enter, I am understanding and it is coming and it is coming, there is no choice, there is no choice to understand, you have to understand, watch the lecture once, watch the video twice, you have the biggest plus point, rewind again. See, but you will have to understand children, stack implementation by yourself, queue implementation by yourself, circular queue implementation by yourself, if you understand then after that see what twist the story will take after this, the speed you will gain boss, what did I say, no one can stop you, that's why. The beginning of any thing gives trouble, after that things go on very smoothly. Whenever we study any new technology, when we study any new subject, the beginning is most important, we just have to have courage in the beginning, after that, then You see, what happens when a batsman goes to play, he starts with four, five or 10 balls, after that he understands how to play, how the ball is swinging, okay, that's the only thing in the data structure. Starting is also important and I am trying very hard to explain it to you in the simplest way, so what we did here is to scan the element, now we need a variable to scan, so we took n right and this You have written n equal to n = scan dot next int scan dot next int so this is the element you have got. Now this is the element you have got. Suppose you have given the value of n as 100 so this is the value that I want to push in the stack. So what to do is to push it into the stack. If I want to push through the top, then where is my top right now? -1 pe Hey, what is the name of the stack right? So what did I do? Look , wherever the top is, plus plus the top, it is one ahead. If it increases, then the top has come, this is your stack, this is yours or this is your name, we have named it stack, this is my stack, so now I know, my top has come to zero, okay, so what have you written, stack off stack off Top equal to A is done, see what is the simple story, your push function is finished, this is it, push method, what you first check in push method is that your string is not overflowing because if there is overflow then This is the end of the matter and there will be overflow here because we have taken the background data structure and we will implement it with static memory. Right, now see, you propose the push function menu, this menu is in front of you, what choice did you give? Just like that . If you give choice one then we will write this code in the menu also, directly you will call which method of the class, push method, then as soon as the push method is called, as soon as your push method is called, all your variables which are declared in the class, as soon as Your push method was called. It checked whether the top is of size -1 or not. Where is your top now? -1 is the top. Your top is -1. Initially the max size is -1 meaning it should be nine. According to us it is not. Else, enter n element for push, you gave 100, it did top plus plus, top minus and at which position zero came, this top came zero and n was assigned to the stack of top, meaning your 100 is in the stack. The push is done , the menu will appear in front of you, then you will be asked to enter the element for, then it will check whether exercise-1 has been reached at the top because if you said push, it has not been reached then it will ask you to scan the next element, you again gave 200. Top plus plus to top utha ke ji one se sorry which position from zero came to one pe then what was pushed in the stake of top 200 this is your second element pushed. Do you understand the story and the collection does the same thing automatically. It is just and overflow does not happen because it is dynamic but you see what will happen here, like this you called push function continue 300 you pushed the next element 300 then 400 then 500 then 600 then 700 then 800 and then 900 so now your top is Pay attention here right now your top is at max size is -1 then the push function you called top is not at These Through coding, the top will increase and one element will be pushed again, so this time where is your top at nine, this is your top at nine, okay and the next element is pushed 100, now pay attention, now after seeing the menu again, push. Now when you said push , what happened? Is top max size at -1, yes top is nine, value of max size-1 is also nine, message will come directly, stack is overflow, if I understood the story then this was about stack implementation. Push Function Using: Are you using it? How will you implement the stack? How will you push? Well, a lot of things are still left, now pop is still left, display is still left, still manual design is still left to be done but I understand the push method. I hope you have understood the concept of how the push method will push an element into the stack. Now you see, a child asks a very general question. Sir, you are explaining the concept to us, I am understanding it, but sir, when I ask myself. If you try to write this quote, it creates a big problem, that is why I tell you again and again, see, do not run behind technology, run after the concept because languages ​​will change but the concept never changes and if you want. How to improve yourself conceptually and logically, then come to our premium course of Tech Scholar and you will see how many multiple examples of this method have been explained there and I have explained the concept properly that how to improve your logic. Have to improve and this logic improvement is as easy as how to navigate the phone, how easily we run the phone, just as easily you can learn this technology also, so in the premium course, when you learn the same concept. If you see, you will understand that things are actually not as tough as we make them out to be. If the user said pop, then let's do one thing again, so now we are in the class, what is the first method we wrote in the class, push, this is my push method, this is my first method, but right now I am in the class, in the same class now. We write our our next method that is public void which is the next method which will be our pop next method is pop method right so now if suppose again I have this stack again we have a stack means the same stack again means the stack is the same Again the same position 0 1 2 3 4 5 6 7 A and this nine and this is your max size this is your max size ok and this is what your stack is ok now after looking at this stack if you said pop it means see the menu Sorry, you saw the menu and you said sir, I have to pop an element, so now see, you were being asked to push an element, but the meaning of pop is last in first out, the last element pushed will be popped, but but but stack. There should be elements in How will you pop an empty stack? Okay, so it means that the pop method will first check that your stack is empty. Now there are two ways to check it. In Java, we have two choices. The best choice is to pop the stack. The rule says stake like what is the condition of stake overflow I told you what is the overflow condition of stake no r top reaches to max -1 that if your top reaches max size min means your stake is overflow what is the condition of stake underflow MT Think it yourself, tell me by thinking it yourself, I thought it right, if I thought it, sir, when top is minus wp, then overflow is underflow, stack is MT, because as soon as your first element was pushed, you noticed that your top went from minus one to zero. It was reached but if suppose you made this declaration and after looking at the menu you said straight pop straight pop then top is only minus and pay and you see the stack will be MT twice your stack will be MT twice and you see I Again and again I remind you from time to time, don't think about the collection right now because all the methods will be ready there but we will go with the implementation, friend, this is the sequence, I have not understood it, you are fine, work hard once and understand. Okay, so if we talk about pop, pop means removing an element from the stack, but how will you do it from the empty stack, if there is an element in the stack? If you want then you can see that your stake will be empty in two cases. First, when you have seen the direct menu and said pop, you have not pushed even a single element and you have said pop, then this is the first time that your stake will be empty and second, if you have pushed the element. Push : Suppose if you push an element and then start popping all the elements one by one, the stack is still empty, that means in two cases the classroom is empty. One is before the children come, the class is empty but after 10 children have come and read. And then they left and then the class became empty but in both the cases the MT condition in the stack is the same because what will happen now is where your top is initially at -1. Suppose your top is initially at -1. Okay, this is your top-1 point but if you have pushed the element then the top was increased. Now when I pop the element, I will bring the top down, then when the top becomes top, where will it go back to minus and then in both the cases you will get pop. What is the first thing to check if your top is equal to equal to mine? If your top is equal to equal to mine. You said Stack is MT or Stuck in Under. There could have been another condition of this, however that It is not valid according to the rule but in Java, you know that there is an object which you have created a stack, it is actually a stack, it is a stack and every object is an object and remember we have read in Java. With every array there is a variable called length which tells you how many number of elements exist in this array. Got it? So here you could also check a condition that if Your stack is what you have named as stack. If stack dot length is equal to equal to 0. If the length of your stack is zero then your stack is MT because length tells you what is the number of elements in your stack. But here it is better. The option is that we check from the top, so I checked that if top is equal to equal to -1 then it is fine and here you will understand the limitation of Are in Java, I told you that memory allocation is dynamic. But its entire behavior, its nature is completely static. What I mean to say is that if you pop an element, it is certain that it has been popped and it will remain in the background. Hey, keep in mind that I will not remove it permanently. I will get it because you have created the stack and no matter what language it is in, it will not remove the data element permanently. Even if you remember the collection, if you have studied in Core Java, then I told you there also. That boss, when you use background data structure with array, it creates a copy because this is the nature of the stack, sorry, this is its nature, it cannot remove the element permanently, it is the nature of the linked list which deletes the note. Remember the collection , okay, so here you have it and hey, what does nature say that boss, I will not delete it permanently, then what will I do, sir, so what you have to do, you have to believe this because when you do not pop, that The element will be shown, it will be visible while displaying, but as soon as it is popped, it will stop being visible, but it will stop being visible, it does not mean that the data is not in the memory, it is there but it is not visible, but its existence does not matter. Why does it keep it because when a new element comes, it will overwrite it? Sir, confusion, confusion, don't get confused, friend, practical implementation will make you understand better. Come on, what is the first condition of pop, but what I told you, keep in mind that this stack is in the background. Oh yes and yes it means he will not remove it permanently son but then what twist will come in the story and let's see now. Okay so this is pop. Now what did you check first in pop. If it will definitely be on top-1 then stack is MT. But if it is not so sir then what will you do then you will do one thing what will you say in one n like if suppose you have this element in your stack then what do you have to do suppose right now I have some elements okay let's go till this point you have to say this The one which is last should come in n and the top should move down because there are always elements in the stack from top to row, so now who are the elements from top to zero? 100 900 Sorry 100 Whatever 90 80 70 Whatever element you gave, I don't know, okay, take it as 1000. Okay, so 1900, this is also an element in your stack. Now if you assume that now I will look at it, then neither will I see it, but as soon as I pop, I assume that it will be popped. went to the top Now I will pick it up and bring it down, now only so many elements will be left in my stack, but that is its assistance, so what will happen, it will override it, because what you will do in pushing is to push the top forward. Okay again. So, you know what to do. What you have to do is that you have to say that boss, if the stack is not MT then assign the top position element of my stack named hey to n and I assume that if it comes in n then it is considered gone. Let me tell you okay and take the top minus one to top minus minus okay and here I have given the message system add print popped element popped element okay and you have printed this popped element popped element ps n this is your The element is popped, this is done, your pop function is done, we are coding all this in our class itself, okay, let's do one thing now, push pop, run both, it is not enough, execute both in the push function. You come and see the function of push because we will not move the screen back and forth again and again. Push. We have understood what the push method does. The push method takes the element from you, will move it to the stack off top and assigns it to A at the stack off top position. Right, I have suggested this five times, I have given the elements, top is on MIVE, let's do one thing. In the first step, assume that after looking at the menu, where is your top placed right now, is it on MIVE, pay attention, right now your top is on -1. You saw the menu, you saw the menu of your stack, after seeing the menu you directly said, pop it, you haven't pushed it yet, but still the choice of the menu is the user's, he can give anything, there is no rule when When the menu comes in your hand, then it is your choice what to order. Is there any rule in the hotel that you have to order rice first? Then you will get rice, then pulses and then vegetables. Hey brother, my choice is the menu. You have given me water first. Bring a bottle, ok, after that bring salad, then dal, then rice, this is my choice, so you will decide whether you want to drink water first, whether you want to eat salad or whether you want soup, there is no rule, ok, like so. Just after seeing the menu, suppose you came to this menu and after seeing the menu, you directly said pop choice to enter your choice to pop. Now as soon as you said pop, the pop method was called, but what did the pop method check, what was top, minus, and so on? Yes, look, you are initially top minus a pair, so what did it say, the stack is empty, but now what did you do, when you called the push method, what did the push method do? 10 20 30 40 If you pushed four elements, then where is your top? Now when you saw the menu and you said pop, now he checked, is there top minus and pay? Now it is not there, top three is placed, came in else n equal to stake off. Top, which element is in the top position, now it is 40, it is 40, it has come last in first out, top minus minus, this top has slipped, see, what I was explaining is correct and you said, pop de element is n, so it is correct. You will get the message pop day element is 40. You have accepted this but I will prove it practically and tell you that it is still kept in Hey because the nature of Hey is not to be permanently deleted but sir it has been kept, its advantage is nothing, nothing. No, because that is the nature of the thing, right, but its existence will not make any difference because now see the reason, you popped an element, now you asked again and said, asked again, an element was asked from you, let's say the element asked from you is 70. So what it will do is you know top plus plus and again stack of top equal to n so again it moved the top forward and on top of the one which was 40 it overrides which one is 70 so this is the nature of stack using Hey that when we When we implement the stack with Hey, then we have to understand that the element which we have said pop has been popped but actually it exists in the memory because it cannot be permanently deleted because that is the implementation you have done. That's why I was saying that if you make your own stack and see it, you will understand the memory structure and why are you reading this entire paper to memorize it, not to study the subject a little, but to study this paper so that you can understand. How the data has to be stored inside the memory and what is the relation of the data with other data why this paper is highly demanded by top universities so that you can play with the memory so that you can understand the memory because every technology wants memory management whether Be it Java, Dot Net, PHP, Web Development or Mobile. Development is a game of memory management. The more you manage the memory, the more predictable the software will be, the more successful the software will be. If you understand the story then this was our MT. Now see what happened when you popped the elements one by one. First pop it, the top is here, okay, now when you view it, you will see three elements, now let us see the display method, it will show the elements from top to zero, then popped the top, then popped it, then popped it. Top came back to -1. This is the same class condition. Even when there were no children, the stack was MT. Class was MT. Even when children left, the class became empty. Top came back to -1 because what happens in the stack is that the top increases. Top b It is possible that the top will move forward, the top will come back, greater than -1, then you said pop, then it came down and while coming down, it came down to -1, then if you now after popping all the elements, you again said pop, that is the direct message. Will give stack is empty so this is how to check or this is how to perform pop operation in stack that when you implement are and see stack implementation with are in java so how will we perform pop operation hope you Can you understand this thing? Now sir, please display it further so that it gets confirmed because look, if you create this much menu, then this entire game is running in the memory. You have pushed the elements. Now sir, how will you know that the elements have been pushed in the stack? Sir, how will you know that an element has been popped from the stack? Okay, so let's do one thing. Let's see the display method so that if you push an element in the stack, you will understand that yes, this is this. Elements have been pushed in the stack and this is visible to me. The condition of overflow will be visible. If I pop, the condition of MT will be visible. Then the next method which is display is ours. All this coding is going on in our class. Son, isn't this whole coding in our class itself ? If you are writing then which method did I write next? Public void display. Now what is the function of this display method? Then the same thing if you saw the menu and directly said the choice in the menu is display then what should be checked first in the display? Is the stack empty sir? I will show the element. There should be elements in the stack otherwise the display will display the element only when there are elements in the stack and if there are none then the stack will also say MT sir ok so what you have to do here is the first condition to check in this display is the MT one. The condition of MT is same, if top is minus and pe then system outed priital stack stack is MT stack e of MT if your top is at mid pe then we said my stack is empty MT but if top is not at mid pe if top is Not at -1 If not at top-1 then what to do then to display the elements of stack from where to where from top to zero right from top to zero then what to do here a message is given system dot ad prital elements elements Off stack elements off stack write and as usual, put a for loop for i, take a variable or inger i here, you will directly declare for here also, it will work fine, here put a for loop here, integer is equal to top and greater. Then and equal to 0 aa minus minus from top to zero we put a loop to look at the elements of the stack to view because your elements will be from top to lake zero because in push what you are doing is increasing the top. What you are doing in pop is you are sub-decreasing the top right, so wherever your top is, there is an element in your stack from there to zero, so we made a loop from top to zero and what we wrote here is system data. Outd prital a stack of a stack of a and then else and then curly bracket close this is how to display the element of stack that how will we display the element of stack let's see if you suppose this is your stack suppose this is stack you OK, this is your stack element. Suppose where is your top right now ? But if you push the element, then these positions are from 0 1 2 3 4 5 to max. Now you understand that you have pushed the element 10 20 30 40 50, this is your top position now, which is the top position now you have displayed. When asked, he saw whether the elements of the stack are on top-1 or not. That loop runs from top to zero. This loop will run from top to zero, meaning from i e 5 to i e 5 to i greater than and equal to 0. This loop of yours will work. Okay, this loop will work. Your aa minus minus what will that do? If the stake comes then what will the first element display? 50 Your first element is 50 then i mine my 40 30 20 10 so this element is giving the look of a stake that the elements which are in the stake came last, now when you pop, you Look, 50 will pop automatically, so now you will display it. After popping, the top will come here, you will display elements from here, this is what your display method is, so hope you can understand how we are converting an array into a stack. Is this something ready made ? Oh no, we have declared it and we have performed all those operations on that stack which are done on which stack. Now what is left is sorting and searching. Pick the element pick means difference between pick and pop. This is what pop does. By popping the element and deleting it, it is telling you that the element has been popped, but if you want to see the element of the last position that sir, I do not want to pop it, tell me which is the element which is going to be popped. If there is a pop then it is called a pick, tell me what to pick, then pick means the last element, then they will also see how to pick the last element, it is nothing, just display the top element, then your peak operation is done. Then if this is a stack or a collection, then there will be searching and sorting and when you go to the collection, you will not need to write any code, it is ready, but children, as a developer, focus on writing code instead of ready things. You will be able to understand how memory management is done, you must have used the method of collection, let's say push, you don't even know how the push method is working internally, how will you answer the interview, you are understanding the point, okay so here we have See how to implement stack using Hey, so you see all three methods, however, our menu application is still left, this is the push method, this is what the push method we have, then we have the second method, pop, this is my pop method, pop method, we have seen. How to create pop method, then we have display method, this is my display method, how to display the element of stack, so now we have prepared that class, our class is ready in which we have written the code of stack implementation. This is what my class is, this is my class in which we have taken the max size as the final variable because if the stack is using it, it will overflow on top-1 and this is your stack, we have declared all three of them and then in the same class, in the class named Ma Stack, we have specified three Made method push pop and display but now sir how will you call these three methods. You said if this menu will be made as an application then how will this menu be made then it will be made exactly. See are liking the video and if you are liking then you know it is a very good thing that with friends when the company Will I go to a top MNC or will I start my own startup with friends? It's a different matter if I have the support of my friends, so please share the video with as many friends as possible and stay tuned to this course [Music]. Hey, we are understanding how to do the stack implementation by using it and I told you three methods, pop and display are fine but now the story ahead of that is that sir, how will this man be designed, is n't this man divine application you said? It was said that we will create menu driven applications, so now see, we have created menu applications many times in core Java too, but I had also told you in the last lecture that you should understand it well once, okay and then we will use this further. Why Circular Q And our implementation is going on using Hey, so this was our last lecture where we created a class, I declared some variables in the class, Hey, we named it as stake, okay, and then we created our push method, this is our push method, okay. We have understood very well that in the last class this is our pop method and the third method I had created was the display method. Okay, till now our code is ready but now this is our class. I told you that two classes will be created. One in which we will have our push pop display methods and now to call these methods I have to create my menu application where in main So now we create our main method, so here we created our next class, class is ok and here also in this class, I have to import it first because both the classes are different, yule package, so here also we wrote Static Void Main Method Public Static Void Main String A RGS Okay this is what my are and in this now I have to design my menu so you see the simple concept is to design the menu and call all the methods one by one then menu To design, first we need a variable named choice because we will take the choice from the user and we have to create the entire menu in the do while loop. Right, we started this do loop and what we wrote in this do loop is system and print a dotted line. Lee right here and here we wrote stack menu stack menu okay and then what you have to do is stack menu okay a then after system d add prital n choice what what to keep why did we take this do ba loop because I want The loop will run till I give four. Okay, let's do one thing. Let's take it on the next page. Or, no problem, we will understand a little bit. Push is fine. Then system d add print. Now we will also do coding so you will understand the code better. You will understand that there is no need of slan because we have written print, second choice will be your pop is fine and then system will print third choice will be your display is fine and then system will print out fourth choice you have to give exit to the user. Exit is ok so this is my do while loop menu is running, you wrote the menu but the menu is not complete yet, now what do I have to do after this, close the give sim add print line, you are ok, after closing the line, you then ask the user. Asked Sim Do Add Prital N Enter Your Choice Enter Your Choice Because the menu is your understanding, this menu of yours is continuing, isn't it? In this menu you have to take the choice from the user, so to scan the choice, we have used the do while loop above. Here I have declared the object of Scanner class. Scanner Scan is equal to new Scanner. Okay, and then System. In, have we created our Scanner object. Okay, now this menu is going on in your designing. Do While Loop. You have put Stack Menu, Push Pop Display. Exit and this is our menu, we are continuing, line close key, enter your choice, now I need to take this choice from the user, so this is the choice, we said this is choice e scan choice equal to scan dot ch method I need to call next at next so this You have got the choice. Now according to this choice, we have to call the push pop and display method of our class named My Stake. Right, for that I will have to create an object of My Stake class also, so I create that object here My Stake. My stack is equal to new my, this is the class in which our three methods are kept which we have just implemented, right now according to this choice, how will we call the method, then we give this choice in the switch case, we have written this choice. Switch choice is fine and after this what should be our case one case one? If your choice is one then what we have written here is A dot ch method I need to call push method, this will be your push method call and push method when call. So it will start pushing elements into the stack but it will also check that your stack is not overflowing, that is the code we have written in the push method, okay so this is my choice one and see you, I also told you last time that in the menu you Every application has to be created whether you are using stack implementation or you are using collection. You have to write proper coding and not when to push. This choice should be the user's choice. Push it as well as pop it as well as display it. There should be a choice, there should be a main application, so right now we are seeing static implementation in the background, that is why we are using it, but when the collection is done, the menu will be created, the only difference will be that there is this push method. If it is not from my class, Java's will be another difference that the collection classes are generic, meaning your stack can be of any type, whatever we have created is a collection of our specific data type. But we can make this also generic, there is no issue in that but we have created our stack with integer data, so here we have to understand only the concept in static implementation. Otherwise, you have classes in the collection. I told you last time. I had also told you, but how are those classes working, how will their push pop method be implemented, we have understood in our code, what we have been understanding from the last lecture, in the first part of this is the third part, I told you about the introduction of stack. Then we saw part one of Hey Using Stack in which we talked about how to design a push pop display method and now we are implementing this right so case one my push and this you broke it okay then case two case two I am telling you this in the menu because there is a push method. Look, anywhere in it you are getting my stack class and the myc class is our creation only if you implement the collection, then what will you write in place of myc. That's it and we will implement the coding of stack. Okay, and that stack is Java's own class. Which pop second method of the collection did we call? If the choice is two then which method should be called? Pop method is okay and if the choice is three. If choice is three then we directly call m dot display method which is the method of my my class, you broke it also ok and if choice is four then only broke it because we talked till choice four only till three. This is choice four, this is our exit, so for the exit, I did a break, so what will happen to you with the break, the program will come out of the switch case and it will directly get the while loop of that do, this is the curly bracket of the switch and this is while choice is not equal to. 4 Don't worry, now we are in the implementation and this is the curly bracket of the main. Close, so now see a little menu in two parts, you should understand. First, in the main, you wrote this code, this is your curly bracket, this is your curly bracket of the main, okay, this is. What main does this do, so in do, we did the complete designing, this designing of ours is continuing, okay, I asked you for a choice, after that you told me, this is done, this is done for the bracket switch, this is done for the mains and this is done for the class, okay, that means done. You will see the bracket closing proper, we will understand it at the time of coding, now here the execution, you understand that now when the menu appears in front of you, as soon as you run this program, this menu will appear in front of you on which it will be written, Stack Menu is not in white color. It will not come, it is system specific, right push on number one because you have given complete options in the menu, pop on number two, display on number three is fine and exit on number four, this is complete, you have given the choice right, now see, this menu will come and here But you will be asked to enter your choice. Now after seeing the choice, what did you say? You said push directly. You said push. Okay, so you have understood the menu. How to design the menu. Now when you said push, the push method of Mastek class was directly called. Where is the push method of Mastech class? Here is the push method directly called. What did the push method do? It ran its code and went to the stack and pushed an element. There is one element right now, only one element will be pushed because keep in mind that this method is called once. It will push only one element, right? The entire stack will not be filled at once. If one element is pushed, I have explained it to you last time. As soon as this push method pushes one element, then this menu will appear in front of you. It will come till you say exit because I have put a do while loop, got my point, so now you asked again and said sorry, said one one again, meaning again another element was pushed, got it, then you said sir, now display me. If you want to do this then how many choice three did you give, as soon as choice three was given, it directly called the display method, the display method checked whether the stake is MT, if not, then it displayed the number of elements in the stake, I will give you the code of the display. I have explained in the last lecture, only the menu code was left, rest of the code we have understood in the last lecture, ok and after this you If you want to pop then you can call the pop method so just call this pop method so how long will this menu last till you and you see like I told you the menu is always the user's choice now without pushing If the display says three straight then it will say stack is empty because we have given the condition so I hope you have understood this concept that any data structure implementation performs multiple operations. If you talk about stack then push pop. Display If you talk about queue then insert delete display If you talk about link list then create insert delete display Ok if you talk about tree then create in order pre order post order so when there are multiple operations in the application then the best way is you one Make a menu and ask the user which operation you have to perform, not like this, in the main itself you have written push, you have also written pop, you will see, when I will do the implementation with the collection also, then first let me explain all the methods to you, but after that we will do it properly. We will create a menu application because it is an impactful concept that unless you understand the data structure with the main application, you will not be able to understand the operation, how it is being pushed, popped, displayed, so I hope till now take a look at the implementation. So maybe we can understand things better. Okay, so first of all, what do we do because our first implementation is data structure using Java, so here I create a folder of mine so that we can after this, it is okay with the name of Java DS and after this our All the programs will be in this folder and that is because I have committed you that I will provide you every source code, okay, so there is no tension about the source code, you will get it on the website, okay, all the source codes are available. In these websites, only you understand the concept, attend the classroom lecture, understand the implementation and here I as an editor am using Net Bans to implement the data structure concept and you see the editor is never concerned with the logic, if you Using Clips you can go ahead with that if you want to write code on notepad then that's it I created a project ok this is what my new java application and I named it snack ok stack application ok I named it Stack Application Okay so we create this we don't want any main class right now so here we and you see as we said that here if we don't talk about collection right now we will see the implementation from arrays then we have overflow condition. We will also get what we have to check and did, we just saw the push function, we told the pop method, we also made the display, we made the man driven application, we saw, so let us start with the man driven application and here I have made a package, okay. I named this package Suppose a Data Flare, okay Data Flare and in this data flare we have created a class of ours with the name of My Stack This is What or we named it Suppose Test Stack Okay so this is my class Test Stack Okay and this will be our main method in the steak class because for steak we will create a separate class for us right so first what we did is first we will define the menu here so how we defined the menu just see that here I wrote Stack Stack Menu OK What are the options we will have in the stack menu So in the stack menu we will have options First one is push OK The first option we have is push Then second option we have pop OK because there are three of us in the stack Let's talk about basic operations, our display and implementation will be about ok display method we have ok and then here we have written system d add prital and this is what and of this and now in a menu we will take a choice and This is when exit because our menu will continue till you exit and I will have to write this entire code in the do while loop, so here I have put a do loop, okay one choice, let's look at this also. And then here we told the user OK enter your choice a system add pretlet enter your choice ok and we have to read this choice so to read here we first imported java dot ut package sorry java Dot Ut package because in this we have scanner class. Okay, so what we did here is we declared a bubble named choice as integer choice and in this choice we have to take the choice from the user and we have to apply it in this do while loop. Until the user enters choice four, here I have written while choice is not equal to two, choice is not equal to four because our exit choice is four, I have explained it to you very well in one concept class and I always one with you The only thing I request is that you should not come to this subject directly without class for practical implementation, first understand the entire concept in the cross room and then the practical implementation. When you come, if you want to enter Betterleaf, then I will define the scanner here. scan equal to new scanner and this is what system dot in is ok and then here we have taken the choice from the user choice is equal to scan dot chch method nest int method so this is what you got the choice now according to this choice you see first this much code You run it and let's see what will happen if I run it, I will get this menu, I said 3 and then the menu will come, then the menu will come because till now we have not written anything in the code but now what do I have to do, now I get this choice. According to this, I have to call my push pop display method one by one and for this I have to create a separate class with the name of Stack, okay with the name of My Stack, so here what we did is in the same project again created a Java class My Stack And in this My Stack class, we will write the code of our implementation, so in this My Stack, you can see that for now, I have taken three methods in this, now white push method, however, we will write the complete code now, don't worry right, but for now, we have written here. Given this is push method, ok, this is push method, now we will write the code in it, first once we understand their calling, ok, this is pop method, means once we get free from the menu, then we will come here and then write our internal code, this is Display Method But see what I have told you now, on the day I come to the collection, I do not have to write anything because this already we have all these methods in Stack class that in the class named Stack we will already have these methods available but here Now we have to write the code ourselves because I have committed to you that we will implement the data structure along with the array and see how the data structure will be implemented in Java. However, I have told you that If you know the collection concept then a question mark comes that sir when we already have classes in collection then why should we go for then a lot of talk has taken place in the classroom regarding this concept. Just for an implementation but I have given you the choice earlier also that if you feel that your stack implementation is not for you then you have to just leave it and go with the collection concept which I am going to tell further but stay prepared in the interview. If he asked the question that can we implement this technique using arranged Java and you said yes then you will have to tell the implementation, then understand it friend, it is okay if I am explaining something to you in sequence then there is some reason for it. This question is among the top MCs. No Doubt Collection will also be asked but these have also been asked and are asked so you see this in my class named My Stake we have three methods, there is no implementation of them right now only a and also we have only one message In this we have given this is pop, this is display and that is because in this menu we have created, what we did in the choice is to put the switch case, switch choice is ok and here we have done the case one by one, which method push but push directly. For that we need to declare object of the class so let's say we created an object of my stack class my stack m my stack a equal to new my stack okay and this is from a I called the method m dot Ch method push method Now look at the definition in push pop display there is nothing case two this e a dot ch method pop method and third one e case th case th m dot ch method display method and case four we left blank because case fo There is green exit so I left case and black and apart from this you told in default, in default we wrote sorry default system d ad prital invalid choice and just put break here and put break because switch case is written then write break. Will have to break and break OK and yes straight break only so now if I run this let's see you see now if I said one this is push method two this is pop method three this is display method six invalid choice four exit this is what I come out So it means my main application is working properly. Now I need to write the code of this push pop and display but right now we are not using any such class implicitly. We will see our own stack implementation right so first of all push. If we talk about this then now you See, this is our method, but now for this, what data members do I need in the class, so first of all I need a stack as a private integer, so we have declared a stack named stack, we declare this, its initialization is not known yet. Doubt, we will write it in the constructor but of fixed size. Then I took a variable named private integer as top. What was its initial value? We kept it as -1. Why because the increment will be done from the top only. The elements will be pushed from the top only and will be popped from the top only. And then we Took private integer as a variable size is fine and I declared the size here as final so that whatever size is, I kept its value as 10, what will be the maximum size of my stack, max size, max size, what will be your 10, so these three We have declared the stack, okay and let's define the implementation of the stack here, so I have written here private integer x stack equal to new int of max size. You told what will be the size of your stack 10. So this is my declaration, I have created a stack of mine, the size is our max size is 10 and the value of top is -1 so now if I push then no doubt I have to use the scanner here also or import. java dot ut dot scanner okay and what did we ask the user in the push method that you see when you call the push method first it will ask what the push method will do first of all it will check whether your stack is overflowed or not now here There can be a condition of overflow because you have created a stack and you have fixed the size that your stack is for maximum 10 elements and elements will be pushed through the top. Hey man, now let me explain the whole concept one by one. I am coming to the class, there should not be any confusion, you are confused only when you are watching the direct practical session, then you cannot have any confusion at all, otherwise after making complete boxes one by one, I understood that your stack is a stack. In Top your is at -1 then Top will move ahead by one but when the value of Top reaches max size -1 then your stake will overflow and here overflow will happen because the implementation is going from green if this is the implementation we are talking about from the collection. If you do then the overflow condition will not come. Okay, so here you see what we checked first in this push method. If top, if your top is equal to two, how much is the max size -1. If your top is human, then what did we write? given system add print stack overflow stack overflow is ok but if your stack is not overflow then what should I do is to push element in stack but to push you took element from user enter an element for push ok and You have scanned this in Dot in means the data member you require in every method, you make it an instance, so all these are our instance variables, we declared the scanner then I can write scan dot next int, so I got this element but I have to push it in the stack. Through whose top top is to be done, where is yours now -1 So first of all we increased the top by top plus plus and then I wrote stack of top equal to n let's c then one of my elements got pushed in this stack this is how We can push the element in stack right, so you see once we execute the push function, what will happen after entering 10 elements, see what will happen if your top comes to max size -1. So now this is my stack name. We have called this function of the key class in the main, right? So I called push. After seeing the menu, I said push enter element 10 again push enter element 20 again push is ok. Again if I call push function 30 ok then Okay just moment let me work here also reduce the size a little bit so that we can understand this for now let's talk about three elements okay and let's 100 200 300 and enter your choice one this overflow friends one most Most important question comes in mind that sir how to crack the interview questions of every top most MNC so now here we have available for you the same placement d courses at tech scholar where we have explained how to crack the interview questions of every top most MNC. Projects to be done along with assignments and quizzes With this we have prepared this entire course and all these courses are available for you on Tech Scholar with the very minimum cost so come and let's enjoy this placement ready courses in tech with one So why did your stake overflow after three elements Hey, I made it three for 10, otherwise I would have had to enter the element 10 times. And now I have reduced its size a little because I have to tell you the condition of overflow, after three it gave the message Stack is overflowing why. Your stack, see what size you have kept. The size of this stack, we have kept it at three but now I make it 10. There is no issue, so what happened when I called the push function, it checked that if the top I am at size-1. If your top mass reaches size-1 then it gives message stack is overflowed that your stack is overflowed ok but now what do I have to do now I want to display the element of stack right. I have to display the elements of the stack in the first time, so what we said that to display the elements of the stack, from where to where you have to run the loop, because see what we read, as your top will increase, till where the elements in the stack will increase. If you have till the top, then I have to display all the elements from top to zero, right, so here is what we did, but before that you have to check whether your stock is MT, then MT can have multiple values, meaning. MT you can also see from its length because the stake is one, if let's say you have two conditions, you either check that top is equal to two is equal to mine, I told you two options if your top is mine So we can say stack is MT which is the actual condition that if your top is minus and pay means your stake is empty but if top-1 is not on pay then what do I have to do, I put a for loop and a message here. We gave the elements of the stack a message. We gave the elements of the stack right and then we put a for loop from top to i greater than and equal to 0 and aa minus minus. We gave the elements from top to row. Printed it and let's see system add printing i I wrote here sorry stack of i stack of i then it will tell me what is the number of elements in my stack and what is the condition of stack condition overflow top max size - reached 1 and what is the condition of stake underflow when your top-1 pay here instead you could also check the stuck dot length which is yours check that length if its length is zero that means you are not stuck Any element, we have both the choices, so now see, sorry, you have to run that class of yours in which you have written main, so now first of all, if I directly say display three, then it said stack is MT because right now there is no one in the stack. There is no element but now if suppose I pushed the element 10 again choice one 20 again choice one 30 again choice one 40 again choice one 50 but now I said display so it will display 10 20 30 40 50 last in Look at the rule of first out, which element was entered last, 50, then it is visible on the top, stuck in it is 10 20 30 40 50, because the same will go out also, that is why I have displayed the elements from top to zero first. You see 50, then 40, then 30, then 20, then 10, because the last one in there is 50, so according to the rule of the stack, that should be the first one to come out. Now when I pop, you can understand that your props. are being displayed and we are doing this entire implementation by ourselves by making our own and this is what I wanted to explain to you, which I told you in the class too, that if I use the collection classes method now, then you will enjoy because there You do not have to write any code but when you use the method there, this code will be running in the background in your mind that you will know how this push function is working, how the pop function is working, what is happening on the display. If the iterator will run, then how will the data elements be displayed? The gathering point is ok, so now we have seen which two functions are there in the stack, we have seen push and pop, but now what do I have to do, now sir, sorry pusho display, now what do I have to do, pop? That if I have to pop an element of the stack then pop is our third function so now we go again to our class and in this pop method the first thing we checked is my stack is not empty because if it is empty then how will you pop it because Pop means delete and element should be element for delete. If I wrote top e e-1 ok, what condition did we see, if it is on top-1 then we gave the message stake is mt stake is mt ok and when we went to collection then I said no there is a method is For MT method push pop display you have method pole pick so you see if your stack is MT then what condition did you check that if my is on top-1 that mean stack is MT but if the stack is not MT then what should I do What we have to do is to pop an element, so what did you see, the one which is at the last will be popped, that means through the top, so what we did, here we took a variable nn = two stack of top, we said that the top element has come in n . And we have assumed that what I told you, look remember what the stack is, you have done the implementation and the run time is definitely doing the memory allocation but its behavior is static, so we have assumed that the element has been popped from the stack . Will not pop permanently because in stack in A we are not allowed to delete element permanently because stack is implemented with static concept in memory so if you assign top of stack in A and move top to minus Top minus minus So this is our ajman that we have popped the element one and let's see what message will you get the popped element is the popped element is okay and who is this popped element a is okay this is the popped element you who is yours n right so this Now our pop method is ready let's see this you a so now if I run this if I said pop directly then it said stack e mt but I pushed look you element 10 again choice one 20 again choice one 30 Then choice 40 then choice one 50 then choice one 60 okay now look at the display how many elements are you coming 10 20 30 40 50 60 but now when I pop first who should come out let's see 60 like you Hi you said pop it said pop element e 60 c this one pop element e 60 and now if you display 3 60 remove from this stack if I said pop again pop element e 50 okay again display again said pop Pop element E 40 again display again pop again pop again pop all gone now look at the display he said Strak is MT so this is what the implementation of Strak using Hey what will you push how will you pop how will you pop so you see I have I have created two different classes for this, one is fine in which we have written only the menu, this is what the main menu is that we have only designed the menu, in this it is fine, I have designed the complete menu in it and one by one we have called the functions. Push Pop Display But these are not functions of the collection, we created our own functions and our our background data structure here, what did we use? Hey okay this is what the stack we have, this is the code of our stack, you see what I did is the variable. For the final max size, because I do not want to change its value, if it is private, then I do not want to allow it to be accessed. Scanner, we declared the push method, we created it, in the push method, we first checked the condition of overflow. you have understood the concept of how to implement stack using array in Java, how will we implement stack in Java, so let's meet. We will talk about some more important methods in the next lecture. Stay tuned to this course and if you have any confusion, please comment and if you like the video, please share it with your friends [Music]. Talk again today on Stack. But in the previous lecture Implementation of Stack Using Collection implement data structure, we have one option Hey and one option we have Collection and I am taking both of them as similes. As I had committed to you, so in today's lecture we are going to see that sir, if we implement the same with the collection, then how will it happen, but I hope that before this you have read the collection, I told you on the first day also. It was said that if you are looking for data structure implementation using collection then you will have to read the collection a little and if you have even a small doubt in the collection then you are requested to please watch the video of my collection which is available in core Java, very detailed. In I have taught collection, you will get the details, read the collection, understand the collection array, list interface, set interface, queue interface, inheritance from list, we had seen where we have Hey, list is link, list is stack, vector is ok, classes derived from vector are stack. No, I have taught you collection in very detail, we have studied collection in two ways, okay, one, we have talked about dictionary, we have talked about hash map, we have seen mapping collection, okay, so once you read that whole concept, then after this, when If you come to data structure implementation using collection then things will be very easy so now you see if I want to do stack implementation then we know the concept of stack uses the rule of last in first out ok but now if I want to do the same implementation using collection If I talk about how to implement the stack using collections, how will you implement the stack with the collection, then here all the classes we have in Utilman are generic classes, meaning you can define your collection with any data type. Also read: Before the generic class, we also read the wrapper class. Okay, all the classes in the collection are generic classes, so when we did the stack implementation with Joe, I told you that our stack is only an integer. Will use data but when we use collection classes for data structure implementation then there will be no foundation of data. Here you can declare any type of stack, integer, float, double, string, character, boolean but Currently, in the first example we will see the stack implementation by taking integer data only, so here you understand that inside this collection we have a class which is our collection interface, we have a class implemented from that collection interface, List, I am not making the entire collection and After this list implementation means your list is an extended interface from collection and there is a class implemented from this list, we have a stack, okay stack which is actually a sub class of vector means a commented class from list is vector and you have a class extended from vector. Stack So here Java has given me a class in which it has done the entire stack implementation itself, so if we talk about this stack class, then before this stack class, we discuss some important methods that which are the important methods in this. What methods do we have in the stack class? All the methods that we have created are the same when we implemented the collection. Sorry, when we implemented the stack. Here you will find all the same methods here right like we have a push method. We have push. method but this push method will take you as n What will the argument ask for object means generic class object right then we have push method so with this push method we can push the element in stack this is push method which is available in stack class which is in collection we have pop method the return type of this pop method is object pop method we have which internally follows the rule of last in first out. That is if you have to pop an element from your stack so no need to write any code directly use this pop method which is available in stack class in java right then we have a method called is mt with which you can check that your Is the collection empty or not? The return type of this method is Boolean, so here you do not have to put any condition like top is equal to equal to -1, now you do not have to declare any top, nor do you have to create any Hey, okay itch. And everything is implemented by Java it itself so in this snake class the important method which we will use is for stack implementation we have push method is pop method is MT method then we have another method called pick method okay with the use Off this pick method we can access the last object that your whatever as we say last in first out so the difference between pop and pick I told you hey also in me what pop does is it will remove the element and return that element to you. Whatever object is removed it will return you but pick method is only the element is in this tac but it will only tell you which element is the last element of yours so we have this pick method now let's see their implementation one by one. Don't worry, push is pop, this is MT pick method, then we have a search method to search your search, which will ask you two objects, that is, two collections, first, it will ask you for your element, sorry, the search method is available in the stuck, so you have to give this object. Okay so with this search method you can search your element search method you have right then we have a short method okay short method to sort the collection that if you have to sort the element from the collection collection element if you have to sort the element of your stack Have to sort then we have the sort method don't worry whole implementation one by one now we understand so you see the difference understood friends if you want to reach from learning to earning from classroom to corporate if you want to reach then tech scholar But there is a place ready course available for you, where we have prepared this entire course by matching the interview questions of every top most MNC with the pattern of their interview questions, so all the courses are available for you at a very low price on Take With One. If so then enjoy these courses and get ready to crack the top most MCs that when we implement the collection with Hey then we have to do the entire coding by ourselves which we also did but why because I have told you that we can do both the methods But if I implement the same stack with these build classes of Java, then I already have all the methods available which is the search method which will return to you in Boolean format and tell you whether your element is successful or searching is successful. Or is there no short method which will shorten your collection ? Collection means see, all the classes in the collection framework are called collection, actually because they are given for data collection, we have read that there is list link in collection. List Stack Vector Hasset Linked Hasset Tree Set D All these classes are available for data collection, so among those classes we have the class for stack implementation that when we implement the data structure in Java, then there is also a class named Stack. We have which now how will we use it so let's see now here what I have to do is first of all I have to implement my stack so you see the stack that we created, you saw our stack was implemented with Hey and if that Hey If it was implemented with then it was a static concept and if it is static then it means it had a pre-defined size. 10 Hey I hope you are reading the collection after the static implementation with because I will do the comparison because I will also do the interviewer that what is The Difference Between Implementing a Stack Using Array and Implementing Stack Using Collection Classes So when we implement a stack with Array then there we have an array which we create called stack. Whose size we had kept at 10, now if I push three elements in it, then my entire memory allocation will be 10. Out of 10, we had pushed three elements. If you push more than 10, then it will overflow, but when we use the stack class. If we do then the first thing will be how to create a stack class. Now in the first step you will say sir, here you have not created any menu, I will create it, here also we will create a menu driven application but first let us understand each method one by one. Let us understand why C method is given. Okay, so here in the first step, what you have to do is if you want to implement a stack, so first you need to declare the object of stack class, so you have told the type of the stack that you are making. You will create it for Integer type of data, so what we wrote is Stack Integer and whatever you want to name your stack object, suppose I named it My Stack or you can also name it Small Stack. Name of the class. Stack and you also name your object as Stack, like we created ours, we created it with the name of Stack, we created a class with the name of My Stack, so here if you want, you can name the object as My Stack, there is no problem. Stack my stack is equal to new stack Okay and this is how you have defined the type Again integer if this is how we can declare object of generic classes So this is how you have defined your stack but the best part is that this is complete a dynamic collection where any There is no problem of overflow where there is no pre-defined memory. Well, here when your are will manage the stack internally then initially what is there is not declared of any pre-defined size and how will you confirm this. There is a method nearby, you confirm what is the size of your stack currently, then what did you see My Stack which is the name of the object Dot Just Column Method Size Method This size method will tell you how many elements are currently in your stack. As soon as you declared your stack, initially your stack was declared to be of zero size whereas our stack was implemented with Job Hey, what was the size of the stack? 10. Do you understand the difference and why the implementing of collection is best using collection? You have to understand that we will not move ahead with the Hey, we will move ahead with the collection but the difference will have to come, the difference will have to be understood. Got my point, so this is when I created the object of the stack class, this is my stack ready but the current size of the Stack is zero Now I have to push some elements in the stack so what type of stack is your integer so directly I can write here ma sk ma sk dot push ok here you can also check the size is zero or if you have this See sim prl n ma sc dot is mt is mt this is mt method is also check whether your stack is empty or not the return this is mt method is bullion so if you look now you will see either from the size you will see zero and or Then you see what your MT method is returning, then you will definitely see its output, you will get false here, this output you will get false and that false indicates that there is not a single element in your collection right now, your collection is MT Right now but now if I want to push some elements in the collection I want to push some elements in my stack then here what we did now I wrote my stack masteck I move on to the next page a little bit okay here you have Wrote Mastek so that we can understand it even with the diagram. Mastek.push This push method is implicit method which will ask you for object. Object generic type means if your collection is integer then what do you have to push? Integer element, so here we have What I wrote is mask dot push and this is the element I gave. Suppose 10 then again my stick dot push. So what is happening internally is this is your stack or your stack. Initially its size was zero but as soon as 10 was given 10 came at zero position. Next element you have pushed ma sk dot push ok you have given element 20 immediately in this collection the next element has been entered 20 with the size one so internally it is maintaining it but the size of that is growl growl means you As you add elements, it will increase the size internally, so your element is 10, then 20, then I wrote my stack, my stack dot push, then I entered an element, 30, okay, so again this valant and you see there is no overflow. condition here you give element Elements will be added to the stack. This is what the dynamic concept is. While when we implemented the stack, we checked the overflow condition because ours was a fixed size declare, but when we implement the stack with the collection, then the There is no overflow in the classes which are there because this growl size will increase as you increase the size. There is no overflow condition. So here, when we will create the menu application right now, don't worry, let us first understand the functions one by one. We understand the method but we will not check any overflow condition but yes MT will be there, empty collection will be here too, there will be there too but you will not get any overflow condition because here we have actually stack class which is implementing stack in dynamic format. Right here, when you pushed the element, you gave say three elements, now after this I again said, OK show me the size of my collection, so now see if you see the size of your collection, sorry, the stack key is 10. If you have given element three also then the memory allocation is 10 but here if you see the size of your stack now so you will get the element three here that how many number of element is in this three element there we saw the concept of pop. That when you pop the element is not permanently removed but it will be here now let's see right and after this you confirm again that if you saw the size but then you said okay tell me my stack my stack dot is MT Is my stake MT OK You will get this You will get the value now Sorry What will you get here True Sorry I told wrong last time Is MT method will return true here True because your collection is empty right now My mistake OK Initially when If you call this MT method then you will get the value true here true so because you collection is empty right now is empty method returns true right but now here you will see then now you will get the value false and now why you will get false because Right now your collection is not empty then isEmpty method returns false here so isMT method returns true when will one find the collection empty when it finds collection is empty last time was because you just created the collection object Oh little things happen At that time I had mistakenly said false, but the result you will get true here ok, but now what will your collection return? False got it, so sir, the element is being pushed in the collection and what is it doing internally, that is the concept of top. It is implementing that it is increasing the top but now you have to write no push method nana no pop method but sir the elements have been pushed in the stack but now what I have to do is to pop the element from this stack ok This is the best part. Now if after pushing three elements, if I write here Mak Ma Scud Pup Makd Pup Write and you print it and see that it will return the element which it will pop, then in our case here What return will be 30 So here exactly the output you will get is 30 30 has popped, I am telling you again, right now I am not writing any formation code, neither have I created a menu nor have I taken any choice, we will implement all that further but First you understand the methods which are available with you in stack class which is utilman belongs to this utility so this ma scud pop as soon as you wrote permanently now your 30 which is there will be released from memory now this position is relief while implementation of Hey, your data is not permanently removed from the memory. Tell me this practically. There, we only bring down the top, but here your element will be released from the memory because this is a completely dynamic data structure. How do you understand? Come, you do one thing, after this by popping an element, again you will check the size of your collection, look at the size again, you are okay, now when you see the size, here you got the size three but here you will get two, that means one. Element popped from this collection and you see it asked you no it directly popped your did you say as soon as you said pop it applied the rule of LIFO and released your last element from the collection and this is what we did when we created our Which we implemented in the stack, remember the previous lecture right then push method pop method is MT method ok now what have you done you have popped again right two-three times if you will pop when your Collection is completely MT then you will get true return again but now you said no sir I don't want to actually pop I want to see which element is the last element right pick so what do you write here simple system add Printn my stack which is the name of your collection object dot pick only pick so this method will return the last element of your collection now in our case what is the last element 20 because we have popped one so now you will get 20 here So it shows that your last element is this. Look, understood the difference between pop and pick. Pop will remove the element and then return the element. What pop will do is remove the last element and then return. What pick will do is not remove the element. Assist in the stack but it will return to you and tell you that this is what is the last element of your collection, so before deleting, confirm which pick is going to be your last element, which is going to be popped, pick first. Then pop if you want to check so there is an option available right then push method pop method pick method I hope you can understand if you think sir there you told the display method now here if I have suppose I have in the collection Elements have been added 10 20 30 Ok 40 50 60 Now you are saying that there is no overflow, absolutely not so sir how will it be displayed here, there are stars from top to zero, this is a collection and the elements of the collection are stack collection. And how to print the elements of the collection, we know that you can directly print the object of the collection, secondly you can apply for itch loop, thirdly you can apply iterator on it, we see that if suppose your Now you have to see this, sir, I have to print all the elements of this collection. Okay, so no, you have the choice here, you can either write this, system add printl my stack mytech, you have directly printed the collection object. Which was your stake object, okay, this is my stake, this is my stake object, right, this is the object of my stake class, man, either I print the object directly, but I know that if I print the object directly, then what is the stake class? To string method will be called internally because when the object is printed then to string method of the class is called. We have read in core Java that when an object is created then the constructor is implicitly called. When the object is printed then its to string method is called and to string This object will print the same format in which the method will return the data, so let's see what will be printed, then you will get the output in this way, suppose if the element is yours then it is ok, you will get the element 10 20 30 40 and 50 this. Is what the element you will get is these elements of your collection object these are the elements of your stack printed why because you printed the object directly then if you printed the object of stack class so this object will print the element in this format it directly Called the to string method internally and by using the to string method, this collection of this collection means all the elements of this tag have been printed but the format is its own because you have printed this format directly from the object, because the method which is being called behind it. Actually , write this or write this and check. You will do everything practically. Mastech.ch method to string. Do you remember the to string method which is in the object class, so when you print the object of any class, then internally it is written to that string. The string method calls and this format is actually the return value of the to string method which is printing your collection object and giving the stuck object but if you don't think so sir then according to me print the stuck elements one by one. So the best choice is we will go for for ch loop so for ch loop how will we put for now what type of your collection is integer jr is it so what did we write for int jr i colon collection object name my stk for integer jr i Call my stack, if you have put a for loop, then what will happen to this, elements will come one by one from your main stack and you print it, simply you can write your system dot out dot print n system d out printing aa. Okay, so now if you look at this collection element, so now you will get the element 1020 30 40 50, these elements of your collection are printed as per your requirement, then children, this is what I understand, display method was created there, push Had created pop, had written the code, had implemented it. Sir, here the whole stake was finished in 10 minutes. This is the advantage of Java that it has given you implicit classes and this is what it says, why you should know about this thing already. There is a class that uses this method, but we are reading the implementation so that you can understand. Now you might have understood that this is push method, pop method, how it is performing execution in the background . What will the method be doing? How is it checking the top, minus and pay? The code must be written in this method. There must be some internal code for this method and someone has written the code. He is the developer behind these methods. He has given you the method in the build. If you use it directly, then in most of the cases when you read Data Structure Using Java, there is only one method, collection, but why I am telling you both the methods, because I want that in the interview, you should not get stuck anywhere in the collection only. If you read this , you will never be able to understand the background data structure. You will never be able to understand how this method is working in the background. And I told you on day one that if you are reading this subject for the first time, then read it honestly because you will Read keeping in mind that why the top MNC requires the person and good in data structure, why the favorite subject of top MNC is data structure, understand the reason, you will not understand the concept just by reading the direct method, that is why I will also give you the implementation along with it. I am telling you and you are also seeing it with the collection. Right, this is your method, we have implemented it, but sir, you told us three options, then you told us to print the stack object and we have done it with the for each loop. There is also a third iterator, of course, so if you think that you have to apply iterator on the collection to display the element of collection, then nothing has to be done, simply you have to declare an object of iterator, iterator iterator aa equal to iterator, we have read my stack which class. Is the object of stack class in it there is a method called iterator method the returned type of this iterator method is an object of iterator so this is I applied iterator my stack on right and then how will we fetch the data from this iterator so here We put a while loop while, this is your iterator which will be applied on your stack, this is your stack, suppose the right element is 10 20 30 40 50, okay, the position is 0 1 2 3 4 5, okay and so on, when you applied the iterator, we Have you read the concept of iterator? This iterator is applied at -1 position, meaning when the iterator goes to the collection, the stack is set. At which position will it be set to -1? And then it has to be taken forward from here. Hey, read the collection. Lo friend, that's why I say iterator for itch loop in collection, I have taught complete postmortem details but you understand that if I go to teach you collection in data structure, then how will we complete the data structure. This is a syllabus in itself, so that is why we are going for implementation. You are using the collection but I told you that there is no problem, you read the entire collection before starting the data structure, it is okay, then after that when you come, the confidence level will be boosted up so much and if you have read then you are already confident. If you are ok then let's see how you will apply this iterator because you see if you are seeing iterator for the first time then obviously you will get confused. In this iterator there is a method called add whose return type is Boolean isn't it? So, I applied this Genex method on the collection on my desktop, then judge next will return me true. What does Genex method do? It tells the probability of the element of the next position of the position at which this object is set. Probability means the position at which the object is set. Is there an element at its next position or not? Is there a probability or not? Right? Now at which position is it set - 1, but where will you tell the probability of the element being there? Right at zero? Is there next? What does it mean? You asked it what is next? There is element at position and the return tip of this method is Boolean. If it finds limit then it will return true. If it returns true then while will get true and while loop will start then while will get true because next position is element but come now. He is sitting there, now tell Aa to do one thing, go to the next position and give an element, for this you will have to move Aa, with the next method, so what did we write aa dot next, so what happened with it, i reached this. On position and returned the element of this position to you and you printed it system ad print i dot next datchi there is no condition no doubt before this MT will check the condition but all that will be seen in menu driven application now first understand the method. So you can apply have next and next method iterator, you can apply second for each loop on this stack, if you don't add anything else on the stack then directly print my stack object then your entire stack element will be displayed so multiple ways. Is by which we can display the element of stack so I hope this method is now you understand push pop display is MT method is after MT we have pick method we have seen how to apply iteration in collection how will you apply loop on collection Now we have seen how we will print the object, so we have seen each method individually. If we want to do sorting, then sort method is available. If we want to do searching, then search method is available. Don't worry, now we will run everything practically. We will first understand each method as we have seen. I have seen the practical implementation of stack implementation using are, but sir, this is what you said again that you just called the methods one after the other and told that we will create the stack in the proper way, how our stack will run in the proper way like in the menu we have given there. If you had created Don't Worry, we will use the same menu but will change the implementation completely and will come to the collection. First look at these methods once, then we will talk about how to make their menu application. Do n't Worry Topic: Nothing will be skipped, everything will be skipped. It will work in sequence and I have committed you on day one that if you read this entire technology sequence wise, no one can stop you then you decide which MNC to go to but till then stay in this course, keep reading and implement. Keep trying so let's meet [Music] This is the implementation of stack using collection concept which we have just understood in the class and its Earlier what we saw using stack are I hope you can understand that concept that there you remember we understood the concepts in both the aspects and saw the stack creation and when we saw the stack creation then remember see now this is Maybe we had created our quote stack application and here you saw that we had created our Hey, okay this is what my Hey Okay, we had created Hey, then we have a max size, then we have a push method, pop method, all this we coded. It was written right and then we created our method, okay this is what is my main method with the name Test Tech in which we created the main driven application by taking push pop and display but here we saw that there is an overflow condition if the element is removed. If it is then it is not permanently removed. Let's say if I push an element in the stack, anterior choice one, I pushed the element 10, then again, anterior choice one, 20, then one, 30, then 40, then 50. I am trying to tell you the overflow condition. Am actually 60 then again one 70 then again 180 190 and then again 100 and now you see if I give one I will get a message stack is overflow C this one stack is overflow and now if you display so no doubt all your elements 10 will be displayed from 100 to 10 then if you say pop then your elements are getting popped C This one popped element is 100 then again popped element is 90 then popped element is and then display but these which are popped are this Have not been permanently removed, I had discussed you and also told you the implementation, so now we saw that if we want to implement the stack, so in Java we have a stack class where you have push pop method available for display. The option of iteration is for it loop, iterator is ok, apart from this we have pick method, search method, short method, so the concept which is understood now, first let us understand all the methods one by one, this is MT method, in which way will it give us the result, ok then. Here now once again I come to the stack implementation, okay but in this stack implementation we have created a new Java class Test Suppose, I named it a Test Stack or named it Stack Collection, okay Stack Collection that we We will see the stack implementation using the collection. Okay, so now here you understand what I told you earlier, right now we are not creating any menu application. Okay first. In the step you understand each method in which way we will call the method and as we discussed that if you implement stack by using stack class of collection then your class will be a generic class meaning of generic class. That is, in the collection we have created, we have fixed that our collection will be created with integer type of data. No doubt, we can make it generic also because we know that how to create a generic class generic object but at the moment We did not make it generic but now you see here what we did first is import import import java dot ch method sorry which package ut dot star this we imported till d star and let's see here we have a class called stack class so this I created a str and now the same integer and what was the name of the str? I named my object as My Stuck, this is my stack. You can also take this object name as a stack only. Okay, so we named it My Stack equal. To new stack of again integer is ok and here you see so in this Struck class we don't have any constructor right so here now this is your Struck, your Struck is ready neither you have declared any nor you have any top We have not declared any max size, this is a fully dynamic collection of stack, we have used the class of Java called in build stack, the reason for which we had read in the collection is that the collection is organized according to the order of the list after the collection. After you have the vector class, there are more classes in the list, hey, the list link is vector and then the stack, so this is where we declared the object of the stack class and let's see here if you see, if I see the size of my stack right now like I told you. Told me my stack dot size here we have a size method right then you see the size what will you get now the size is zero because right now currently stack does not have any element whereas the initial size of the stack we had created was 10 that you Stack declared for 10 elements so it has allocated memory, take 10 and write and then let's see the same thing if we talk about this MT method then in my stack we have a method called is MT whose return type is boolean so let's see. What value will it return true because currently your stack is empty right now your stack is MT so that this method returns true ok that currently your stack is empty so that you will get a true value here right but now in this stack we will talk about pushing element. So I told you again, I am not making any menu application right now, I am just explaining the methods to you one by one, then in step two we will make it a complete main driven application, similar to the one we made with our stack. We will use this same menu as it is but the push pop display that will be done here will be in the stack of these build class of Java right so now you see if I wrote here my stack so now we have a function push and this push function required. Integer Item Why it is Integer Item Because I have just collected Sorry, the stack that you have just taken is of Integer. Now I will also tell you the different stacks. We can also declare a stack for string character but right now we have pushed Method call key so this is what the in build push method and to this push method you have given element say 100 so this element is pushed in your stack and let's see there is no limit on the number of elements I will push in the stack there is no. Limit because this is a dynamic stake you will never find overflow condition You will never find overflow condition Now you see after entering the five elements we again saw the size of the stuck Let's see again I will see the size of the stuck that the boss gave me the stake Tell the size of the key, meaning before entering the element. Let's see before push, before push, the size of the stack and after push, the size of the stack. Okay, what was the size of the stack before push? What was the size of the stack after push? Before push. The stack condition is MT condition is ok again the same before push stack my stack before push my stack d MT and after push my stack MT means what was the MT position before push see the result of both you will understand before push zero and true But after push then total element f is ok after push before push size after push size is ok before push mt after push mt condition is ok ok output p importance is before push size was zero after push size Five is before push mt condition was true but after push it false why because now you have element in your stack now you have an element in this stack so these are the methods push method pop method now we don't need to create this method this is already Implicit in build methods of stack class So this also we saw with push and pop push sorry ok ok now I comment all this aa just comment this code ok and let's see now if I told you the elements of this stack I I want to see the element of this stack and let's see. The most major plus point is you can enter any number of element of this let's see. If you see the element of the stack then you will not find any overflow condition here. No doubt output nothing because now we have The stack has not been printed but yes, if you look at the size and you see here, you understand that this is a stack collection, it will not give any problem to duplicate elements, see this 150, I will also make it 150 so I never find the overflow condition whereas. In our case you have just seen that when we had created the stack using array then after 10 elements the condition of stack overflow came because we had done the stack implementation in our class in this manner. Right then you remove it because it will make the study dynamic. So that there is no confusion, but now the question is that sir, I want to see the elements of this stack. I want to see the elements of the stack, if I have given five elements, suppose you have pushed more 600, then suppose 700, but keep this in mind that if now If you have given element in stack as string then why is this not acceptable because now you have specifically defined the type, you have to define the type of your collection that is your stack collection, you have specifically mentioned that it is of integer type. Let's mention string type so let's only string type of data but currently mention this stick type of integer this is 800 this is 900 and don't worry man let me make the application in proper way and tell you first once you understand the whole method . Now we saw the size, after the size, now I said ok mask dot pick and let's see pick method, what will it return, it will return me the last element of the stack, but after this you see, does it make any difference on the after pick size, like We had seen that pick means only you will get the last element of the stack right, so I give this message in it so that you can understand in the output, the picked element is ok, which element has been picked, yours is ok, so you see this in your stack. A pick element is 1000 or it's 1000 because your last element you pushed was 1000 let's see this you your last element you picked sorry pushed was 1000 but after this if you can see the size of Look at your collection, you are only 10, it means that the element is not removed from the stack but if instead of pick, if I will use pop method, it is ok, I have used pop and then after I will see the size pop element is ok. I wrote this as popped element and after that I saw the size, write this text, let's see this, you are sorry, not after pick, this is after popped, after popped, now the size is nine, so this is the difference between pick and pop, understand that pick will pick the last. Element from stack it will not remove that element but what pop did is that your element is permanently removed and we saw this in static array that elements from there are not permanently removed, we are just aware that that element has been removed because it is And this is what the beauty of Java is that Java will provide you really Type of collection is a different thing that we are looking at its implementation using Are so that you can understand the logic, what is the story behind these methods, so when you created a stack by implementing Are, then you understood the concept but apart from this you see. There are some more methods, if you believe here, I am fine, we have seen this size, but now you see, I said, Sir, I have actually understood this, what is the size, I actually have to display my stack, so I Told you three ways, right, with the three options we can display the element of the stack. Now see, if I print the element of the stack directly to the stack object, if I will print my stack, if I print my stack right so. Let's see the output I told you 100 200 300 400 This is the output you have got for the to string method. You see here directly if you write to string so again you will get the same output. This means that when an object of any class is printed then actually it is of that class. To sting method call is background so when you printed the object then to sting method of stack class is called it has its own implicit method and that displays the data in this format so this is one way to print the stack element that you simply Print the object. If you print the object you will get this output and we can also implement all this but we do not have to implement the entire stack. You can also create your own two string class in your stack which will display your array. We have created it by using but right now our focus is on static and focus on dynamic, so we also saw the stack but sir you told that we can print the elements of the stack through for itch loop also. Let's see if I have used for it here. I put a loop because here I can print the data with my format or I wrote for integer as my stake is okay and then after I will print the object system d add print a so now you will get element something like this 100 200 300 400 So these elements of your stack are printed from zero to whatever positions you have, you will get their elements here because internally every element is stored at an index number because internally the collection will store the data at the index number. It then after instead of for each loop, you said no, sir, you had also mentioned iterator, so let's boss, let's see that also, how will we apply iterator, so here you created an object of iterator class, iterator, okay, we created an object of iterator, iterator. Okay and on which collection you applied this iterator so my stack which is your object there is a method called iterator method so this is your iterator applied and with this iterator you have two options see you also have iterator and We also have a list iterator, list iterator and iterator, we have two options, we see both here, now let's talk about iterator, so what we wrote here while I don't have next, see you boolean return ok and then we I have written here nothing else, the complete code, I am writing the same thing which I am explaining to you in the class, I have explained every concept to you in the classroom lecture and that is why I continuously tell you only one thing that only in this subject Skipping even one lecture is very harmful, hence you are requested to maintain the sequence. The complete playlist is available on the website. Access the playlist without any sequence. Do not skip any lecture. Okay, so now you see, here we have printed the I, so this is for you. Will print the element and give let's ok wall i dot next method one minute ok i dot next method actually i dot next the next method will return the element na onex will tell you the location of the object address i dot next method right so this is actually the object. Has eaten object rat, so here now if you have written AndC element and here we have one more option that if you want to print the stuck element and in order then instead of iterator I have list iterator also an option. Is and also apply list iterator and write this list iterator object you created list iterator suppose I equal to my stack dot list iterator method so this is the object I created now is of list iterator so what we wrote here and this position you told. You are okay with where to set it, for now I have given the position to it as zero because I have to set my list iterator object at the zero position right, so now see while i dot, now we use it the same way and then system.out Q. Okay, hey iterator, if you have read in collection then read two options, we have one iterator and one is list iterator and the difference between both is that iterator travels only in forward direction, on collection but list iterator in both the directions. Can do List Iterator which is it is extended by Iterator List Iterator is iterated by Iterator itself right so you see this right now you don't see any difference but if suppose I set it where is my stack means I have to set it last. So in the last position how do I get the integer jr nn equal to my stk dot size whatever the size is -1 and you have set your iterator in the last so now In the last, if you told the position that now where is your object in the collection, in the last you have to run previous, then here we called which method is previous and in place of next you wrote previous, so this is how you Can apply iterator in both the direction so you see this see 900 ok ok this is not -1 and let's see this you see this your iterator is giving you the elements in reverse order the top most element is given then second see now see the difference between the two If you apply iterator and list iterator, then understand the difference between iterator and list iterator. Here you will have to change the names of the objects. With iterator, you can see both the directions. Look at list iterator, I draw a line here so that you can see the difference between both. Give different outputs, let's say, this is from 100 to 1000, this is from 1000 to 100, so this is the forward direction, you can also apply list iterator, see, you do not have to do anything here, you take list iterator, both sides list iterator i equal. To this is what list iterator is ok and remaining code are the same so this is also list iterator and this is also list iterator but this your list iterator will give you the element in forward direction and this list iterator will give you the element in reverse direction because your Pass list iterator has both the options. You can view your collection element from row to top and top to row, run the previous one and run next. These are the options available to us when we use Java's collection classes. Gut Na Point So this is the collection which is this stack collection which is Java's own dynamic internal classes. Okay so here we see the list iterator method iterator method that how to iterate the collection that how will you iterate the stack in our for itch loop. Pass option is You can directly print object of the class You can directly print the object of the class You can run iterator and apply for each loop So that is our requirement that which iterator we have to print the element in which way. My point now you see now here I told you suppose my stuck dot now we have a method my stuck dot search the return type of this search method is the index number I thought I probably told you in class about boolean but it's an index You see this number, if suppose I said here, OK, tell me that in my stack, that means search method will require the argument, see what you have to give to the search method, search method will require object, what you have to search, I said one. Do the work, tell us the position of 700, it will return the index number. Actually, maybe we studied Boolean in the classroom, but okay, let it be changed. The return type of the search method is the index number, which will tell you at which index your element is. Right, so you You will be able to understand from the iterator, so I run the list, now the forward one is fine, so let's see, this is the list iterator, now it will print your elements and let's see what he said, 0 2 3 tooth 4, so this is your element at the four position. This is the fo position because indexing starts with the tooth 4 So this explained your sorry sorry sorry what have I said for search 700 okay just moment 0 to actually that okay understood I the reason is that the search element is that The element is searching from top to bottom, okay, so the element that it has shown you is the same, for this you will have to run the element previously, there was a little confusion in this search method, we also had this in the classroom, it happens many times, okay, so let's see. Now you see if I look at the elements of the stack now 1 2 3 4 So now your element is at position four it told that your element is at position four but why because actually the stack is how is it going 0 1 2 3 4 From to top, when the search is done, it will tell your position from the top, at which position from the top is this element, okay for example, if suppose I say okay tell me the position of 200 is okay, then what he told is 200 is. The position nine so don't count from here 1 2 3 4 5 6 7 8 9 This is nine position because from top to top that element is searching and giving you that is what the search method we have in this collection this search method is your element How will you search something like this got it and if you say ok search 1200 then 1200 is not there it returns -1 -1 means your element does not exist in the collection then this is the search option. have understood the concept. Push method pop method then we have in display we have option of iteration pick method we have ok apart from pick we have search method available so sir can we see this entire implementation menu driven absolutely let's do one thing Let's create a new collection. Okay again I created a class and this is my class or we create a new project in the stack implement application. Let's create. Close all of these. Create new project okay so that you can understand from the beginning how. To create man done application stack using collection, I named it like this, stack using collection. Okay, so now whatever is your stack, it will be implemented from your collection and where have we saved it, we have saved it, we have created our own folder. Well, by the name of Java DS, we saved this project in this Java DS and let's see now carefully understand how we will create a man driven application using collection because with Hey, we had seen this method also, now we have Got it one by one, right, so now what did we do? First we will create a package. Suppose I create a package with the name of Data Flare. Now here what I have to do is first of all create my class which I create for the stack. I am in which I will have methods right now, okay and let's talk about the main application, then first of all we have created the main, test main, okay, test stack, test stack, right now, what do I have to do in this test stack, I need to design my Menu I have to design the entire menu as it is. Okay, if you want, you can copy paste the entire stacked menu. I am writing here from the beginning because if someone has not seen that then understand it. When it comes, here we gave the message Stack menu is okay because I do not believe the copy paste. Generally when I teach children because it is better if you understand it once from the beginning, then we gave this option Push on one number is okay. Pop on number two, then display on number three. You might be remembering this. Maybe we have done the whole stuck implementation. Okay, pop and then the next function, we have display. Push, pop, display. Then again , we have pick on number four. Okay, and then the next function, we have. Search and find number six number we have exit ok six choice our asset ok then system did print now I have to take choice from the user and according to that choice To call different functions that I have to push second you have to pop okay then display then pick then search a then asset so this is what we did here for choice import import java dot ut dot star okay and then here We cleared a variable called integer ger choice is ok and we took this entire code in the do while loop do while choice is not equal to what should be six il choice is not equal to 6 ok and here we said to the user Enter your choice. Enter your choice. Okay and this is the choice we have scanned. Choice is equal to scanner, so we define the scanner right here. Scanner scan is equal to new scanner system dot. Okay, so now what have we done here? Done scan equal to sorry choice equal to scan dot ch method next a so this is what you got the choice now according to this choice I have to call different functions like I need to push the element in stack I need to pop the element in stack I need to see the element of stake is display is push is pop is right so here what we did is understand carefully here I placed this choice switch choice in switch case okay and then we created different cases here Case one ok what to do in case one I have to call push method but whose my stack because in my stack push method will be ours ok so here now what I have to do is to implement stack in this case one so now We declare the stack class here we declared the stack class stack integer ger of my stack equal to new stack okay this is what I have defined sorry new stack ck of integer ger and here I have also given you the choice that this stack is generic. Can also declare a stack for character You can also declare a stack for float value even boolean value even string But right now the standard stack we are making is taking integers, right now case one is your push so you see generally we What we do in push is we take an element from the user and push it in the stack. Gut my point is that you took an element from the user and you have to push it in the stack. Right so to take the element from the user we took a variable int here. Now what would happen if this stack was my static then I would check the overflow condition before pushing get my point because your stack there can overflow but this stack is not overflowing . This will happen because we are using this collection class, this is my collection class, okay, so what we did here is to push the element in this stack, we took the element from here scan dot next int, now this is the element, let me push it in the stack. Have to do so nothing I need to what my stack dot which method push method and this you n given to this so this element is pushed to your stack this is your case one complete push case two what is your case two is our pop but Now see, before popping, if you want to pop the element, then first of all you have to check that the stack is not empty because how will the element be popped from the MT stack? Hey, the stack will not overflow, this is confirmed but it is possible for MT. If not, then how will we check, we have checked if my stake because the object will be the same as yours, if my stake is what we declared, this is our stake, if my stake dot ch method is MT, if your stack is MT, then what message have we given? If my stack is mt stack is mt stack is mt that if you have called ismt method so you will get a message stuck mt right but if stack is not mt then my element is to be popped then which element will be popped so we have here But I said n is equal to mytake, sorry, we declare this n globally so that it will be required multiple times, so we declare it here, okay, so I used this n equal to myak dot ch method pop method. This is I have called the pop method if the score is not met so that pop the last element ok and let's see this I have given the message the popped element is and don't worry about the search sorting yes I will tell you the concept of sorting now the popped element is ok The popped element is and this is what we have printed which element n is the element that has been popped is in your A so this is your pop key method C This one line coding this is what I am talking about that when we have added our stack When I created it, I wrote the entire class: push method, pop method, display method, that's why I tell you again and again that boss sequence. If you follow me then things will seem so easy to you. If you have implemented this technique then you must be thinking sir, there is nothing to be done, all these are ready classes, exactly this is what I have told you that Java has given you the complete collection. It is given, you do not have to write any method nor do you have to write code for any condition. Everything is ready. Okay, so let's do this case two and then case three. Now see the code which was written in the last time almost 30 40 minutes, this 10 minutes. The code is yours, it's ok, remove the previous time, I am only talking about the menu, right, case three, what is our case three, your display, so even before displaying, you have to check that your stack is not empty, see this. What to do, we took the menu, took the choice in the menu, declared an object named stack, my stack is of stack class, then we gave the message push pop display pic search exit and are writing options one by one, this is pushed, this pop is done. It is done but what check did we do before displaying if my stack dot again e mt is ok but then you have given the message sc m because even before displaying you have to check whether the element is there in the stack or not and if so So you have to display the elements of the stack from top to bottom. If you want to do it, then put the iterator like that. You list iterator. Okay, so what we did here is what we just saw, list, I declared the object, list iterator, list iterator aa equal to my stack dot. List iterator is fine and it has been set to mask dot size. Whatever your size, the iterator will start from there i.e. zero from top and then we have put a while loop while i dot sus previous is fine and now see it depends. Whether you are looking at the top element from zero or from the top but in general if you have given five elements in the stack 10 30 40 50 10 20 30 40 50 then you know that 50 will pop in the order of last in first out, then at the time of display it will be It should be visible on the top, 50 40 30 20 10, so that is why we are displaying it in the previous order and here we have written system d add prital in a dot previous, so this is your display method complete, this is MT checked and display complete. Right and see this, you complete case one, then what is the next element, pick, then you do not have to do anything in pick, you go to case four, go to case four, you definitely check that there should be an element to pick, okay, you have edged it. This is the code written, it is ok, the MT code has to be checked here also for picking, but if there is an element then you said system d add element pi means last element is ok and which method call is done, my score. Dot pick then it will return you the last element of your stack. This will tell you the last element. This is the code of your pick. Okay, so what are the codes of our push pop display pick search. So for search you are now in search. What will you do? For case five search, we definitely have to write a small code. First of all, we have to take the element from the user which is to be searched, so what message did we give? Enter an element. Enter an element for search. Now we will read each method. So I am directly writing the complete code together. Don't you find the element for which you have to search ? Do you understand? Hey, look how simple is the concept of the menu. After creating the menu, we In case one, I wrote the push code, took the element from the user, pushed it, did not check any overflow condition, in case two, I checked the MT condition because this is what my push code is, this is the code of my pop, case two is our pop, so this is This is my pop's code, okay, case three is our display 's code, this is my display's code, okay, case four is your pick's code, so this is your pick's code, and case five is what we are writing, this is what my search code is. So how to search in any collection, take an element from the user and check whether it is in the collection or not in the stack or not. Right, so what we did to check is here, if my stack, we directly checked my stack. Key method call key my st which is our object dot f method search and to this search you have given s and it is checked if not equal to mine if this result is not equal to mine because it is mine it means searching not success. Because it is not ok but if not equal to -1 then you told searching success searching success and in its else we wrote searching not success Now I told you that search method will give you index number and if not element So the index will be mine. Okay, so this is case F and only in case six, we have written break because here also you see, after all, you will have to write break, in the last break after every code, that means wherever your case is being completed, you will have to write break. Break has to be written otherwise it will run the next code also, right? We have read the switch case. We have read this break in case one also. Break is case one. We want only that case to be executed. Your code is executed. Now look at the entire code and understand it once. What we did was, first of all we declared our stack because it is a class. After this stack class, we created a menu. In the menu, we gave the option of push pop, display, pick, search, exit. Then after we wrote the code of push, we wrote the code of pop, we wrote the code of display. Okay , I wrote the pick code, wrote the search code, and each of these methods, just a little while ago, I have taught you all individually, what is the pick method doing, what is the use of MT method, sorry, how to display it, right, let's go one. Let's run it once and see, you will understand the story straight away, this is the menu, now tell me the display directly, see what he will say, stick it in MT because there is no element yet, how will it be displayed, tell me pop, he will say it directly, choose to stick it in MT, it is ok. You said ok sorry in the search we probably got stuck on 4 pages but one said now he said enter element I said 10 then again enter your choice no 20 then 30 then one 60 then one 40 ok now I said display through a You will get this element choice is these three, actually your element is this 40 60 30 20 10 What was the last element that I entered, there is confusion in 40th so let's do one thing, actually choice I have given these three, okay If you will get this element, then we do one thing for that choice, before displaying it , we give a stack element here so that there is no confusion, okay stack elements and this is the condition of MT, we will have to apply it in the search also because How will you search without an element ? So even before searching, put the condition of MT here. This entire code is written in else from here till here so that the searching first checks whether the stack is empty because if it is empty then the search will be done. How will you write? Now let's see, if suppose I said F, he said M, but if I said push, element enter, 10, enter your choice, then 20 enter, choice, OK, just run it again, I don't enter it. Then push 10 then choose one element 20 then choose one element 30 then choose one element 40 150 160 Now you keep giving there is no limit but after this if you say display you will get 60 40 60 50 30 40 10 elements Now you said pop Look, you guys, what did the pick pick tell you, sorry, this is the pick displayed, your choice is number four, so I chose the four, now see, he said pick element 60, but there is still an element in the stake, look, it is still 60. Pick means last element but if you said pop then he said pop element 60 pay attention pop element 60 now I display 504 then pop then display then pop again display three elements left pop display two elements left pop display then pop now stack is empty Gya display said stake is MT get it then I push some elements suggest 12 yes sorry enter your choice one 20 enter your choice one 30 anterior choice and 54 anterior choice and 33 anterior choice 3 display these are also your elements now I searched Said F, brother tell me whether it is 30 or not, he said searching is success because it is 30, but this time if you searched, said five and you said 66, he refused, searching is not success, so simple stack implementation, neither you have to create any class nor you have to. You have to write any code , you just have to understand this code and don't worry about the source code, I have always told you that the source code will be available for you on the website, so do not worry about the source code, but do see the code once to see what we have done. In this code and Hey implementation and what is the difference in this that when Hey implementation was done, we made Hey a stack, here we did not create any Hey, already we have a class and we use the class object, we created an object named my stack. Which is of stake class and this is all we have done this push pop display pick search exit this is the code of push ok ok this is the code of push then we have a pop code then we have display code and then we have pick code and then we Have search code tuned in this course to understand the concepts and if you have any doubt then comment without hesitation and if not then please share the video. Do it with friends, okay then let's meet [Music] In this 5 hour video, we have covered every concept which is the basic needs of this technology, we have covered the core concept completely and believe me if you like this If you study technology anywhere else, then this 5-hour course takes a minimum of two to three months, but I have worked very hard to bring this course for you in 5 hours and we have covered all your basic concepts, all the core concepts here. And I believe that in this entire duration we have to make at least 10 to 15 projects because the more projects you add on to your resume, the more your resume will move towards the selection process and the heavier your resume will become because this is the most important thing. It happens that what is the number of projects you have made in your entire course and in this course of Tech Scholar, we have covered minimum 10 projects in the entire course and after that, as per the requirement, we will keep expanding the projects further, so let's go. Let's start this journey from classroom to corporate, this journey of earning from learning, let's meet in the next lecture and we will talk about further concepts, so immediately go to Tech Scholar and enroll yourself and then before leaving, just There is only one request to you, boss, please share the video with your friends, let's