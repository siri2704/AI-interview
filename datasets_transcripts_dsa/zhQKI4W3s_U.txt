hey everyone what's up welcome back to Fuzzy Programmer or if you're new here welcome i'm super excited you decided to join me today in this video and likely the next few in the series we're diving deep into the world of JavaScript we'll be learning the fundamentals exploring algorithms and understanding data structures and the best part we're going to use an absolutely fantastic completely free resource to guide us free Code Camp specifically their JavaScript algorithms and data structures version 8 curriculum now the key to really learning this stuff isn't just watching me talk it's getting your hands dirty and coding along so before we jump into the first concept let's make sure you know exactly how to access the free Code Camp material so you can practice right alongside me first things first open up your favorite web browser go ahead I'll wait okay you're going to navigate to freecodamp.org now I've also put a direct link to the exact curriculum we'll be using right down in the video description below clicking that might be the easiest way to get straight there but let me show you how to find it from the homepage too once you're on freeamp.org you'll see their main page look for the curriculum or learn section scroll down a bit and you should find the JavaScript algorithms and data structure certification click on that the specific version we're using is version 8 which is the latest as of recording this video the link in the description definitely goes to V8 all right this page right here is going to be our home base for practice you'll see a list of topics and challenges one more quick tip I highly recommend creating a free account on Free Code Camp or signing in if you already have one this way Free Code Camp will save your progress as you complete each challenge which is super helpful and motivating so here's how we'll work together in my videos like this one I'll explain a JavaScript concept maybe show you some examples and give you context then I'll point you to the specific lesson or challenge on this free Code Camp page we just opened your turn you'll pause my video head over to that free Code Camp challenge read their instructions they're excellent and try to solve the coding exercise right there in their interactive editor this hands-on practice is absolutely crucial once you've completed it or given it your best shot unpause my video and we'll continue maybe discussing the solution or moving on to the next topic make sense it's all about learning by doing watching is great but coding is where the magic happens all right team let's jump right into the code remember the best way to learn is by doing so have that free code camp JavaScript algorithms and data structures page open that we looked at earlier find the learn basic JavaScript by building a role playing game section wait actually for this project we're starting with a pyramid generator my apologies make sure you're on the right project the link is in the description okay sorted awesome let's get started so what exactly is JavaScript in simple terms JavaScript is a powerful scripting language that you can use to make web pages interactive think of it like this html gives a web page a structure like the skeleton css gives it style like the clothes and appearance and JavaScript adds the action and logic like the brain and muscles it's one of the core technologies of the web along with HTML and CSS all modern browsers support JavaScript in this practice project you'll learn fundamental programming concepts in JavaScript by coding your own pyramid generator how cool is that by the end you'll have built something tangible you'll learn how to work with arrays strings functions loops if/L statements and more these are the building blocks you'll use again and again as a developer let's tackle step one together javascript is the programming language that powers the web unlike the HTML and CSS you have learned previously JavaScript is most commonly used to write logic instead of markup in this project you will learn the basics of JavaScript and apply those concepts to building a pyramid generator a pyramid generator is a program where you can set the type of character the count for the pyramid and the direction of the pyramid the program will then generate a pyramid based on those inputs sounds pretty neat right it's a great way to practice these core concepts for this first step Free Code Camp just wants you to get familiar with the interface click on the check your code button to proceed to the next step and start the project go ahead and do that now easy peasy let's move on to step two okay now we're getting into one of the most foundational concepts in any programming language variables one of the most important concepts in programming is variables a variable points to a specific memory address that stores a value variables are given a name which can be used throughout your code to access that value think of them like label boxes where you can store information you need to use later declaring a variable means giving it a name in JavaScript this is often done with the let keyword for example here is how you would declare a hello variable let hello variable naming follows specific rules names can include letters numbers dollar signs and underscores but cannot contain spaces and must not begin with a number keep these rules in mind they're important all right your first task use the let keyword to declare a variable called character go ahead and type that into the free code camp editor note it is common practice to end statements in JavaScript with a semicolon while JavaScript can sometimes infer semicolons it's best practice to include them to avoid potential confusion get into the habit now once you've typed like character hit check your code you've declared your first variable awesome job ready for step three let's do it so we have a box labeled character but it's empty right now your character variable currently does not have a value you can assign a value using the assignment operator equals for example let hello equals hello assigning a value to a variable at the moment of its declaration is known as initialization it's like putting something in a box right when you label it your turn initialize your character variable by assigning it the value hello during its decoration so modify the line you just wrote type that in check your code and let's move to step four okay let's talk about that hello value we just used javascript has seven primitive data types with string being one of them in JavaScript a string represents a sequence of characters and can be enclosed in either single or double quotes so hello is a string note that strings are mutable which means once they are created they cannot be changed the variable can still be reassigned another value this is a subtle but important point point we'll revisit later for now just know you can't change part of an existing string directly for this step Free Code Camp wants you to see that single quotes work too change your hello string to use single quotes make that small change check your code see both work onwards to step five now how do we actually see the values of our variables or check what our code is doing that's where the console comes in it's going to be your best friend for debugging the console allows you to print and view JavaScript output you can send information to the console using console.log for example this code will print Naomi to the console let developer equals Naomi console log developer the code above accesses the developer variable with its name in the console log note that the value between the parenthesis is the value that will be printed okay let's try it print the value of the character variable to the console below your variable declaration add a console block statement for character then click the console button usually below the code editor in free camp to view the JavaScript console you should see hello printed there see that super useful let's keep going step six remember how we said strings are immutable but variables can be reassigned let's see that in action when a variable is declared with the let keyword you can reassign or change the value of that variable later on in this example the value of programmer is changed from Naomi to camperton colon let programmer equals Naomi programmer equals camperchon note that when reassigning a variable you do not use the let keyword again you only use let when you first declare it your task after your console log assign the value world to your character variable add that line check your code we're changing what's in the character box now for step seven this one's quick we just reassigned character let's prove it now log your character variable to the console again add another console log character after the reassignment hit check your code and look at the console you should see the string hello then the string world in the console see how the value changed perfect moving right along to step eight let's talk about naming things when code gets more complex clear variable names are crucial when variable names are more than one word there are specific naming conventions for how you capitalize the words in JavaScript the convention to use is camelc case camel case means that the first word in the name is entirely lowerase but the following words are all title cased first letter capitalized here are some examples of camel case let variable one let second variable let yet another variable let this is an absurdly long name make sense it looks like a camel's humps kind of it makes multi-word names much easier to read without spaces your turn to practice use camel case to declare a new second character variable just declare it for now add that line check your code getting the hang of let and naming conventions now what happens when we declare but don't initialize step nine explores this when you declare a variable without initializing it it is considered uninitialized currently your second character variable is uninitialized we didn't give it a value like we did with character initially let's see what JavaScript thinks value is add a console log to see what the value of your second character variable is add that log check your code and peek at the console what do you see interesting right that leads us perfectly into step 10 the default value of an uninitialized variable is undefined this is a special data type that represents a value that does not have a definition yet it's JavaScript's way of saying I know this variable exists but it doesn't hold anything specific right now you can still assign a value to an uninitialized variable here is an example let uninitialized uninitialized equals assigned okay let's give our second character a value assign the string test to your second character variable below your decoration remember no let keyword this time since it's already declared open the console to see how your log has changed the console's log second character you added in the previous step should now print test instead of undefined making progress step 11 shows another variable interaction variables aren't just for holding fixed values like strings or numbers you can also assign the value of a variable to another variable for example let first equals 1 let equals 2 second equals first the second variable would now have the value one it takes a copy of the value that first holds at that moment to see this in action change your second character assignment from test to your character variable then open the console to see what gets logged remember character was last assigned world what do you expect console log second character to show now it should log world because character held world when the assignment happened pretty cool huh all right step 12 is about cleaning up our workspace a bit you are now ready to declare your next variable remove both console log statements and the character reassignment that's the line where we did character equals world also remove your second character variable both the declaration let second character and the assignment second character equals character winky face but leave the character initialization unchanged so that first line like character equals hello should still be there take a moment carefully delete those lines and check your code this tidies things up for the next concept before we introduce another data type step 13 is a quick review before moving forward you should take a moment to review the concepts you have learned repetition is key to making these concepts stick use the let keyword to declare a profession variable and an age variable initialize profession with a string teacher but do not initialize age with any value log both of your variables to the console to see the results go ahead and add those lines what do you expect to see in the console you should see teacher and then undefined check your code and verify great review now let's clean that up in step 14 now that you have review declaration and initialization remove the code you wrote for your review that's the profession and age variables and their logs do not remove your character variable keep like character equals hello delete those review lines check your code we're back to just our character variable okay last step for the session step 15 introduces a new data type so far we've worked with strings like hello now let's look at numbers use let to declare a count variable assign at the number eight when using a number value you do not use quotes for example let money equals 100 notice no quotes around the 100 that tells JavaScript it's a number not a string your turn below your character variable declare count and assign at the number 8 add let count equals 8 and check your code and believe it or not that's a fantastic place to pause for this video we've covered some absolutely essential ground today what JavaScript is the crucial concept of variables using let how to declare initialize and reassign them the difference between strings and numbers briefly naming conventions like camelc case and how to use the console to see what's happening that might seem like a lot but you tackled it step by step great job sticking with it make sure you really completed those steps in free code camp that hands-on practice is invaluable we'll end here for this session in the very next video we will discuss more on number data types and continue building our pyramid generator right from where we left off diving into step 16 i really hope you found this helpful and are starting to feel excited about learning JavaScript if you did I'd be incredibly grateful if you could give this video a like it really helps the channel Fuzzy Programmer reach more people got questions about anything we covered or just want to say hi drop a comment down below i love hearing from you and we'll do my best to answer and of course if you want to follow along with this entire JavaScript series and learn more programming concepts make sure you subscribe to Fuzzy Programmer and hit that notification bell so you don't miss the next video thanks so much for watching and coding along with me today keep practicing stay curious and I'll see you in the next one happy coding