yeah good morning everyone in the last videos I mean two days back so I think on Thursday we started this new patch called the data structures and algorithms with python okay data structures and algorithms with python one second right so the title of this course is data structures with python of course this is the second batch so DACA with the python patch the timings of this session is from 8 AM to 9am every day one hour class will be there from Monday to Saturday okay the duration of this course is two to three months the duration of this course is nothing but two to three months maximum it will be finished Within two and half ones and the fees for this patch is a triple 9 where you are going to get daily running notes we are going to update Running notes on daily basis plus you are going to get the videos and even live classes all these things you are going to get and this is the contact number if you want to get registered okay sir I request everyone to please wait first I will take some introduction then you can ask all your queries okay so you can contact to any one of this number if you want to get registered and this is nothing but our official email ID so if you are having any queries so when the batch will be started okay if you want to continue with this patch you can make a payment right so far that all the queries you can contact to these mobile numbers are email ID and coming to the first class I think I explained very clearly about the syllabus what we are going to discuss okay at the very beginning we are going to discuss about uh algorithms okay and next and after that how you can able to measure the algorithms I mean analysis suppose for a single problem statement you may have a multiple multiple uh implementations or multiple algorithms you can able to develop but among those two algorithms which one is the best that means which one is taking less time to execute and which algorithm is taking less space so to analyze this we have to go for analysis of algorithms there are different notations are there and there are different cases are there okay so how you can able to measure the analysis of these algorithms we have some standard procedure is there we will take the test standard procedure very clearly and even around some eight to nine examples like practically we are going to see how much time the algorithm is going to take how we can able to measure that theoretically next generally majority of the students may have a doubt sir when I am implementing the program or if I have some issue suppose I got some problem how I can able to measure that so or how I can able to solve that what approaches are there to solve the problem is always a question marker so in such a cases you can go for approaches to solve a problem some theoretical part how you are going to analyze the test cases how we are going to move the implementation so while implementing the programs which things we have to consider okay so all these things will be there here okay all these things will be there here one second sir please wait yeah sorry for the delay right so suppose if I have any approach I mean suppose if I am seeing any problem how we can able to solve you know in our previous patch we covered that you can able to see see for example uh uni you have these four approaches are there okay so first we need to identify the problems for that we have to write the constraints is there any conditions or not and we have to generate the idea by observing the previous problem and you have to measure the complexity okay for if for a single problem if you are getting this idea for example consider in our situation I mean in our regular classes we are going to take Max of three numbers Max of three numbers if I am taking this problem we have around three to four situations three to four algorithms we can develop for this among these which is having good algorithm by measuring this time and space we have to analyze the complexity of these algorithms then you can select for example sir this first complexity is based but for remaining algorithms whatever complexity that we have calculated is not up to that Mark okay is not up to that market in such a cases what we can do we have to provide implementation for this first algorithm what you have written so for that we have to write a coding and later you need to test because you need to check whether the algorithm is working properly whether the program is working properly for all possible inputs or not so for that you have to go for testing also these are nothing but approaches to solve the problem so of course it is some small theoretical problem that we are going to discuss here and to get some idea to get some idea how our programs will be we are going to take some 30 sample programs okay we are going to take some purpose sample programs so we will try to write algorithms what are the possible ways for solving that problem and we will implement and we will Implement those programs in Python okay sir can you please confirm my audible is my voice is clear clear yes it is it went up and down for a second sometimes it is breaking okay okay so now it is okay yeah right okay good so now um yeah so here we are going to take some sample algorithms and we will try to solute that algorithms for example sir I have a prime number application is there how to write a prime number how to check whether the given number is prime or not first we will write some algorithm for that there are multiple ways are there right one is we can use looping statements one we can use a recursion like that we have multiple approaches up there we are trying to solve that problem uh by using different different methods okay so like just to get a basic idea okay we are going to cover 30 programs with this all the python fundamentals we are going to recall then by default some inbuilt data structures are there in Python right so every data type like integer float complex Boolean everything will act as a data structure okay in Python especially so there are some inbuilt data structures are there on top level we can say string data structure list data structure double data structure set data structure okay dictionary these are five inbuilt data structures are there in detail with the examples we are going to cover all these data structures maybe you can able to feel this is a python fundamentals up to this these are two things we are going to cover as a part of python fundamentals so these five chapters are completely related to the introduction to this data structures and algorithms so someone is asking sir what is the prerequisite for this course compulsory you should know minimum you should have minimum knowledge in Python then only you can able to uh uh then only you can able to continue this okay so with this first five chapters we are going to give the review of this pythons are up to this then we are going to start a data structure list data structure means what how we can work with this list data structure then so what is mean by list and what are the various operations that we can perform on list of course it is not inbuilt we are going to we will take the help of inbuilt and we will try to sort out so what are the possible ways are there okay so next and after that uh programs on list data structure programs on Matrix see in the data structures the main agenda is nothing but understanding the theory concept how you can bring that theory concept into the Practical World further two we need to practice some programs so here we are going to concentrate on programs as well then string data structure so n number of questions are there on string how you can think how you are going to get the idea behind that problem suppose if I am getting a problem like I have a sentence in that every vowel I have to convert it into uppercase remaining consonants should be replaced as it is so in that case you need to think the algorithm right then you have to implement how you can able to take the I mean how you can enable to write such type of course so those things we are going to discuss after this so then after these so there is one more chapter is there called sorting sorting and searching sorting and searching so there are different here I am planning to provide 50 applications 50 applications purely on this small small Charter examples to Big examples how you can able to perform sorting how to use a searching there are different types of sorting techniques are there around 10 to 15 sorting techniques are there in detail in detail so when we have to go for which sorting in detail we are going to discuss okay so next and after that recursion okay so backtracking divide and conquer these three things comes under one umbrella sir recursion and its application means what so a function or a method which is called by itself so what kind of applications we can go for this recursion best example Fibonacci Sequence generation prime number application factorial of the given number these are some we the known applications for us and there are some inbuilt applications also there like the stack frames how it is going to be maintained so next and after that suppose if I want to reverse a string by using recursion yes we can do sir I want to count how many characters are there is the string yes we can do sir I have a big three data structure is there I want to visit each and every uh node present in that a particular tree how you can able to visit one by one how we are going to see okay so that is based on recursion only sir I want to perform search operation yes you can use recursion like the pure data structures 99 we are going to implement with the help of recursion only in recursion there is one small Advantage is there backtracking backtracking means what when you are keep on moving to search for a path suppose if the path is not available then what will happen immediately you can come back sir so that backtracking we can able to apply okay sir one second one second right so we are going to see how this backtracking is going to work backtracking means you want sir I am keep on moving I I have some Source day is there here and I have some destination is there here sir I am keep on moving okay I forgot in this I am going to searching for the solution here I have not got the solution then I can move back and we can find some other path for this solution so do you know when we are moving if you are getting the solution or if you are not getting the solution there is an option to go in the reverse direction also do you know very very important and very very beautiful concepts of this one backtracking there are n number of applications are there maybe in our previous demo also I have shown young Queen's 8 Queens of problem like that anyway you can refer that videos If you want to get the clarity but I am not going in detail so because we rescheduled the demo that's why just the basic purpose I am explaining then divide and conquer it is also your biggest advantage in data structure suppose if I have a problem a big problem is there I was unable to find the solution for this problem sir is there any way to break this problem into two pieces yes sir again this is a big problem for me can I divide this problem into individual pieces I can divide this problem into individual places sir I got the solutions okay I got the solutions here sir can I combine these Solutions yes we can do that okay so do you know these kind of a process this kind of a process is called as what's a divide and conquer dividing an algorithm into individual steps and later combining these things is nothing but divide and conversor next as you know that we have linked list concepts are there which is very very important and real time also there are n number of applications are there with the help of this link list maybe if you take any media player uh like VLC or any Spotify or any any application do you know the songs will be there the songs will be there in the queue okay to operate that we will go for next song a previous song just for your understanding purpose I am feeling so those are we can say linked list that means one song is connected with another song you can move in the forward Direction you can move in the reverse Direction so we have n number of possibilities are there something like array what we have discussed okay so we have different types of linked lists are there so here single link list double link released circular single linked list circular double equal list so today just I want to provide some small code snippet for this single linked list okay just a small code snippet I want to provide so up to this whatever week covered just up to this whatever I demonstrated is it clear for you people yes up to these syllabus whatever I covered is it cleared for you people just syllabus explanation up to this yes sir yes I request everyone to please yes yes I'm not seeing any responses from your side in the chart window yes yes right so just I want to demonstrate okay one simple algorithm for you people right sir do you know maybe you people are not going to get a Clarity on this but um try to understand okay sir link it means water very simple sir just try to understand at the top level don't go in detail because we have a separate chapter is there there I will discuss in detail so do you know there are two types of nodes are there in our data structure especially in the link list so do you know this is one day one one type of node this is another type of this is another type of node like we can represent the data in this node format sir it is also a format of node okay okay I can say this is nothing but also a format of node but here in this node sir how many fields are there this field is called as data field which is used to hold the data this one do you know we are calling it as a next field okay first one is called as a data field and the second one is called as a next field what data field is going to do data field is always representing the data which it is holding so what is the next field is going to do just now I explained right in the case of uh songs in the media player one song is connected with another song for example assume I I have given some task to some small kids or a kids can you please stand up on the line so can you please hold your hand with your friend's hand so one by one one by one like that you have to hold and you need to form in a form of a chain then what will happen first student of one hand is holding second student second kid one hand and second kid another hand is holding so third kid and like a one hand is connected with another hand right in the same way in data structure one node can connect to another node sir how that connection is possible by using this next by using this next like that we have sir similarly this is okay but why these three fields are there in this Middle Field we are going to hold the data and in these we are going to hold next next node connection and in this do you know we are going to hold a previous code previous node connection like two-way Direction like in traffic so one way path two-way path will be there right so one way means what so the vehicles can move only in the One Direction okay I can say this one is the best example so in this case both the directions are there you can move in the uh One Direction other direction possibility is also there so that means so how you are going to move forward by using this next how you can move backward by using this previous okay like this we have sir don't worry we will see some applications also related to these in detail in our upcoming classes okay sir I want to represent this in the form of uh python python in the form of a python structure I want to take how you can do sir anyone so please make sure that you should have clear idea about how to write classes all these things in your python okay of course even if you are not good at this particular concept don't worry minimum some 10 to 15 minutes I will give the uh what is mean by class how to create objects at least some 20 to 30 minutes clear explanation will be provided there and then I am going to demonstrate the rest of the things don't worry but as of now try to concentrate at the top level so class node is there okay class node is there so how to define this class very simple sir we have to write a Constructor okay we have to write a Constructor which is taking self under the next so there I am going to assign so self dot okay self dot data is equal to the data which you are passing the data which you are passing under self dot self dot next is equal to Sir null self is something it is representing the current objective self is nothing but something it is representing the current object itself so current object in the sense what the object which is executing especially the python people can understand this sir I can say this is nothing but structure of okay so single okay single node single node structure of a single node sir how I can represent a structure of double node so structure of double node which is used in double linked list very simple sir here also we will have a class node will be there so here also we will have a class node will be there here and we are going 2 to initialize that uh node so where once if you initialize what will happen it is going to be assigned with it is going to be assigned with in any direction we can pass but let it be previous underneath so whenever an object got created these things will be activated sulfur data data is equal to the data which you have given under so self dot to previous is nothing but initially I am going to take a previous field is nothing but null so self dot so next next fold is also sorry not null sir we don't have any null concept so I thought that it was Java so null concept is not there just in the place of null you have to use which one none sir this is nothing but what we have sir I want to create one node I want to create one node how you can create the very simple friends N1 is equal to I am going to take a node so how many values I am passing for example 10 comma none I am passing 10 comma 99 passing okay uh one second so here let us take next okay so here let us take previous so here let us take next okay because whatever data that you are giving whatever next node you are giving like that I am going to take sorry N1 is there now I want to create another node N2 N2 sir how will I enable to create another node sir this is second node do you know sir second node we have 20 we have 20. and the next field is none sir N3 third node I am creating so where 30 and the next field is nothing but none sir of course this one we are going to see in detail please don't worry just observe in these three lines okay so what what happened we got the three notes right we got the three nodes this is the first node and this is the second node and this is the third node like we have three nodes are there like we have three nodes are there sir this one next field is none and assume the data is nothing but Authority so this one next field is none the data is nothing but a 20 this field next node is none and data is nothing but a 10 like this we have so I can say this is number one and this is nothing but node N2 and this is nothing but naughty N3 like this we have like this we have so now do you know what is happening here sir I want to connect um N1 I want to connect N1 with N2 I want to create N1 connect N1 with N2 so that means what here just we need to remove this none and you have to make a link between these two notes right sir in in sentence how you can do that N1 next field is nothing but N2 so N1 next field is nothing but N2 sir can I write like this means no programmatically it is not possible because whenever you are taking next field as N2 N2 should be available first sir okay right then only you can make the pointers sir similarly in the same still I want to connect N2 with N3 so how you can connect N2 with en3 N2 next field is nothing but N3 sir en2 next field n to next field is nothing but N3 so means what you have to create N3 at the very beginning sir don't worry this is just for numbering purpose you can write in any direction but these kind of Concepts we are not going to implement directly uh inserting the node at beginning inserting the node in a single linked list at the ending inserting the node in a single linked list in the middle like we are going to discuss OK not in detail okay here we want to create nodes like that just for your understanding purpose I am drawing this diagram under this code snippet can you please confirm what is mean by this is a single linked list double linked list how the nodes are created is this a terminologies are clear for you people friends please confirm yes my way of explaining this linked list Concepts will be in this style so try to concentrate on that way so don't ask in detail about this how these classes are created all these things we will discuss in our future classes okay clear sir everyone please confirm uh sir I couldn't understand the difference between singular and double node um sir nothing sir in the case of single node we will have only two fields are there okay one is nothing but data which is holding our actual content next one is nothing but next node which is connected to the next node of same type in the case of double uh node we will have an extra field will be there what is the Textra field previous node don't go in detail so just imagine the terminologies that is sufficient because how to create node what is mean by node theoretical definition multiple examples we will discuss in our future classes just at a top level try to understand because these are the demo classes right here we are not starting the actual class so because these things we are going to cover in detail in the link list minimum some seven to eight hours we are going to spend only on Linker list there you will get in detail sir around 20 to 25 operations we will perform on Linker list okay clear sir foreign all right uh you can compare this one with our normal scenario if you have if you take a student class so do you know what a student class can contain student class can contain Hall ticket number name of the student email ID okay mobile number all these things are WhatsApp these are the properties of that particular student but there is one more property we can maintain what is that the property sir maybe parent sir uh what is a parent of that particular student you can connect it to the parent class you can connect it to the parent node because parent is also a person right you can connect it to that node so which contains again name mobile number okay some email ID some uh properties like that okay for that particular object also parent will be there like that you can connect it is a family tree right in the same way like this it will be there sir right sir I am going for the next small application in this Linker list sir don't feel it is very difficult it is very easy Once if you go to the clinical list concept just for your understanding I am telling sir I want to insert inserting a node in a single linked list I have single linked list is there okay I want to insert a small node into that okay inserting a node into single link release there are multiple cases are there so inserting a node okay so atom first in a single Linker list after last in a single Linker list at any position in a single lingual list I am not going for all these things so I want to explain inserting a node at first location in the single link list this is nothing but the concept what we have let us see how you can able to do this let us see how you can able to do this sir for these I want to define a function what is that function is ADD underscore first add underscore first where we are going to take self okay next and after that data or value anything you can provide this is a function we have to write this code okay but before writing this small code just assume we have some linked list is already existed okay single linked list is already existed with how many nodes three nodes are there okay single Linker list is already existed with some three nodes so first node is connected to this next node and the second node is connected to this third node okay under last node the field is nothing but a none like this we have and assume so there is one special pointer will be there sir which is always representing the first node in a linked list that field name is nothing but header so one more linked list is available with name head with name head so unfortunately it is not connected to anything that means my single linked list is empty okay my single Linker list is empty my single Linker list is empty like we have two cases are there now I want to add a new node I want to add a new node at the very beginning of a single Linker list I want to add a new node at the very beginning of single Linker list how many possible ways are there two cases we have what is a first case sorry if there is no element then what will happen whatever node that you are creating whatever node that you are creating this will become okay this will become very first node this will become very first node right that's all this link will be gone and assume the data is nothing but a 10. so how to write that here I want to create a node new node is equal to so node off I am passing the data whatever you have given and the next field as a none just now we have seen how to create a node sir this is the class for that so it is taking data undernext what is the data that I have given so this is the data and the next field is nothing but another like that we created now I am checking array in my single Linker list there is one special pointer is there called Head suppose if it is equal to none then what is the meaning so that particular single linkle is the easy empty right in such cases so your self dot head will become the node which you created that's all come out from this because our job got completed if linked list is not existed then whatever node that you have created there is a name for this what is the name of this node new node whatever node you have created that will become your new node then you can come out from this sir already I have linked list already I have seen lingual list like 20 30 40 like this I have so then I want to create a node at the beginning just for our understanding I am writing here like this I have so you created a new node this will become new node and the next field is none like this we have but our actual linked list is starting from here how we can connect these two how we can connect to these two if this condition is not satisfied then this is the possibility right if a head is there then we have to write some other code if head is not there this is the code sir assume head is there so that means you want here we have to continue since it is a return it will come out from this if it if the condition is not satisfied the rest of the lens no need to write any else sir sir here what I am going to do your new node is there right your new node next field I am going to assign to self dot header okay that means what we are establishing this link your new node is nothing but this one its next field is appointing to self dot heavy so our work is not completed because which is head here now this one but actually once if you insert a new node into the linked list which will become header this one will become header this one will become head this one will become head that's why what I am going to do here is a service cell for DOT ahead will become the new node which you created that means automatically this link will be config okay now this is nothing but the head model like a simple code sir I think with these if you understand at least 20 percent in this whatever I explained with the help of diagram with the help of code if you understand 20 sir it is a sufficient rest of the classes we can enjoy like anything can you please confirm everyone is the concept is clear for you people I request everyone to please respond is the concept is a clear up to this any queries if you are having any queries please feel free to ask your queries what id you plan to use in this course we are going to use different IDs here as of now basic Notepad I mean this edit Place sometimes Sublime text sometimes uh Pi jump okay Jupiter notebook like this we are planning here ID is not at all a matter here we need to concentrate more on Theory parts and how we are going to provide implementation so in the project implementations mainly we are going to focus on ID sir because different different companies are going to use different different IDs they will purchase licensed versions and they will dump all their projects in that particular locations and they will work on that okay right Sir with one small code I need to wind up today's session let us see so what is that code here is so simple program sir I want to find out Max of autonoms a small code I have I have to find out maximum of two numbers I want to write Python program for this I want to write Python program for this right I have a value is equal to in terms of input enter a value I accepted the value of a from the user B is equal to tint of input enter B value I accepted the value of a b from the user now what is our task we have to calculate a maximum of two numbers right sir I am going to I am going to write a code like this sir print in a formatted string I want to print the data so in a formatted string I want to take the message like a is equal to within flower brackets a comma B is equal to within flower brackets P under sir maximum by using maximum value by using version one okay is nothing but Max underscore version one by passing a comma like that we have to take sir heavy object printf sorry print in a formatted string a is equal to within flower bracket a what this flower bracket a is going to do at the time of executing a is equal to in this place the variable value will be substituted B is equal to in this the variable value will be substituted and maximum is nothing but by using portion 1 we are trying to calculate we will Define a function for this sir I want to define a function what is the name of the function Max underscore version 1 which I am going to take two numbers a comma B which I am going to take two numbers a comma B now what we have to do you need to find out maximum among these two sir how to find out you need to write a condition because if the value of a is greater than b and compared with the p if the value of a is a greater then we have to return a as the biggest number suppose if this condition is not satisfied then we are going to return b as the maximum like we have two options are there we can return a as a biggest number RB as a biggest number based on some condition we are going to write okay sir I want to run this code I need to test whether it is working properly or not how you can do just we can move to the test folder and py space I am taking test.py so it is asking enter a value 10 so enter B value 45 as you can see a is equal to 10 B is equal to 45 so maximum is nothing but 45 so now I am giving 10 and then so something like 30 minus 34 so in this maximum value is nothing but what 10 like we can calipers I think some idea you got how we are going to provide implementations for this sir don't worry continuation is there okay so still there are different versions are there for this program we will discuss that about these versions in the tomorrow's session sir can you please confirm is this small code snippet how we have written is it a clear for you people rawat actually the classes objects all these things you should have an idea but whenever we are taking uh whenever it is required I will give some 20 minutes lecture on classes but it is not included in our calls up Sir you you should know how we how to write the classes all these things any doubts friends please confirm up to this do you have any doubts no right then so then fine okay tomorrow okay tomorrow uh we are going to continue this tomorrow also demo session is there so tomorrow morning we are going to discuss a few more questions related to this uh data structuration I mean we will discuss a few more problems and uh some top level at least one dividend algorithm are starting our searching algorithms I will take and I will explain so maybe tomorrow I will stop explaining this normal Concepts from Wednesday I will start our actual syllabus okay the people who are willing to continue you can start making the payments for this course and you can get registered okay hello yes yeah I have one query um actually uh um in printer option um in Python we have one special print function is there called print formatted actually this is the string right at the time of execution at the time of execution a is equal to if you are taking anything within flower bracket that the value will be substituted at the time of execution sir okay so that is called as this one if you are not putting this in flower bracket it won't substitute the values it is a special representation okay yeah Sandeep you can contact it to this number our team will assist you right thank you sir tomorrow we will meet for the contribution yeah one more Point can you please go and snippet program and yes [Music] sir that's what I told if you are not using F my python is going to consider it is a normal string it will print as it is on the screen it won't give any substitutions so how you can able to replace these curly brackets will be defined python explicitly by using formatted string if you put F then only that values will be substituted like that they have designed the tags if you are not using F they want to substitute the values directly they will print like a is equal to flower bracket a like that it will print but actually a is equal to 10 if you want to get it then you need to f f means what format is string means what during execution of the program that string is going to be format with the values whatever you have given okay yes yes sorry your voice is formatted Stinger formatted formatted string okay yeah got it thank you yeah Deepak we will share the link once if the demo classes got completed till that we won't give any original link so after completion of demo classes we will share that links okay don't worry we have started but you can read this one also as a first class because in the last week and all just we have given only syllabus explanation that's all two classes completed you can treat this is also a first class no problem but if previous classes um you had discussed on the syllabus regarding right syllabus syllabus syllabus yes if you want tomorrow I will share that also ah yes can you please share that comments yeah yeah just in the tomorrow class I will share some yeah sure thank you it's right friends thank you see you tomorrow have a nice day bye okay bye thanks