hi engineering janta I am VAB Shukla and today we learn the code implementation of count sort and this is another video in the free DS series that we are building for you so that you thrive high in your career fine so let's dive in deep and understand how the code is implemented for count sort first of all what I'll do is I'll take a random array here any random array fine say one element is three then two then one then two then four then five so basically I have six elements here fine what you need to do is you pass this array in this particular array variable fine and in size what you pass is six which is the total number of elements in the array or the total size of the array now if you have seen the previous part then you know I need an output array so I'm initializing it here I need a frequency array which I'm calling count here so I'm initializing a count array if you haven't watched the previous part of it go ahead first watch that fine now what I'll do is I'll try and find the maximum element of this array and for you what I have done a small tweak in this code is that rather than finding out the complete range from the smallest to the largest element what I'll do is I'll just find out the largest element and from zero till that largest element I'll make an array I'll initialize an array and then in that every index can be corresponded to the variable or the value written in this array basic B yeah IND indes simple I'll show you how wait so what we do first is we initialize this as the maximum element initially and then we try and check for the maximum element in this particular Loop what I'm checking is what is the maximum element so I start from the one Index this is 0 1 2 3 4 and 5 so from this index I start the pointer and I start comparing it so max is currently this this is Max Fine currently so what I'll do is I initialize I with one I less than size which is six so basically it will run till this index five and I will keep on in incrementing then what will happen is if array of I is greater than Max then you update the value of Max fine so for this particular value array of 1 is actually two Max is three so this is not true this particular condition is not coming out to be true so this if block will not execute again move forward and till here this condition will not come out to be true why am I saying so when the ARR increments array of two which is the value is one one is not greater than three 1 greater than 3 this is false fine so again this will not execute then 2 greater than 3 again false the pointer here also will not execute fine so then when it comes here 4 greater than 3 when I is equal to 4 4 greater than 3 AR of I is 4 Max is still 3 so this time this comes out to be true fine this time it comes out to be true I'll erase all of that for confusion fine so this will happen in this manner that 4 greater than 3 is two why did I remove all that because that was creating confusion for you people I know that from the teaching experience so I just remove that fine so when I find this condition as true what I do is I update the max value so here Max is now array of five which is four so the new value of Max now Max is not three now Max is this fine Max becomes four now I again gets incremented you reach here again 5 is greater than 4 true fine when 5 is greater than four and this condition becomes true max is again updated so this is no more the max this is the max value so now you have your max value because now I will reach a value value that cannot proceed with the loop because after I = 5 in this Max execution I ++ happens and I becomes six so this Loop doesn't execute any further simple fine now what you do is you create a count array which is equal to the maximum of the element that you found basically what I'm saying is you create an array called count it's size goes till the maximum value which is five so what I'll do is from 0o to 1 2 3 4 and five to the index five it will go not till the size five remember the size of this array will become six if you correctly see the size of this array is six fine so what I have done is I found out the largest value and till the index represents that largest value I kept on writing the array what I'm saying through Loop is c i initialize I with zero I go till I less than equal to Max which basically means Max was 5 so I less than equal to 5 so I will go till the index 5 and then I will increment so count of I equal to 0 basically I'm initializing count with 0 values fine now what I'll do is in the next iteration I'll try and count the frequencies of these elements see in this I again start with zero I starts pointing out I'll remove all The Unwanted ink fine so in this case what is happening I is again zero I is pointing out here fine I less than size size is six so I will go till five till the last index and I is incrementing now count of array of i++ basically what I'm trying to do is every time I found the occurrence of an element more than once this count will automatically increment fine so what's happening here see every time you see all the values are zero every time I find an element the occurrence of that particular element increases at that particular index now see how that happens count of array of I I is zero fine I is zero in this case so count of array of zero now what is array of zero R of0 is three so what I'm saying is you write three in this place because the value is three so count of three should be incremented because I got three as the first value now you understand these indices are actually representing the values written inside this array at this particular position I'll increase the value because I found the value once so I'll make it one I have incremented this similarly when I find two I will increase I becomes 1 now when I becomes 1 count of array of one fine so this array of one is nothing but two the value that is represented by AR of 1 is two so what I'll do is I'll write two here now count of two is to be incremented I increment it now so count of two is here fine so I increment and in the similar manner I keeps on pointing out now I reaches here fine you find out one increase the count of one now I goes further I points here again two is found so when I equals to three now I'll represent it again through this so that no confusion happens at your hand fine when I is equal 3 count of array of I which is three should be incremented fine now array of three is nothing but count of again if you see two count of two should be incremented this is already one now I increment it again so what happens here is two if you carefully see this is the frequency of two in this array now you move further I moves further count of four should be incremented we found four ones let's increment it out we make it one count of I moves further this is pointing here count of five should be incremented now if you carefully see in this count array you have one zero value which is at zero Au index so you have no zeros in this that is why Zer is representing the zero occurrence now if you correctly remember I told you that we will have a prefix sum array okay so I'll show you what prefix sum array is and we'll basically update this count array only as prefix sum aray see what will happen in this if you carefully see what I'm doing is I'm adding the value in the previous memory location of count to the next memory location what does this mean what does this statement mean I'm starting from the first index fine I'm going till the max index and I'm incrementing I ++ every time fine what does this statement means this statement means count of I equals to count of I + count of i - 1 this is what this statement implies fine this is just a way of writing this statement fine so what I'll do is in this array only I have started I from here so I'm incrementing this I from this particular index and what I'm doing is first index is as it is count of I equals to count of I + count of i - 1 so 1 + 0 is 1 I moves forward fine 2 + 1 is 3 I moves forward fine now if you see in this case count is getting incremented so this I is actually lying here fine this I is actually lying here and every time I'm incrementing it basically the values are changing here only I should rather change these values in this array only so that it helps you out because changes are happening in the count array only so zero was as it is when I pointed out at 1 1 + 0 is 1 2 + 1 is 3 so I'll make it three when it moves forward count of I equals to count of I plus count of i - 1 this is I -1 value so now this 1 becomes see count of I equals to count of I + count of i - 1 so if you carefully see count of I here is 1 plus count of i - 1 is 3 so you make it 3 + 1 4 fine to make this as four now I moves forward 1 + 4 5 and then again I moves forward 1 + 5 is 6 so this is the new value or the new updated values of count array fine so these are the new updated values now what I'll do is to sort the array now the main game begins find of decrementing remember remember in this particular place what you'll do is first of all you'll find in the output array create an output array first of all which was initialized in the first step itself remember I had initialized output array there fine so for this output array what I'll do is I'll go ahead and if you see for in I equals to size minus 1 now now I'll create the initial array here as well for your reference fine and in this let's fill up these elements 3 2 1 2 4 5 3 2 1 2 4 5 0 1 2 3 4 5 these are the values for the indices now size minus one is five so I initialize I with five which basically means I is pointing here at this Index this is the index at which I is pointing okay do not confuse it with this file I is pointing at this index till I becomes greater than equal to Z till I is greater than or till I becomes zero you go ahead with this Loop and every execution of this Loop basically decrements the value of I by 1 fine so I'm reverse traversing this array now fine what I'll do is when I is five output I'll write it here output count of array of I minus one so array of I is nothing but this value fine ARR of I is this value if you see so this is five 5 - 1 is four so array count of five fine count of 5 minus 1 now if you correctly see pardon it's not 5 - one it is first of all this fine so you need to First calculate this particular portion what is count of five go ahead see it in this in this particular array if you see count of five is six here the value at count of five is six so I'll go ahead I'll do the mathematics for this array of I which is array of five so array of five is nothing but five only and here count of 5 was 6 so 6 - 1 so this becomes output so output of five equals to 5 now these are the indices for output 0 1 2 3 four and five fine so at the fifth index if you carefully see output of five becomes five this is array of five which is five again I can understand a lot of fives are coming but do not get confused remember one thing that output of in the output array at the fifth index the value of the fifth index would be five fine so the value stored at the fifth index of output array would be five now after doing this what you have to do is Count array of I which is Count array of I is nothing but count of five only fine because array of I the value which is present at this particular index fifth index is five only so count of five should be decremented which means in this in this particular array in the count array what you need to do is you need to decrease this value by one fine now I go ahead again the execution happens because the loop hasn't finished its execution fine now we'll again G execute because I will now point to a different location I also gets decremented I starts pointing out here now in this case when I is pointing at 4 this becomes count of 4 - 1 fine so this becomes count of four output of count of 4 minus 1 you can think it in these terms what is count of four here if you carefully see count of four is again five only fine so what I'll do is I'll erase this whole place I'll write five and if you see carefully now 5 minus 1 is 4 so output of four output at the fourth index or the fourth index of output array would carry array of I which is array at Fourth Index this is the value which output at Fourth index would carry so now write four here and then again decrement the value here decrement the value here and make it four fine now I again changes its pointer I'll remove all this again and from start I'll again compute this see again I gets decremented and I starts pointing here now when I is pointing out at three what will happen see now the value of I is three so what I'll do is output now count of array of I basically count of what is array of I here array of I is represented here array of three array third index is basically representing two so count of two minus one fine this is the first portion of this expression so what is happening here I guess the bracket is not that good I'll make it even better so this is this much portion we'll talk about it later on basically this is nothing but this is the value which is at array of I which is two fine so count of two let's check what is count of two it is three here so what you have to do is is you have to put three here fine and output so this becomes output of two or output array at index two so at this particular index what you will store array of I which is again two so I store two here and then I decrease or decrement this particular value and make it two now when I move further in this only my I will again start pointing in a different place so I starts pointing here now right so when I points here this becomes this value becomes one array of I becomes one fine so when array of I becomes one this becomes output of count of one Min - one fine so what is this what is count of one count of one is one only fine so this is the value count of one is one only what will happen I'll write this 1 - 1 which is nothing but output of zero and at index zero what value is to be stored one is the value to be stored because array of I is one right now so I store at the zero of index I store one fine so I write one here let me make a good one this is still not a one that I can agree with so I'll write a better one this is good fine now after this what you need to do is decrement this value this was one what you need to do is make it zero fine now I again gets changed I decrements and what will happen here see I decrements and comes here I becomes one now when I becomes one count of array of one which is nothing but the value represented here which is two count of two again what is count of two now now if you carefully see the updated count of two was two only fine so I write here 2 - one 2 - one is nothing but output at 1 and the value right now represented by array of I is two this is the value so I'll store at output of one I'll store two which is this index so I store two here fine now if I go and I is again decremented and I comes to the last Junction which which is zero so for zero if you check when I becomes zero what will happen as AR of I represented by 0 is nothing but three so count of three this is three now fine so count of three minus one this is this particular portion count of three is four so I'll write it four 4 - 1 is nothing but three only fine so I'll write it three and here you have to store three because now this is the value that is to be stored so at this index you store three and if you carefully see now you have a sorted array at your hand and this is how the code implementation or the code of count sort works fine this is very very simple ban algorithm all you need to do is take a paper dry run this complete algorithm okay dry run it you do it yourself in the same manner that I did this will help you out fine if you have any kind of doubt go ahead ask me in the comment section and I'll help you out there also top three comments can get prepinsta Prime subscription for free so go ahead test your luck and you follow us on these social media handles so that you never miss any hiring update fine so whatever you learned in this video go ahead spread it if you're junior your senior if any of your peer is facing any problem in count sort and if you understood it through this video go ahead explain it to them fine keep doing good without any expectation universe will return that good to you in multiple forms and in magnanimous forms fine so thank you that's all for today