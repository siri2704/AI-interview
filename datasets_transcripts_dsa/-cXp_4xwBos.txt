yeah so welcome to DAOFT online training sessions myself Prakash Babu having almost 15 plus years of experience as a trainer so coming to these particular classes it is data structures and algorithms with Java in short form DSA with Java sir of course for this compulsory prerequisite is you should have minimum knowledge in Java because how we are going to write the programs uh every data structure concept and algorithms I'm going to demonstrate by using Java programming that's why so compulsory you should have knowledge in Java then only you can understand the concepts in detail Okay so after that see whenever I'm implementing the programs sometimes if any concept is there which you don't know then you can feel free to ask the queries if time permits I will elaborate this is nothing but just a small information I wanted to give next coming to these duration the duration of these sessions are almost 45 sessions 45 days or I can say 45 sessions we are going to plan maximum it will be on week days only sometimes I'm going to take on weekends also okay that I will give the prayer intimation and coming to fees for this batch the fees for this batch is rupees 3,000 where you will get recorded videos I mean whatever live class is happening so that recorded videos you will get at the same time running notes I'm going to share next coming to the syllabus sir what topics we are going to cover under this as a first thing we are going to see introduction to data structures and introduction to algorithms like what is mean by data structure what are all the classifications are there for data structure and what is mean by algorithm so what are the different types of algorithms are there how to select the best algorithm that part we are going to discuss here after that very very important time and space complexities sir if you are taking any algorithm how you are going to calculate time complexity how we are going to calculate space complexity that means what so for a given problem statement we can develop multiple solutions among those solutions sir which is the best solution how we can decide based on this complexity only that is nothing but a time how much time it is going to take for execution how much amount of space it will take it is going to decide okay sir 1 second please wait please wait for 1 minute yeah sorry guys so there was some emergency call from office yeah sir am I audible please confirm one more time yes sir you are audible yeah right so coming to the syllabus first we are going to see introduction to data structures what are all the various data structures available and algorithms how to develop the algorithms for any given problem if we are developing multiple solutions for the single problem which is the best solution how we can identify by calculating how much time it is going to take how much space it is going to take to complete its execution based on that we will decide this is the best algorithm for that compulsory time and space complexities we need to calculate time complexity means what how much time an algorithm is going to take to complete its execution space complexity means what how much space that algorithm is going to take i mean inside that how many variables we are using based on that and after this we are going to see array data structure after that string data structure from the language level they are giving some predefined facilities for every programming language so under that one of the container is nothing but array so to hold some objects in Java also we have arrays concept is there so and strings concept is there of course main intention of covering these two topics is to get how to prepare some small small algorithms suppose in the strings I'm going to take one application so they are going to give some requirement for that requirement I want to prepare a program whether you are using predefined libraries or whether we are using userdefined technique logic to implement that that we are going to see maybe for these two I'm not going to take live classes so I'm going to share some recording only for these two around some 10our class will be there so you need to focus on this if you are having any queries I will give one or two sessions to discuss about only these two topics then after this we are going to linked list linked list data structure which is very very important in Java it is called as a collections but in Java we have predefined methods are there for performing any operation but here we have to implement each and everything like single linker list double linker list circular single linker list circular double linker list these are the programs which we are going to cover under this so after completion of this we will see what is mean by stack data structure how to work with the stack and Q data structure how to implement that data structure by our own so after that we are going to see tree data structure so in that we are going to discuss binary tree how it is going to work then binary search tree so minimum some 10 or 15 applications on each and every tree we are going to see after that AVL3 so there are some small problems will be there in binary search tree to overcome those problems so we are going for we are going for AVL tree okay uh Ragur can you please be on um wait for some time after clarifying this after explaining the syllabus I will give the clarification okay after that we have so heap trees heap tree is also there it is also called as a priority Q it is also a kind of tracer how that priority Q is going to be constructed we will see so after that graph data structure how to create a graph how we can represent the graph okay like in detail information about this graph so these are nothing but the data structures what we are going to cover under this patch coming to algorithms sir how to develop algorithms we have recursive recursive algorithms are there what is meant by recussion around some 20 to 25 problems we are going to solve in this recursion after that backtracking backtracking algorithms how backtracking is going to work so next and after that divide and concare divide and conquer algorithms how to implement these algorithms so next and after that dynamic programming like in short form we are calling it as a DP so next and after that uh greedy greedy algorithms how we are going to implement that greedy algorithms after that we are going to see sorting algorithms like we have selection sort bubble sort insertion sort quick sort merge sort how to implement that and after that so searching searching algorithms also we are going to cover after that hashing in short form it is called as hash table how it is going to work so these are nothing but the topics which we are going to cover as a part of these data structures and algorithms with Java the completely it is a programming process sir everything with a live example I'm going to show you by typing each and every program with my own hands and I will show you how to execute if any problem is coming how to rectify that problem also we are going to see in detail this is nothing but the curriculum what we have so around 45 days we are going to spend to discuss in detail and there are some continuity will be Here like one concept is going to give continuation for another concept better to attend regularly spend some time and these algorithms someone is going to tell it is very difficult to understand yes but if you practice it will be very easy okay and someone is asking when your core Java batch is going to start definitely I will inform you once if it is started maximum in the evening we are planning for core Java batch so around 6:30 like that I will inform you whenever it is there okay right now if you are having any queries feel free to ask your queries then we will continue i have query about the timing timing it should be fixed or it changed uh no sir it is fixed the timings of the session is from 9:00 p.m to 10 p.m sometimes 10 or 10:15 also like I will take especially for link list for continuation purpose so as of now the timing is fixed maybe next week or after that so we may plan some other batch at 8:00 or 10:00 like that we will mix that batch with our batch but our batch timing is fixed it is from 9:00 p.m to 10 p.m there is no change in the timings sir will be and one more thing in weekend this timings may change for example in the weekend I may start half an hour before like 8:30 like that so I will take up to 10 or 10:30 or sometimes 9 to 10 or 10:30 like that so not every weekend only some doubts clarification session some easy topics these things will be there on weekends but our regular class will be on weekdays only every day minimum two to three topics yeah sir uh uh problems problems uh homework how much uh sir it is not a college level or school level thing uh to give homework the only thing is I'm going to give maximum input for example if you take u tree data structure uh binary tree for binary tree especially the construction of bi let me take binary search tree the construction of binary search tree is how to add the elements how to remove the elements that's all the only these are the two main operations after explaining these two main operations there are some utilities will be there like how to calculate height of the tree what is the minimum element element present in the tree maximum element okay and extend after that uh some of the elements present in that tree okay so is uh try to delete leaf nodes present in the tree like that there are some questions will be there around some 10 operations I will explain don't feel that these are the only 10 operations you can open lead code in that you can tag some something is there called binary such related programs you can expect 50 plus programs under that you can open one by one program based on the difficulty level try to select easy programs first and concept I already explained then sit for 1 hour or like that try to think and how to implement that you can you can get the clarity so that that work you need to do because if I explain every program this course leads to one year so that's why whatever required that knowledge at very top level I'm going to give so but don't see the solutions in the Google or chart GPT or anywhere else whatever algorithm I explained so same algorithm you can convert you will get that ability automatically no one is going to page so if if I know how to implement the program then doing some small small modifications is is a matter of uh one or two lines change in the code that that ability you will get that practice you need to do to become uh efficient in DSA or to become master in DSA okay any other questions someone is asking how many questions you are going to solve in this patch it is not something like problem solving it is the concept related thing so if you know how to build a link list they can give any kind of problem you can able to solve that concept i'm going to explain here okay and if I'm trying to solve the problems it is a never- ending process as I said earlier any other questions excuse me sir yes please sir in uh total course how much questions should we cover uh sir questions in the sense I can't give exact numbers are even I didn't counted actually uh uh the thing is one second I will show you the previous batch notes so that you can get some clarity so this is one see there is one concept called graph traversal So there are two algorithms are there like DFS and BFS how these algorithms are going to work with the help of example I'm going to show you uh please be on mute I'm going to show by taking an example how it is going to work I will execute the program and I will show you this BFS DFS related problems around some 20 to 30 problems will be there just you need to check from the internet and you need to do that got it like course uh they should start solving code right uh you have to start doing the programs if you want more programs to learn or more programs to practice uh you can go for lead code in the lead code all the programs will be there oh okay sir uh for lead code problems we have to first know data structures right yes definitely and uh after completing this uh course you have to start that or after completing the concept see once if I completed this stack data structure then you need to see the problems related to the stack and try to spend some time and try to solve that so whenever I am starting the stack immediately you should not start once if the total concept I covered means then you will get some clarity after that try to implement the programs which I explained then you can start by your own got it okay sir uh can we please tell us after this batch completion we are able to crack maximum DSA rounds of campus definitely sir but parallelly sir 30% effort I'm putting remaining 70% is in your hand because if I explain stack I'm going to take 3 hours session so in the 3 hours complete stack in and out I'm going to explain but if you are not practicing in the interview they are asking stack means definitely you won't write the program because if I'm writing see without a book without uh seeing anything I'm going to write stack program like that how you can become only thing is you need to practice so once if I take the class so after completion of this try to spend for 1 hour try to type the program by seeing the notes second time without seeing the notes try to do that like that if you are very good at a stack then start solving the problems related to the stack so you will get automatically confident to solve any DSA problem so interview people will search for those kind of things luckily in this scenario so only uh with fingers we can count such type of people especially for final year pre-final year students those who are studying in the colleges so whenever placement is going on so they can't understand uh why students are going to do like that so if they are asking the definition of stack they will give only that structure and maybe one or two operations that's all if they are giving any problem at least try to explain this problem is they can't so for that in and out complete concept you need to understand got it and Ragu definitely I will uh I will give the clarity on that new batch it is not yet framed okay clear any other questions please confirm any other questions if everyone okay then I will start please confirm clear don't sleep please respond clear guys yes I'm clear right so now um coming to these classes you are attending the demo session uh majority of students you may have a doubt sir are you going to repeat the topics which you are covering now definitely no I'm not going to repeat the topics those who are want to continue this course demo also very very important what you need to see in the demo is whether whatever concept explained by the trainer we can able to understand or not and is the explanation is clear or not those things you need to check that's all okay so don't decide that these concepts will be again repeating no I won't repeat these topics so I'm going to consider it as a regular class only but only for 3 or 4 days without paying the fee you can attend that's all after that you need to pay and you need to join for the continuation so at very beginning if I'm starting introduction and all definitions theory part this and all so it won't be demoite because everyone can able to understand the basic theory definitions that's why let us start first one topic called recursive algorithms this topic I'm going to start maybe it will take some um one week okay to discuss about this recussion generally I will take only four hours to complete this recussion but since it is a demo slowly I need to explain and I'm going to stick on to the cell timing also that's why so I'm going to start this recussion I will finish this recussion in this demo okay and some one or two regular classes after that I will take introduction okay so the first topic which we are going to discuss in this session is nothing but recussion Recussion or recursive recursive algorithms sir what is mean by recursion or what is mean by recursive algorithms let us see yeah class recording they will provide sir once if the session got completed they will upload in the Google drive they will give the taxes and the taxes will be only for uh uh 6 months okay see before giving the definition of this recursion algorithm I want to take one simple Java program okay you can consider it as example number one so what is that example is observe carefully i'm taking one Java program i will take in command prompt so there is one folder called test inside that folder I'm saving that now how to execute this we need to take the command prompt to execute these programs sir inside command prompt java c test java this is the command to compile your Java program my Java program got compiled there is no error java space test i'm executing the program and what is output that we got hello world this is the way how to execute Java program in general okay so I hope everyone having this idea because without this um continuing is not good so I want to do some modification in this what is that modification is main method main method execution started like this I am printing and one more line main method execution ended like this I want to print sir meanwhile what I'm doing is I am calling some method one i am calling some method one what is that method one public static void method one without any parameters inside this I am printing a message saying so method m1 method one execution started like this I'm printing so after that method M1 execution end date like this I'm taking so we have to decide what is the output of this program we have to decide what is the output of this program because that order is very very important so let us give um the overview of this how internally it is going to work sir these are methods right immediately what will happen java is going to create internally one stack to execute this particular method calls okay so internally it will create one stack which is maintained by JVM stands for Java virtual mission we know our stack is going to follow which technique lfo what is the meaning of this lost in first out the item which we are inserting last that item we have to take first the item which we are inserting last that item we have to remove first this is the technique which it is going to follow now how that entries will be how that entries will be so first what will happen jvm is going to start execution from which method main method so the control JVM is going to invoke this main method so the control will come here first it is seeing the SOP so this SOP is going to be printed first after that what will happen sir it is redirecting it is calling some other method it is calling some other method then immediately what will happen main method is calling some other method which is nothing but method one that entry will be there in the stack now from line number 10 the control will go to the line number three in method one what is the first line this is the first line what we have sir after that is there any method call no then immediately one more sop is there that will print sir any other statements no that means can I say method one completely executed then what will happen jvm is going to delete this entry because all the instructions are executed present in the method one then what is the recent call main method it will come to main so this part completed this part completed is there any other pending instructions yes let us execute that pending instructions after that what will happen that entry also will be deleted and it will report to the JVM so I completely executed the total things present in the stack and this stack will be destroyed by JVM this is the process what will happen whenever a method or whenever a function is invoked internally this everyone should understand the order how it is going to execute because based on this only backtracking algorithms are going to work tree data structure is going to work graph data structure is going to work because these calls how it is maintaining there I can't draw stack diagrams that's why in-depth knowledge must be required from here only so just only one method one main method I explain do you have any queries in explanation please confirm do you have any queries please confirm better you can start unmuting and speak then only you can understand well clear everyone yeah I am good right now let me check really is the output is coming or not that is main method execution started m1 execution started like that let us check main method execution started method M1 execution started method M1 execution ended main method execution ended like that we are getting this is nothing but how recursive calls are going to be happen i mean sorry not recursive how method calls is going to be happen slowly I will come to the recussion don't worry now let us do somewhat complicated in this what I'm doing sir very simple in addition to method one I'm taking one more method let it be method two method two method to execution started method two execution ended here from method one I'm calling method two now what is a flow of control sir I'm writing these line numbers in the output first the program execution starts from main method so first entry will be there in the stack called main so first line which is going to be printed is this one then it is calling some other method what is the name of the method m1 main method is calling m1 method so control will go to m1 how many lines are there three lines It will execute this one nothing but second line in the output then method two it won't execute because we are redirecting right so method one is calling method two it will come to here this is nothing but third line is there any other method calls here no sir then what will happen method two execution ended message will be printed fourth line then after completion of method two who is the color of method two method one so first line completed second line completed any other line to execute yes third line so this line will be printed as a fifth line then what will happen it will delete this entry it will come back main method is there any pending instructions yes sixth line so main also will be deleted and report this is the way how execution is going to come sir please be on mute ankit now let us check really is it working or not have a look once so Java C test Java Java space test you can see main method execution started method M1 execution started method M2 execution started method Y2 execution ended method M1 execution ended method main method execution ended like that we are getting i hope everyone clear with this method calls any queries up to this please confirm clear hi sir actually I have so I understood this execution but how it became a stack so we are not taking the last uh we going from the main method only so first stack we are not creating Java is internally creating not only Java if you take any programming language wherever we are creating a function internally stack will be maintained so in the stack first which method we are calling JVM is calling main method right yes that entry will be there first okay okay then main method is calling which method m1 that will be there in the next then who is calling M1 m2 yes so after execution of M2 is there any instructions in M1 yes right yes so is it going to execute main method pending instructions or method one pending instructions method one because who called method one sorry who called method two method one who called method one main method right so always latest call we need that's why last in first out technique we are implementing here we are not implementing internally it follows okay understood madam now yes yes why I'm explaining this is in future we will get a method which is calling itself is called as recussion that's why to understand that basic knowledge must be required in this methods and how internally stack will be created maybe within one or two sessions you will get clarity in that okay now sir any other questions please confirm any other questions no right so with this I'm winding up today's session so tomorrow continuation will be there same link same timings 9:00 p.m join 5 minutes before I will start by 9:00 tomorrow we will see few more um programs related to this stack after that I'm going to give introduction to the recussion how recussion is going to work what is mean by base condition how to prepare that base condition also I will explain okay sir can you say this detail sir sir can you share this detail sir so content these are these are there already in the website sir but no problem just I will share in the chat window if you want you can copy paste yeah right guys see you in the tomorrow session sir can you also add u memory management sir sir memory management won't come here why memory management is required here on what purpose you are asking for sometime it will be asked in the interview that's why only no it is related to the language okay so if it is Java then JVM that memory management must be required in the JVM so here memory management is there but we are not required to focus on that Okay guys see you in the clarification only session or offlineation no there is there is only online session okay it is completely online sir right guys thank you yeah thank you