[Music] hello everyone welcome to codesoft in this video we are going to talk about the question largest number formed from an array so let's get started now the question says we are given a list of non-negative integers in the form of string and we need to arrange them in such a manner that they form the largest number possible so you are given some numbers in the form of an array you need to merge them and rearrange them in such a manner that the single number formed from them should be the maximum possible now the result should be stored in a string because it is going to be very large obviously because let's say we are having 100 elements in an array so the size or the length of the single integer form from them will be 100 in size so that will be very large so now let's talk about an example test case we are given an array that consists of four elements that is 54 546 548 and 60 so if we require a single output that should give us the entire the largest value out of these so that will be six six six zero five forty eight five forty six and fifty four basically we are following this order that is first we will place 60 then we will place 548 by so because 6 is greater than 5 and so that should be placed in front of 548 similarly 546 because 8 is greater than 6 and at last 54 because there is no third digit present in this so this is the order that we have to maintain at this point i think the question is clear and i would request you to pause this video and if you are not able to solve the question then please have a look at this video so what is the solution approach now the question is clear that we need to do some rearrangements out of this array so for rearrangements what we can do is we can apply the swot function but if we sort it it will give us just two options either ascending or descending and let's say we need the largest possible value so we can sort this array in a descending order but if we sort the array in descending order then 548 will be the greatest number out of all these four and that will come first but you can see in the solution first we need 60 which is not the greatest element so you can see sorting the direct sorting will not work here so we need to do certain modifications in our sort functions to to achieve this output so what we do is we use a comparator to modify our sort function so comparator is basically a function that helps us do a sorting in a in a particular manner right so what we will do is so normal sorting compares two numbers and picks the smaller element but our sort function what it will do is it will create two strings first thing it will append string one to string two and save it and then a pin string two to string one and save it so basically what it will do is out of the array it will pick up two elements okay let me explain it over here what are string comparator will do it will pick two two elements at a time so let's say first it picks these two elements then out of this it creates two different string and what the first one is 54 546 so it appends the second string to the first string and what will second one be it will be 5 4 6 54. so it appends the first string to the second one now it will compare both these value you can see this one is bigger because it has sixth in the third digit so this will be the bigger value it will pick this value and then next value will come and it will follow the again the same step that is creating two different strings by merging each one of them individually so first one will be 5 4 6 5 4 and then we will append the other string that is 5 48 the other one will be 5 4 8 5 4 six five four this will be the second string now again the third digit here is six and here is eight so we will pick this value this is our till now greatest value out of these three elements now we will pick the fourth value and again create two different strings so obviously when we will place 60 ahead that is 6 0 5 4 8 5 4 6 5 4. this will yield us a greater value and this is our required answer so this is how we will modify our sort functions so i hope the steps is clear now let me just show you how we will achieve this using the implementation so we have taken the string array of we have taken a vector of strings and we have saved all these four values in it initially now what we need to do is we need to sort them so i will use the stl sort function of vectors that will uh it will do uh arr.begin and it will go till ar dot n so this is the normal sort function that will sort us sort the array in an ascending order but we we want to modify it using a comparator so we will just add a comparator parameter at the end of this sort function now what we have to do we have to create our so a comparator now comparator is always a boolean type it compares to values and returns whether we want the bigger value or the smaller value okay so we create the bull comparator it takes two strings that is two values let them be string x and string y now what we need to do is we need to create two strings let the first one be x y the other one be y x so x y will be x dot append y the append is a normal stl function of string second one will be y dot append x so we have both the combinations now we want our maximum value so what we will do what we will do is we will check if x y is greater than y x that is the first value is greater we will return true else return false so this is our comparator function that compares two values and it basically merges two values in two different fashion and then compares in and returns the greater value and repeats it for the entire array so after this if i will just print my array that is i equals to zero i goes to length i plus plus and if i do crr see out arr i and this should give us the greatest value that we have got from this question so you can clearly see six zero five four eight five four six and five four this is the required value and this entire code just like 18 lines of code and this uh this solution is taking off and log in time because we are just sorting an element we are just sorting the array and sorting takes o of n log in time so this is the solution implementation i hope the question is clear to you so thanks for watching stay tuned to add more festoons into your knowledge guideline until then please keep subscribing thank you