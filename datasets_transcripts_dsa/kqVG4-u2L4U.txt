very much time them ask this question that how much DSA should be done like obviously nothing is enough but let's say if someone wants to just do the bare minimum of DSA then should they be doing this code Chef problems code forces problems like competitive coding as well or is doing lead code and around 600 700 problems enough for doing DSA I would say 600 700 is also too much of problems you need lot of time to solve so many questions right so again there are certain shortcuts available in the market so it's one of them is like my course on coding minutes I have two courses uh DSA Essentials which teaches you the basics of data structures from arrays to graphs and secondly if you know the basics there is a DSA level of course which teaches you which shows you a flavor of interview problems on different topics what are the kind of problems in West 1e class tables DP graphs uh greedy algorithms right so it gives you a flavor or just of the interview questions across all topics and there are certain books also which are popular one is cracking the coding interview by Gail leftman it has good a good collection of around 150 to 200 problems you can do that book there is a book by Nursery it is also a good book so it also has all the classical interview problems that are good enough to analyze the patterns which are frequently used in problem solving right so if you do like these courses or these books I think it's a good start at the otherwise if you're enjoying it if you have time then you can dive as much deep as you want into competitive programming right right from your experience pratik what have you observed that what are the most sort of asked topics if we talk about companies while hiring in India what are the most asked frequently Asked topics of DSA see as a like interviewer is free to ask anything right so you cannot read what interviewer is going to ask but given like the competition is increasing many people are preparing for DSA and other topics so it is more likely that the more trickier topics would be asked like so in DSA we consider graph is a tricky topic dynamic programming is a tricky topic because they they are not hard but they test your thing right so you have to think little more while solving problems on graphs dynamic programming and there could be problems which are using mix and match of Concepts maybe arrays combined with sliding window and hashing something of that cannot so less of a straightforward problems so more tricky problems can be asked right I'm not saying interviews will be hard so generally what I have felt I've given six seven rounds of dsat while I was getting shortlisted for Google so I did clear all the rounds so what I filled the level of problems was medium but uh you need like certain logical thinking to approach those problems okay so I did some problems in a brute way some I was able to optimize a little bit using binary search or using some other data structure so think of data structures and algorithm as a tool to solve problems okay so so if you think if you start thinking okay given this problem what are the tools I can use right so certain problems I will suggest they will have this wording in the question find minimum of the maximum sum of something right or do maximum of the minimum of something so there are many min max optimization problems right so one of I was also asked in in a Google interview so what I knew from my experience was that windmatch optimization problems are generally dynamic programming problems or their binary search problems so you have to narrow down the approach by looking at the problem statement right and this problem solved using graph can I solve it using DP can it's all using sorting so you have to think of iterate on the possible scenarios in your mind and then try to hit one of the solutions which you think will work well right so this is how I do it